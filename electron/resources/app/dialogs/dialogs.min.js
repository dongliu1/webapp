var sku;
var __extends = this.__extends || function(n, t) {
    function r() {
        this.constructor = n
    }
    for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i]);
    r.prototype = t.prototype,
    n.prototype = new r
}; 
(function(n) { 
	(function(t) { 
		(function(i) {
            var ot, bt, dt, f, st, ht, et, rt, ut, ft, ct, pt, wt, r, s, at, lt, c, yt, vt, it, a, v, y, h, gt, p, g, nt, tt, d, w, ni, kt, o, l, u, b, e, k; 
			(function(n) {
                n[n.none = 0] = "none",
                n[n.info = 1] = "info",
                n[n.warning = 2] = "warning",
                n[n.error = 3] = "error",
                n[n.question = 4] = "question"
            })(i.MessageBoxIcon || (i.MessageBoxIcon = {}))

            ot = i.MessageBoxIcon,
            function(n) {
                n[n.ok = 0] = "ok",
                n[n.okCancel = 1] = "okCancel",
                n[n.yesNoCancel = 2] = "yesNoCancel"
            } (i.MessageBoxButtons || (i.MessageBoxButtons = {})),

            bt = i.MessageBoxButtons,
            function(n) {
                n[n.none = 0] = "none",
                n[n.ok = 1] = "ok",
                n[n.yes = 2] = "yes",
                n[n.no = 3] = "no",
                n[n.cancel = 4] = "cancel"
            } (i.MessageBoxResult || (i.MessageBoxResult = {})),

            dt = i.MessageBoxResult,
            f = function() {
                function n() {}
                n._button = function(t, i, r) {
                    return {
                        text: t,
                        click: function(t) {
                            n._element.dialog("close", t),
                            n._closeByButton = !0,
                            r !== undefined && r(t, i)
                        }
                    }
                };

                n.show = function(t, r, u, f, e) {
                    var l, o, a, c, s, h;
                    for (u === undefined && (u = 0), f === undefined && (f = 0), l = t.split("\n"), n._element === undefined ? (n._element = $("<div></div>").addClass("message-box"), $("<span></span>").addClass("message-box-icon").appendTo(n._element), $("<div></div>").addClass("message-box-text-container").appendTo(n._element), $("<div></div>").addClass("clear-float").appendTo(n._element), n._element.dialog({
                        modal: !0,
                        autoSize: !0,
                        autoOpen: !1,
                        resizable: !1,
                        width: "auto",
                        close: function(t) { ! n._closeByButton && e && e(t, 0),
                            n._closeByButton = !1
                        }
                    })) : (n._element.dialog("destroy"), n._element.dialog({
                        modal: !0,
                        autoSize: !0,
                        autoOpen: !1,
                        resizable: !1,
                        width: "auto",
                        close: function(t) { ! n._closeByButton && e && e(t, 0),
                            n._closeByButton = !1
                        }
                    })), o = n._element, a = o.find(".message-box-icon"), a.attr("class", "message-box-icon"), a.addClass("message-box-icon-" + ot[u]), c = o.find(".message-box-text-container"), c.empty(), s = 0; s < l.length; s++) h = $("<span></span>").addClass("message-box-text"),
                    h.text(l[s]),
                    h.appendTo(c);
                    o.dialog("option", "title", r);
                    var y = n._button(i.res.ok, 1, e),
                    v = n._button(i.res.cancel, 4, e),
                    w = n._button(i.res.yes, 2, e),
                    p = n._button(i.res.no, 3, e);
                    switch (f) {
                    case 0:
                        o.dialog("option", "buttons", [y]);
                        break;
                    case 1:
                        o.dialog("option", "buttons", [y, v]);
                        break;
                    case 2:
                        o.dialog("option", "buttons", [w, p, v]);
                        break
                    }
                    o.dialog("open"),
                    setTimeout(function() {
                        return o.parent().find(".ui-dialog-titlebar").trigger("mousedown")
                    },
                    100)
                };

                return n;
            } (),

            i.MessageBox = f,
            st = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        modal: !0,
                        title: i.res.rowHeightDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("[name=row-height]").val(),
                                u,
                                r;
                                n.match(/^[0-9\.]*$/) ? (u = t._validateValue(n), u && (r = parseInt(n), i.actions.doAction("setRowsHeight", i.wrapper.spread, r), t.close(), i.wrapper.setFocusToSpread())) : f.show(i.res.rowHeightDialog.exception, i.res.title, 2)
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".row-height-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    var n = i.wrapper.spread.getActiveSheet(),
                    t = n.getRowHeight(n.getActiveRowIndex());
                    this._element.find("[name=row-height]").val(t)
                },
                t.prototype._validateValue = function(n) {
                    var t = !0;
                    return (parseFloat(n) > 9999999 || parseFloat(n) < 0) && (f.show(i.res.rowHeightDialog.exception2, i.res.title, 2), t = !1),
                    t
                },
                t
            } (i.BaseDialog),
            i.RowHeightDialog = st,

            ht = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        modal: !0,
                        title: i.res.columnWidthDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("[name=column-width]").val(),
                                u,
                                r;
                                n.match(/^[0-9\.]*$/) ? (u = t._validateValue(n), u && (r = parseInt(n), i.actions.doAction("setColumnsWidth", i.wrapper.spread, r), t.close(), i.wrapper.setFocusToSpread())) : f.show(i.res.columnWidthDialog.exception, i.res.title, 2)
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".column-width-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    var n = i.wrapper.spread.getActiveSheet(),
                    t = n.getColumnWidth(n.getActiveColumnIndex());
                    this._element.find("[name=column-width]").val(t)
                },
                t.prototype._validateValue = function(n) {
                    var t = !0;
                    return (parseFloat(n) > 9999999 || parseFloat(n) < 0) && (f.show(i.res.columnWidthDialog.exception2, i.res.title, 2), t = !1),
                    t
                },
                t
            } (i.BaseDialog),
            i.ColumnWidthDialog = ht,

            et = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        modal: !0,
                        title: i.res.standardWidthDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("[name=standard-column-width]").val(),
                                u,
                                r;
                                n.match(/^[0-9\.]*$/) ? (u = t._validateValue(n), u && (r = parseInt(n), i.actions.doAction("defaultColumnWidth", i.wrapper.spread, r), t.close(), i.wrapper.setFocusToSpread())) : f.show(i.res.standardWidthDialog.exception, i.res.title, 2)
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".standard-width-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    var t = i.wrapper.spread.getActiveSheet(),
                    n = t.defaults.colWidth;
                    this._element.find("[name=standard-column-width]").val(n)
                },
                t.prototype._validateValue = function(n) {
                    var t = !0;
                    return (parseFloat(n) > 9999999 || parseFloat(n) < 0) && (f.show(i.res.columnWidthDialog.exception2, i.res.title, 2), t = !1),
                    t
                },
                t
            } (i.BaseDialog),
            i.StandardColumnWidthDialog = et,

            rt = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        modal: !0,
                        title: i.res.standardHeightDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("[name=standard-row-height]").val(),
                                u,
                                r;
                                n.match(/^[0-9\.]*$/) ? (u = t._validateValue(n), u && (r = parseInt(n), i.actions.doAction("defaultRowHeight", i.wrapper.spread, r), t.close(), i.wrapper.setFocusToSpread())) : f.show(i.res.standardHeightDialog.exception, i.res.title, 2)
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".standard-height-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    var t = i.wrapper.spread.getActiveSheet(),
                    n = t.defaults.rowHeight;
                    this._element.find("[name=standard-row-height]").val(n)
                },
                t.prototype._validateValue = function(n) {
                    var t = !0;
                    return (parseFloat(n) > 9999999 || parseFloat(n) < 0) && (f.show(i.res.rowHeightDialog.exception2, i.res.title, 2), t = !1),
                    t
                },
                t
            } (i.BaseDialog),
            i.StandardRowHeightDialog = rt,

            ut = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        width: "auto",
                        modal: !0,
                        title: i.res.insertCellsDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("input[name='insert-type']:checked").val();
                                n === "shiftcellsright" ? i.actions.doAction("insertRightCells", i.wrapper.spread) : n === "shiftcellsdown" ? i.actions.doAction("insertDownCells", i.wrapper.spread) : n === "entirerow" ? i.actions.doAction("insertRows", i.wrapper.spread) : n === "entirecolumn" && i.actions.doAction("insertColumns", i.wrapper.spread),
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".insert-cells-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    this._element.find("input[type='radio']").prop("checked", !1),
                    this._element.find(".default-radio").prop("checked", !0).attr("autofocus", !0)
                },
                t
            } (i.BaseDialog),
            i.InsertCellsDialog = ut,

            ft = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        width: "auto",
                        modal: !0,
                        title: i.res.deleteCellsDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("input[name='delete-type']:checked").val();
                                n === "shiftcellsleft" ? i.actions.doAction("deleteLeftCells", i.wrapper.spread) : n === "shiftcellsup" ? i.actions.doAction("deleteUpCells", i.wrapper.spread) : n === "entirerow" ? i.actions.doAction("deleteRows", i.wrapper.spread) : n === "entirecolumn" && i.actions.doAction("deleteColumns", i.wrapper.spread),
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".delete-cells-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    this._element.find("input[type='radio']").prop("checked", !1),
                    this._element.find(".default-radio").prop("checked", !0).attr("autofocus", !0)
                },
                t
            } (i.BaseDialog),
            i.DeleteCellsDialog = ft,

            ct = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        width: "auto",
                        modal: !0,
                        title: i.res.groupDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("input[name='group-type']:checked").val();
                                n === "rows" ? i.actions.doAction("groupRows", i.wrapper.spread) : n === "columns" && i.actions.doAction("groupColumns", i.wrapper.spread),
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".group-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    this._element.find("input[type='radio']").prop("checked", !1),
                    this._element.find(".default-radio").prop("checked", !0).attr("autofocus", !0)
                },
                t
            } (i.BaseDialog),
            i.GroupDialog = ct,

            pt = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        width: "auto",
                        modal: !0,
                        title: i.res.ungroupDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find("input[name='group-type']:checked").val();
                                n === "rows" ? i.actions.doAction("ungroupRows", i.wrapper.spread) : n === "columns" && i.actions.doAction("ungroupColumns", i.wrapper.spread),
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".ungroup-dialog", r)
                }
                return __extends(t, n),
                t.prototype._beforeOpen = function() {
                    this._element.find("input[type='radio']").prop("checked", !1),
                    this._element.find(".default-radio").prop("checked", !0).attr("autofocus", !0)
                },
                t
            } (i.BaseDialog),
            i.UnGroupDialog = pt,

            wt = function(n) {
                function u() {
                    var r = this,
                    t = {
                        resizable: !1,
                        width: "auto",
                        modal: !0,
                        title: i.res.findDialog.title
                    };
                    n.call(this, "./dialogs/dialogs.html", ".find-dialog", t)
                }
                return __extends(u, n),
                u.prototype._FindAllFrame = function(n) {
                    var r = this,
                    u = function(n, t) {
                        if (r._findCells !== undefined) {
                            var e = t.addedCells._list[0]._ri,
                            u = r._findCells[e],
                            f = i.wrapper.spread.getSheetFromName(u.sheet._name);
                            i.wrapper.spread.setActiveSheetIndex(i.wrapper.spread.sheets.indexOf(f)),
                            i.wrapper.spread.getActiveSheet().setActiveCell(u.row, u.col),
                            i.wrapper.spread.showActiveCell(3, 3)
                        }
                    },
                    t = this._getData(n);
                    this._element.find(".findall-grid-container").addClass("show"),
                    this._element.find(".findall-grid").addClass("show"),
                    this._element.find(".findall-grid").wijgrid({
                        scrollMode: "auto",
                        allowColMoving: !1,
                        allowColSizing: !0,
                        data: t,
                        staticColumnIndex: -1,
                        staticRowIndex: -1,
                        columns: [{
                            headerText: "Book",
                            dataType: "string"
                        },
                        {
                            headerText: "Sheet",
                            dataType: "string"
                        },
                        {
                            headerText: "Cell",
                            dataType: "string"
                        },
                        {
                            headerText: "Value",
                            dataType: "string"
                        },
                        {
                            headerText: "Formula",
                            dataType: "string"
                        }],
                        selectionChanged: u
                    }),
                    this._element.find(".findall-description-label").addClass("show").text(t.length.toString() + "cell(s) found")
                },
                u.prototype._getData = function(n) {
                    for (var i = [], t = 0; t < n.length; t++) i.push({
                        Book: n[t]._workBookName,
                        Sheet: n[t]._workSheetName,
                        Cell: n[t]._cellName,
                        Value: n[t]._value,
                        Formula: n[t]._formula
                    });
                    return i
                },
                u.prototype._init = function() {
                    var n = this;
                    this._findWhat = this._element.find(".findwhat-input")[0],
                    this._within = this._element.find("select[name='within']")[0],
                    this._search = this._element.find("select[name='search']")[0],
                    this._lookIn = this._element.find("select[name='lookin']")[0],
                    this._matchCase = this._element.find(".matchcase-editor"),
                    this._matchExactly = this._element.find(".matchexactly-editor"),
                    this._useWildCards = this._element.find(".usewildcards-editor"),
                    this._option = this._element.find("button[name='option']"),
                    this._element.find(".findall-button").button(),
                    this._element.find(".findnext-button").button(),
                    this._element.find(".close-button").button(),
                    this._option.button(),
                    this._option.click(function() {
                        n._element.find(".column1,.column2,.column3,.column4").toggleClass("column-hidden"),
                        n._element.find(".row2,.row3").toggleClass("row-hidden"),
                        n._switchOptionExt(),
                        n._option[0].children[0].textContent = i.res.findDialog.option + n._optionExtend
                    }),
                    this._element.find(".findall-button").click(function() {
                        var t = [];
                        n._getSearchInformation();
                        if (r == null || r.SearchString === undefined) return;
                        t = n._within.selectedIndex === 0 ? n._findAll(i.wrapper.spread.getActiveSheet()) : n._findAll(),
                        t.length > 0 ? n._FindAllFrame(t) : (n._element.find(".findall-grid").wijgrid("option", "data", []), f.show(i.res.findDialog.exception, i.res.title, 2), n._element.find(".findall-description-label").addClass("show").text("0cell(s) found"))
                    }),
                    this._element.find(".findnext-button").click(function() {
                        n._getSearchInformation();
                        if (r == null || r.SearchString === undefined) return;
                        var u, o, e, t = n._findNext();
                        t != !0 && f.show(i.res.findDialog.exception, i.res.title, 2)
                    }),
                    this._element.find(".close-button").click(function() {
                        n.close(),
                        i.wrapper.setFocusToSpread()
                    })
                },
                u.prototype._switchOptionExt = function() {
                    this._optionExtend = this._optionExtend === ">>" ? "<<": ">>"
                },
                u.prototype._beforeOpen = function() {
                    r.SearchInformation(undefined, undefined, undefined, undefined, undefined),
                    this._findWithInCurrentSelections = !1,
                    this._activeSheetIndex = i.wrapper.spread.getActiveSheetIndex(),
                    this._activeCellRowIndex = i.wrapper.spread.getActiveSheet().getActiveRowIndex(),
                    this._activeCellColumnIndex = i.wrapper.spread.getActiveSheet().getActiveColumnIndex(),
                    this._optionExtend === "<<" && (this._element.find(".column1,.column2,.column3,.column4").addClass("column-hidden"), this._element.find(".row2,.row3").addClass("row-hidden"), this._switchOptionExt()),
                    this._optionExtend = ">>",
                    this._option[0].children[0].textContent = i.res.findDialog.option + this._optionExtend,
                    this._findWhat.value = "",
                    this._within.selectedIndex = 0,
                    this._search.selectedIndex = 0,
                    this._lookIn.selectedIndex = 0,
                    this._matchCase.removeAttr("checked"),
                    this._matchExactly.removeAttr("checked"),
                    this._useWildCards.removeAttr("checked"),
                    this._element.find(".findall-grid-container").removeClass("show"),
                    this._element.find(".findall-description-label").removeClass("show")
                },
                u.prototype._findNext = function() {
                    if (r.SearchString == "") return this._findRowIndex = -1,
                    this._findColumnIndex = -1,
                    this._findSheetIndex = -1,
                    !0;
                    var n = !1;
                    if (this._findWithInCurrentSelections) {
                        if (!this._isBlockRangeContains()) return this._findRowIndex = -1,
                        this._findColumnIndex = -1,
                        this._findSheetIndex = -1,
                        !1;
                        n = i.wrapper.spread.getActiveSheet().getSelections().length == 1 ? this._findNextWithinCurrentSelection() : this._findNextWithinCurrentSelections(),
                        this._findSheetIndex = i.wrapper.spread.getActiveSheetIndex()
                    } else if (r.WithinWorksheet) {
                        if (!this._isWorksheetContains(i.wrapper.spread.getActiveSheet())) return this._findRowIndex = -1,
                        this._findColumnIndex = -1,
                        this._findSheetIndex = -1,
                        !1;
                        n = this._findNextWithinWorksheet(i.wrapper.spread.getActiveSheet()),
                        n && (this._activeCellColumnIndex = this._findColumnIndex, this._activeCellRowIndex = this._findRowIndex, i.wrapper.spread.getActiveSheet().addSelection(this._findRowIndex, this._findColumnIndex, 1, 1), i.wrapper.spread.getActiveSheet().setActiveCell(this._findRowIndex, this._findColumnIndex), i.wrapper.spread.showActiveCell(3, 3)),
                        this._findSheetIndex = i.wrapper.spread.getActiveSheetIndex()
                    } else n = this._findNextWithinWorksheets();
                    return n
                },
                u.prototype._isWorksheetContains = function(n) {
                    var e, f, i = new t.SearchCondition,
                    u;
                    return i.searchString = r.SearchString,
                    i.searchFlags = r.SearchFlags | 8,
                    i.searchOrder = r.SearchOrder,
                    i.searchTarget = r.SearchFoundFlags,
                    i.sheetArea = 3,
                    u = n.search(i),
                    e = u.foundRowIndex,
                    f = u.foundColumnIndex,
                    e != -1 && f != -1 ? !0 : !1
                },
                u.prototype._isBlockRangeContains = function() {
                    for (var h = i.wrapper.spread.getActiveSheet().getSelections(), e, f = 0; f < h.length; f++) {
                        var u = h[f],
                        c = u.row,
                        v = u.col,
                        l = u.row + u.rowCount - 1,
                        a = u.col + u.colCount - 1,
                        o,
                        s,
                        n = new t.SearchCondition;
                        n.searchString = r.SearchString,
                        n.searchFlags = r.SearchFlags | 8,
                        n.searchOrder = r.SearchOrder,
                        n.searchTarget = r.SearchFoundFlags,
                        n.sheetArea = 3,
                        n.rowStart = c,
                        n.columnStart = v,
                        n.rowEnd = l,
                        n.columnEnd = a,
                        e = i.wrapper.spread.getActiveSheet().search(n),
                        o = e.foundRowIndex,
                        s = e.foundColumnIndex;
                        if (o != -1 && s != -1) return ! 0
                    }
                    return ! 1
                },
                u.prototype._getSearchInformation = function() {
                    var f = this._findWhat.value,
                    u, n, t, i;
                    return f == "" ? null: (n = 0, this._optionExtend === "<<" ? (u = this._within.selectedIndex == 0 ? !0 : !1, this._matchCase.prop("checked") !== !0 && (n |= 1), this._matchExactly.prop("checked") === !0 && (n |= 2), this._useWildCards.prop("checked") === !0 && (n |= 4), t = this._search.selectedIndex === 0 ? 0 : 1, this._lookIn.selectedIndex === 0 ? i = 1 : this._lookIn.selectedIndex == 1 && (i = 8)) : (u = !0, n = 1, t = 0, i = 1), r.SearchInformation(u, f, n, t, i))
                },
                u.prototype._getRowStartColumnStart = function(n, t) {
                    var u = t.row,
                    f = t.col,
                    i = t.row + t.rowCount - 1,
                    r = t.col + t.colCount - 1;
                    n == 0 ? this._activeCellColumnIndex == -1 && this._activeCellRowIndex == -1 ? (this._rowStart = 0, this._columnStart = 0) : this._activeCellColumnIndex < r ? (this._rowStart = this._activeCellRowIndex, this._columnStart = this._activeCellColumnIndex + 1) : this._activeCellColumnIndex == r ? (this._rowStart = this._activeCellRowIndex + 1, this._columnStart = 0) : (this._rowStart = u, this._columnStart = f) : this._activeCellColumnIndex == -1 && this._activeCellRowIndex == -1 ? (this._rowStart = 0, this._columnStart = 0) : this._activeCellRowIndex < i ? (this._rowStart = this._activeCellRowIndex + 1, this._columnStart = this._activeCellColumnIndex) : this._activeCellRowIndex == i ? (this._rowStart = 0, this._columnStart = this._activeCellColumnIndex + 1) : (this._rowStart = u, this._columnStart = f)
                },
                u.prototype._getFindWorksheetList = function(n) {
                    for (var u = [], f = this._activeSheetIndex, r, t = f; t < i.wrapper.spread.getSheetCount(); t++) u.push(i.wrapper.spread.sheets[t]);
                    for (r = 0; r < f; r++) u.push(i.wrapper.spread.sheets[r]);
                    return u
                },
                u.prototype._findWithSelection = function(n) {
                    var e, s, f;
                    this._getRowStartColumnStart(r.SearchOrder, n);
                    var o = n.row + n.rowCount - 1,
                    h = n.col + n.colCount - 1,
                    u = new t.SearchCondition;
                    return u.searchString = r.SearchString,
                    u.searchFlags = r.SearchFlags,
                    u.searchOrder = r.SearchOrder,
                    u.searchTarget = r.SearchFoundFlags,
                    u.sheetArea = 3,
                    u.rowStart = e,
                    u.columnStart = s,
                    u.rowEnd = o,
                    u.columnEnd = h,
                    f = i.wrapper.spread.getActiveSheet().search(u),
                    this._findRowIndex = f.foundRowIndex,
                    this._findColumnIndex = f.foundColumnIndex,
                    this._findRowIndex != -1 && this._findColumnIndex != -1 ? !0 : !1
                },
                u.prototype._findWithinWorksheet = function(n) {
                    var u;
                    this._getRowStartColumnStart(r.SearchOrder, new t.Range(0, 0, n.getRowCount(), n.getColumnCount()));
                    var e = n.getRowCount() - 1,
                    f = n.getColumnCount() - 1,
                    i = new t.SearchCondition;
                    return i.searchString = r.SearchString,
                    i.searchFlags = r.SearchFlags,
                    i.searchOrder = r.SearchOrder,
                    i.searchTarget = r.SearchFoundFlags,
                    i.sheetArea = 3,
                    i.rowStart = this._rowStart,
                    i.columnStart = this._columnStart,
                    i.rowEnd = e,
                    i.columnEnd = f,
                    u = n.search(i),
                    this._findRowIndex = u.foundRowIndex,
                    this._findColumnIndex = u.foundColumnIndex,
                    this._findRowIndex != -1 && this._findColumnIndex != -1
                },
                u.prototype._findNextWithinCurrentSelection = function() {
                    this._findRowIndex = -1,
                    this._findColumnIndex = -1;
                    var n = i.wrapper.spread.getActiveSheet().getSelections()[0],
                    t = this._findWithSelection(n);
                    return t ? this._contains(n, this._findRowIndex, this._findColumnIndex) ? (this._activeCellRowIndex = this._findRowIndex, this._activeCellColumnIndex = this._findColumnIndex, i.wrapper.spread.getActiveSheet().setActiveCell(this._findRowIndex, this._findColumnIndex), i.wrapper.spread.showActiveCell(3, 3), !0) : (r.SearchOrder == 0 ? (this._activeCellRowIndex++, this._activeCellColumnIndex = n.col - 1) : (this._activeCellColumnIndex++, this._activeCellRowIndex = n.row - 1), this._findNextWithinCurrentSelection()) : (r.SearchOrder == 0 ? (this._activeCellRowIndex = n.row, this._activeCellColumnIndex = n.col - 1) : (this._activeCellRowIndex = n.row - 1, this._activeCellColumnIndex = n.col), this._findNextWithinCurrentSelection())
                },
                u.prototype._findNextWithinCurrentSelections = function() {
                    this._findRowIndex = -1,
                    this._findColumnIndex = -1;
                    var n = this._mergedSelections,
                    f = new t.Range(n.row, n.col, n.rowCount, n.colCount),
                    u = this._findWithSelection(f);
                    return u ? this._selectionsContains(this._findRowIndex, this._findColumnIndex) ? (this._activeCellRowIndex = this._findRowIndex, this._activeCellColumnIndex = this._findColumnIndex, i.wrapper.spread.getActiveSheet().setActiveCell(this._findRowIndex, this._findColumnIndex), i.wrapper.spread.showActiveCell(3, 3), !0) : (r.SearchOrder == 0 ? (this._activeCellRowIndex++, this._activeCellColumnIndex = n.col) : (this._activeCellColumnIndex++, this._activeCellRowIndex = n.row), this._findNextWithinCurrentSelections()) : (r.SearchOrder == 0 ? (this._activeCellRowIndex = n.row, this._activeCellColumnIndex = n.col - 1) : (this._activeCellRowIndex = n.row - 1, this._activeCellColumnIndex = n.col), this._findNextWithinCurrentSelections())
                },
                u.prototype._findNextWithinWorksheet = function(n) {
                    this._findRowIndex = -1,
                    this._findColumnIndex = -1;
                    var t = this._findWithinWorksheet(n);
                    return t ? (this._activeCellRowIndex = this._findRowIndex, this._activeCellColumnIndex = this._findColumnIndex, i.wrapper.spread.getActiveSheet().addSelection(this._findRowIndex, this._findColumnIndex, 1, 1), i.wrapper.spread.showActiveCell(3, 3), !0) : (this._activeCellRowIndex = -1, this._activeCellColumnIndex = -1, this._findWithinWorksheet(n))
                },
                u.prototype._findNextWithinWorksheets = function() {
                    var e = this._getFindWorksheetList(r.WithinWorksheet),
                    n,
                    u,
                    t,
                    f;
                    for (this._findRowIndex = -1, this._findColumnIndex = -1, this._findSheetIndex = -1, n = 0; n < e.length; n++) {
                        u = e[n],
                        t = i.wrapper.spread.sheets.indexOf(u),
                        t != i.wrapper.spread.getActiveSheetIndex() && (this._activeCellRowIndex = -1, this._activeCellColumnIndex = -1),
                        f = this._findWithinWorksheet(u);
                        if (f) {
                            this._findSheetIndex = t;
                            break
                        }
                    }
                    return this._findSheetIndex != -1 ? (this._activeSheetIndex = this._findSheetIndex, this._activeCellRowIndex = this._findRowIndex, this._activeCellColumnIndex = this._findColumnIndex, i.wrapper.spread.setActiveSheetIndex(this._findSheetIndex), i.wrapper.spread.getActiveSheet().setActiveCell(this._findRowIndex, this._findColumnIndex), i.wrapper.spread.showActiveCell(3, 3), !0) : !1
                },
                u.prototype._contains = function(n, t, i) {
                    return t >= n.row && t <= n.row + n.rowCount && i >= n.col && i <= n.col + n.colCount ? !0 : !1
                },
                u.prototype._selectionsContains = function(n, t) {
                    for (var f = i.wrapper.spread.getActiveSheet().getSelections(), u, r = 0; r < f.length; r++) {
                        u = f[r];
                        if (this._contains(u, n, t)) return ! 0
                    }
                    return ! 1
                },
                u.prototype._findAll = function(n) {
                    this._findCells = [];
                    var t = [];
                    return t = n === undefined ? this._actualFindAllByBook(i.wrapper.spread) : this._actualFindAllBySheet(n)
                },
                u.prototype._actualFindAllBySheet = function(n) {
                    var y = [],
                    e = 0,
                    f = 0,
                    v = n.getRowCount() - 1,
                    a = n.getColumnCount() - 1,
                    o = -1,
                    h = -1,
                    u = new t.SearchCondition,
                    c;
                    u.searchString = r.SearchString,
                    u.searchFlags = r.SearchFlags,
                    u.searchOrder = r.SearchOrder,
                    u.searchTarget = r.SearchFoundFlags,
                    u.sheetArea = 3,
                    u.rowStart = e,
                    u.columnStart = f,
                    u.rowEnd = v,
                    u.columnEnd = a,
                    c = n.search(u),
                    o = c.foundRowIndex,
                    h = c.foundColumnIndex;
                    while (o != -1 && h != -1) {
                        var l = n.getCell(o, h),
                        b = i.wrapper.spread.name === "" || i.wrapper.spread.name === null ? "Default": i.wrapper.spread.name,
                        k = new t.Calc.Expressions.CellExpression(l.row, l.col, !1, !1),
                        p = i.wrapper.spread.calcService.unparse(null, k, 0, 0),
                        w = new s(b, n._name, p, l.text(), l.formula());
                        y.push(w),
                        this._findCells.push(l),
                        r.SearchOrder == 0 ? (e = o, f = h + 1, f >= n.getColumnCount() && e < n.getRowCount() && (e = o + 1, f = 0)) : (e = o + 1, f = h, e >= n.getRowCount() && f < n.getColumnCount() && (e = 0, f = h + 1)),
                        u = new t.SearchCondition,
                        u.searchString = r.SearchString,
                        u.searchFlags = r.SearchFlags,
                        u.searchOrder = r.SearchOrder,
                        u.searchTarget = r.SearchFoundFlags,
                        u.sheetArea = 3,
                        u.rowStart = e,
                        u.columnStart = f,
                        u.rowEnd = v,
                        u.columnEnd = a,
                        c = n.search(u),
                        o = c.foundRowIndex,
                        h = c.foundColumnIndex
                    }
                    return y
                },
                u.prototype._actualFindAllByBook = function(n) {
                    var v = [],
                    l = 0,
                    c = 0,
                    h = -1,
                    o = -1,
                    f = -1,
                    u = new t.SearchCondition,
                    e;
                    u.startSheetIndex = 0,
                    u.endSheetIndex = n.getSheetCount() - 1,
                    u.searchString = r.SearchString,
                    u.searchFlags = r.SearchFlags,
                    u.searchOrder = r.SearchOrder,
                    u.searchTarget = r.SearchFoundFlags,
                    u.sheetArea = 3,
                    e = n.search(u),
                    h = e.foundRowIndex,
                    o = e.foundColumnIndex,
                    f = e.foundSheetIndex;
                    while (h != -1 && o != -1 || f <= n.getSheetCount() - 1 && f != -1) {
                        u = new t.SearchCondition;
                        if (h != -1 && o != -1) {
                            var a = n.sheets[f].getCell(h, o),
                            w = i.wrapper.spread.name === "" || i.wrapper.spread.name === null ? "Default": i.wrapper.spread.name,
                            b = new t.Calc.Expressions.CellExpression(a.row, a.col, !1, !1),
                            y = i.wrapper.spread.calcService.unparse(null, b, 0, 0),
                            p = new s(w, n.sheets[f]._name, y, a.text(), a.formula());
                            v.push(p),
                            this._findCells.push(a),
                            r.SearchOrder == 0 ? (l = h, c = o + 1, c >= n.sheets[f].getColumnCount() && l < n.sheets[f].getRowCount() && (l = h + 1, c = 0)) : (l = h + 1, c = o, l >= n.sheets[f].getRowCount() && c < n.sheets[f].getColumnCount() && (l = 0, c = o + 1)),
                            u.rowStart = l,
                            u.columnStart = c
                        } else u.rowStart = 0,
                        u.columnStart = 0,
                        u.rowEnd = n.sheets[f].getRowCount() - 1,
                        u.columnEnd = n.sheets[f].getColumnCount() - 1;
                        u.searchString = r.SearchString,
                        u.searchFlags = r.SearchFlags,
                        u.searchOrder = r.SearchOrder,
                        u.searchTarget = r.SearchFoundFlags,
                        u.sheetArea = 3,
                        u.startSheetIndex = f,
                        u.endSheetIndex = f,
                        u.sheetArea = 3,
                        e = n.search(u),
                        h = e.foundRowIndex,
                        o = e.foundColumnIndex,
                        e.foundSheetIndex != -1 ? f = e.foundSheetIndex: f++
                    }
                    return v
                },
                u
            } (i.BaseDialog),
            i.FindDialog = wt,

            r = function() {
                function n() {}
                return n.SearchInformation = function(n, t, i, r, u) {
                    this.WithinWorksheet = n,
                    this.SearchString = t,
                    this.SearchFlags = i,
                    this.SearchOrder = r,
                    this.SearchFoundFlags = u
                },
                n
            } (),
            i.SearchInformation = r,

            s = function() {
                function n(n, t, i, r, u) {
                    this._workBookName = n,
                    this._workSheetName = t,
                    this._cellName = i,
                    this._value = r,
                    this._formula = u
                }
                return n
            } (),
            i.FindResultInformation = s,

            at = function(n) {
                function r() {
                    var t = this,
                    r = {
                        resizable: !1,
                        width: "auto",
                        modal: !0,
                        title: i.res.gotoDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var r = t._element.find(".goto-value-input").val(),
                                n = t._goto(r);
                                n === !0 ? t.close() : f.show(i.res.gotoDialog.exception, i.res.title, 3),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".goto-dialog", r)
                }
                return __extends(r, n),
                r.prototype._init = function() {
                    var n = this;
                    this._element.find(".goto-list").change(function(t) {
                        var r = t.target || t.srcElement,
                        i = r;
                        n._element.find(".goto-value-input").prop("value", i.value)
                    })
                },
                r.prototype._beforeOpen = function() {
                    var f = this._element.find(".goto-list")[0].options,
                    u,
                    t,
                    r,
                    n;
                    for (this._element.find(".goto-list").empty(), this._element.find(".goto-value-input").prop("value", ""), u = 0, r = 0; r < i.wrapper.spread.sheets.length; r++) if (i.wrapper.spread.sheets[r]._names !== undefined) {
                        t = i.wrapper.spread.sheets[r].getCustomNames();
                        if (t !== undefined) for (n = 0; n < t.length; n++) f[u++] = new Option(t[n].getName())
                    }
                    t = i.wrapper.spread.getCustomNames();
                    if (t !== undefined) for (n = 0; n < t.length; n++) f[u++] = new Option(t[n].getName())
                },
                r.prototype._goto = function(n) {
                    var h, e = -1,
                    u, s, o, r, t;
                    if (n === undefined || n === "") return ! 1;
                    for (s = this._element.find(".goto-list")[0].options, o = !1, t = 0; t < s.length; t++) if (n === s[t].textContent) {
                        o = !0;
                        break
                    }
                    if (o) {
                        for (r = i.wrapper.spread.getCustomName(n), t = 0; t < i.wrapper.spread.sheets.length; t++) {
                            r || (r = i.wrapper.spread.sheets[t].getCustomName(n));
                            if (r) {
                                e = t;
                                break
                            }
                        }
                        h = r.getExpression()
                    } else return f.show(i.res.gotoDialog.wrongName, i.res.title, 3),
                    !0;
                    this._gotoSheet = null,
                    u = this._getGotoRange(h);
                    if (this._gotoSheet != null) {
                        for (t = 0; t < i.wrapper.spread.sheets.length; t++) if (i.wrapper.spread.sheets[t]._name === this._gotoSheet._name) {
                            e = t;
                            break
                        }
                    } else return ! 1;
                    return e !== -1 && i.wrapper.spread.setActiveSheetIndex(e),
                    i.wrapper.spread.getActiveSheet().clearSelection(),
                    i.wrapper.spread.getActiveSheet().setSelection(u.row, u.column, u.rowCount, u.columnCount),
                    i.wrapper.spread.showActiveCell(3, 3),
                    !0
                },
                r.prototype._getGotoRange = function(n) {
                    var a = i.wrapper.spread.getActiveSheet(),
                    f = 0,
                    e = 0,
                    s = 0,
                    o = 0,
                    c,
                    r,
                    h,
                    u,
                    l;
                    return n instanceof t.Calc.Expressions.CellExpression ? (this._gotoSheet = a, c = n, f = c.row, e = c.column, s = 1, o = 1, c.columnRelative === !0 && (e += i.wrapper.spread.getActiveSheet().getActiveColumnIndex()), c.rowRelative === !0 && (f += i.wrapper.spread.getActiveSheet().getActiveRowIndex())) : n instanceof t.Calc.Expressions.RangeExpression ? (this._gotoSheet = a, r = n, r.isFullColumn ? (f = 0, s = this._gotoSheet.getRowCount()) : (f = r.startRow, s = r.endRow - r.startRow + 1), r.isFullRow ? (e = 0, o = this._gotoSheet.getColumnCount()) : (e = r.startColumn, o = r.endColumn - r.startColumn + 1), r.startColumnRelative === !0 && (e += i.wrapper.spread.getActiveSheet().getActiveColumnIndex()), r.startRowRelative === !0 && (f += i.wrapper.spread.getActiveSheet().getActiveRowIndex()), r.endColumnRelative === !0 && (o = r.endColumn + i.wrapper.spread.getActiveSheet().getActiveColumnIndex() - e + 1), r.endColumnRelative === !0 && (o = r.endRow + i.wrapper.spread.getActiveSheet().getActiveRowIndex() - f + 1)) : n instanceof t.Calc.Expressions.ExternalCellExpression ? (h = n, this._gotoSheet = h.source.getSheet(), f = h.row, e = h.column, s = 1, o = 1, h.columnRelative === !0 && (e += i.wrapper.spread.getActiveSheet().getActiveColumnIndex()), h.rowRelative === !0 && (f += i.wrapper.spread.getActiveSheet().getActiveRowIndex())) : n instanceof t.Calc.Expressions.ExternalRangeExpression && (u = n, this._gotoSheet = u.source._sheet, f = u.startRow, e = u.startColumn, s = u.endRow - u.startRow + 1, o = u.endColumn - u.startColumn + 1, u.startColumnRelative === !0 && (e += i.wrapper.spread.getActiveSheet().getActiveColumnIndex()), u.startRowRelative === !0 && (f += i.wrapper.spread.getActiveSheet().getActiveRowIndex()), u.endColumnRelative === !0 && (o = u.endColumn + i.wrapper.spread.getActiveSheet().getActiveColumnIndex() - e + 1), u.endColumnRelative === !0 && (o = u.endRow + i.wrapper.spread.getActiveSheet().getActiveRowIndex() - f + 1)),
                    l = {
                        row: f,
                        column: e,
                        rowCount: s,
                        columnCount: o
                    }
                },
                r
            } (i.BaseDialog),
            i.GoToDialog = at,

            lt = function(r) {
                function u() {
                    var t = this,
                    n = {
                        resizable: !1,
                        height: 550,
                        width: 640,
                        minWidth: 640,
                        maxWidth: 640,
                        minHeight: 550,
                        maxHeight: 550,
                        modal: !0,
                        title: i.res.nameManagerDialog.title,
                        buttons: [{
                            text: i.res.close,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    r.call(this, "./dialogs/dialogs.html", ".name-manager-dialog", n)
                }
                return __extends(u, r),
                u.prototype._beforeOpen = function() {
                    var r = this,
                    i = this._element.find(".edit-button"),
                    n = this._element.find(".delete-button"),
                    t = this._element.find(".names-grid");
                    this._updateFilter(),
                    t.wijgrid("option", "data", this._getData()),
                    this._allnames.length > 0 ? ($(i).button("enable"), $(n).button("enable")) : ($(i).button("disable"), $(n).button("disable")),
                    setTimeout(function() {
                        t.wijgrid("doRefresh", r._getData())
                    },
                    0)
                },
                u.prototype._init = function() {
                    var n = this,
                    e = this._element.find(".names-grid"),
                    u = this._element.find(".edit-button"),
                    r = this._element.find(".delete-button"),
                    s = this._element.find(".filter-select"),
                    h = function(t, i) {
                        n._selectedNameIndex = i.addedCells._list[0]._ri
                    },
                    l = function(t, i) {
                        var f = n._element.find(".sku-wijgrid-scroller"),
                        r = n._element.find(".sku-wijsuperpanel-statecontainer"),
                        o = parseInt(r.css("width")) >= 605 ? !0 : !1,
                        u = parseInt(r.css("height"));
                        o ? (f.css("height", u + 18 + "px"), r.css("height", u + 18 + "px")) : e.wijgrid("doRefresh")
                    },
                    o,
                    t;
                    e.wijgrid({
                        scrollMode: "horizontal",
                        allowColMoving: !1,
                        allowColSizing: !0,
                        height: "auto",
                        columns: [{
                            headerText: i.res.nameManagerDialog.nameColumn,
                            dataType: "string",
                            width: 150,
                            ensurePxWidth: !0
                        },
                        {
                            headerText: i.res.nameManagerDialog.valueColumn,
                            dataType: "string",
                            width: 152,
                            ensurePxWidth: !0
                        },
                        {
                            headerText: i.res.nameManagerDialog.refersToColumn,
                            dataType: "string",
                            width: 150,
                            ensurePxWidth: !0
                        },
                        {
                            headerText: i.res.nameManagerDialog.scopeColumn,
                            dataType: "string",
                            width: 150,
                            ensurePxWidth: !0
                        }],
                        selectionChanged: h,
                        columnResized: l
                    }),
                    o = this,
                    t = this._element.find(".filter-select")[0].options,
                    t.add(new Option(i.res.nameManagerDialog.filterWith.clearFilter)),
                    t.add(new Option(i.res.nameManagerDialog.filterWith.nameScopedToWorkbook)),
                    t.add(new Option(i.res.nameManagerDialog.filterWith.nameScopedToWorksheet)),
                    t.add(new Option(i.res.nameManagerDialog.filterWith.nameWithErrors)),
                    t.add(new Option(i.res.nameManagerDialog.filterWith.nameWithoutErrors)),
                    this._element.find(".new-button").button(),
                    u.button(),
                    r.button(),
                    this._newNameDialog = new c(this),
                    this._element.find(".new-button").click(function() {
                        n.close(),
                        n._newNameDialog.open("new", undefined)
                    }),
                    u.click(function() {
                        n.close(),
                        n._newNameDialog.open("edit", n._allnames[n._selectedNameIndex])
                    }),
                    r.click(function() {
                        f.show(i.util.format(i.res.nameManagerDialog.deleteAlert, n._allnames[n._selectedNameIndex].name), "Spread Designer", 2, 1,
                        function(t, f) {
                            var s, o;
                            if (f === 1) {
                                if (n._allnames[n._selectedNameIndex].scope === "Workbook") i.wrapper.spread.removeCustomName(n._allnames[n._selectedNameIndex].name);
                                else {
                                    for (o = 0; o < i.wrapper.spread.sheets.length; o++) if (i.wrapper.spread.sheets[o]._name === n._allnames[n._selectedNameIndex].scope) {
                                        s = o;
                                        break
                                    }
                                    i.wrapper.spread.sheets[s].removeCustomName(n._allnames[n._selectedNameIndex].name)
                                }
                                n._updateFilter(),
                                e.wijgrid("option", "data", n._getData()),
                                n._allnames.length === 0 && ($(u).button("disable"), $(r).button("disable"))
                            }
                        })
                    }),
                    s.change(function() {
                        var t = o._element.find(".names-grid");
                        n._updateFilter(),
                        t.wijgrid("option", "data", n._getData()),
                        n._allnames.length === 0 ? ($(u).button("disable"), $(r).button("disable")) : ($(u).button("enable"), $(r).button("enable"))
                    })
                },
                u.prototype._getData = function() {
                    for (var i = [], t = 0; t < this._allnames.length; t++) i.push({
                        Name: this._allnames[t].name,
                        Value: this._allnames[t].value,
                        "Refers To": this._allnames[t].refersTo,
                        Scope: this._allnames[t].scope
                    });
                    return this._data = new n.data.ArrayDataView(i)
                },
                u.prototype._parseValues = function(t) {
                    var s, o, e, c, l, u, r = "",
                    f, h;
                    if (t instanceof n.spread.Calc.Expressions.ExternalRangeExpression) {
                        for (s = i.wrapper.spread.getSheetFromName(t.source._sheet._name), o = t.startColumn, e = t.startRow, c = t.endColumn - t.startColumn + 1, l = t.endRow - t.startRow + 1, o < 0 && (o = 0, c = s.getColumnCount()), e < 0 && (e = 0, l = s.getRowCount()), u = s.getArray(e, o, l, c), f = 0; f < u.length; f++) {
                            for (h = 0; h < u[f].length; h++) r += u[f][h] === null ? '"",': '"' + u[f][h].toString() + '",';
                            r = r.substring(0, r.length - 1),
                            r = r + ";"
                        }
                        r = r.substring(0, r.length - 1),
                        r = "{" + r + "}"
                    } else t instanceof n.spread.Calc.Expressions.ExternalCellExpression ? (s = i.wrapper.spread.getSheetFromName(t.source._sheet._name), o = t.column, e = t.row, c = 1, l = 1, u = s.getArray(e, o, l, c), u.length > 0 && u[0][0] !== null && (r = u[0][0].toString())) : t instanceof n.spread.Calc.Expressions.BinaryOperatorExpression && (r = "{...}");
                    return r
                },
                u.prototype._updateFilter = function() {
                    var f = this._element.find(".filter-select"),
                    c = new t.Calc.ParserContext(null, i.wrapper.spread.referenceStyle(), 0, 0),
                    r,
                    s,
                    h,
                    u,
                    n,
                    e,
                    o;
                    this._allnames = [],
                    s = [],
                    h = [];
                    if (f.val() !== i.res.nameManagerDialog.filterWith.nameScopedToWorksheet) {
                        r = i.wrapper.spread.getCustomNames();
                        if (r !== undefined) for (n = 0; n < r.length; n++) e = i.wrapper.spread.calcService.unparse(null, r[n].getExpression(), r[n].getExpression().row, r[n].getExpression().column),
                        o = this._parseValues(r[n].getExpression()),
                        this._allnames.push({
                            name: r[n].getName(),
                            refersTo: e,
                            scope: "Workbook",
                            value: o
                        }),
                        r[n].getExpression() instanceof t.Calc.Expressions.ErrorExpression ? s.push(this._allnames[this._allnames.length - 1]) : h.push(this._allnames[this._allnames.length - 1])
                    }
                    if (f.val() !== i.res.nameManagerDialog.filterWith.nameScopedToWorkbook) for (u = 0; u < i.wrapper.spread.sheets.length; u++) if (i.wrapper.spread.sheets[u]._names !== undefined) {
                        r = i.wrapper.spread.sheets[u].getCustomNames();
                        if (r !== undefined) for (n = 0; n < r.length; n++) e = i.wrapper.spread.calcService.unparse(null, r[n].getExpression(), r[n].getExpression().row, r[n].getExpression().column),
                        o = this._parseValues(r[n].getExpression()),
                        this._allnames.push({
                            name: r[n].getName(),
                            refersTo: e,
                            scope: i.wrapper.spread.sheets[u]._name,
                            value: o
                        }),
                        r[n].getExpression() instanceof t.Calc.Expressions.ErrorExpression ? s.push(this._allnames[this._allnames.length - 1]) : h.push(this._allnames[this._allnames.length - 1])
                    }
                    f.val() === i.res.nameManagerDialog.filterWith.nameWithoutErrors && (this._allnames = h),
                    f.val() === i.res.nameManagerDialog.filterWith.nameWithErrors && (this._allnames = s)
                },
                u
            } (i.BaseDialog),
            i.NameManagerDialog = lt,

            c = function(r) {
                function u(n) {
                    var u = this,
                    t;
                    n !== undefined && (this._nameManagerDialog = n),
                    t = {
                        resizable: !1,
                        autoOpen: !1,
                        width: "auto",
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                u.close()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                u.close()
                            }
                        }]
                    },
                    r.call(this, "./dialogs/dialogs.html", ".new-name-dialog", t)
                }
                return __extends(u, r),
                u.prototype._afterClose = function() {
                    this._nameManagerDialog !== undefined && this._nameManagerDialog.open()
                },
                u.prototype._validateSheetName = function(t) {
                    var r = i.wrapper.spread.referenceStyle(),
                    f = new n.spread.Calc.ParserContext(null, r, 0, 0),
                    u = new n.spread.Calc.Parser(f);
                    return u._validateSheetName(t, r, !1) ? t: u._validateSheetName(t, r, !0) ? "'" + t + "'": null
                },
                u.prototype._beforeOpen = function(r) {
                    var s = this,
                    h = this._element.find(".name-input"),
                    y = this._element.find(".scope-select"),
                    p = this._element.find(".referTo"),
                    a = y[0].options,
                    w,
                    b,
                    k,
                    l,
                    u,
                    c,
                    v,
                    d,
                    o,
                    e;
                    for (y.empty(), a.add(new Option(i.res.newNameDialog.scope.workbook)), e = 0; e < i.wrapper.spread.sheets.length; e++) a.add(new Option(i.wrapper.spread.sheets[e]._name));
                    w = this,
                    b = function() {
                        var o = y[0].selectedIndex === 0,
                        a = y[0].selectedIndex - 1,
                        l,
                        u,
                        c,
                        e,
                        t;
                        if (h.val() === "") f.show(i.res.nameManagerDialog.exception1, i.res.title, 2, 0);
                        else if (s.selectedItem !== undefined && s.selectedItem !== null || r[0] === "new") {
                            s.selectedItem !== undefined && s.selectedItem !== null && (l = s.selectedItem.name);
                            if (! (r[0] === "edit" && h.val() === l)) {
                                u = o ? i.wrapper.spread.getCustomName(h.val()) : i.wrapper.spread.sheets[a].getCustomName(h.val());
                                if (u !== null && u !== undefined) {
                                    f.show(i.res.nameManagerDialog.exception2, i.res.title, 2, 0);
                                    return
                                }
                            }
                            c = new n.spread.Calc.Parser;
                            if (c._validateName(h.val())) {
                                if (r[0] === "edit") if (s.selectedItem.scope === "Workbook") i.wrapper.spread.removeCustomName(s.selectedItem.name);
                                else {
                                    for (t = 0; t < i.wrapper.spread.sheets.length; t++) if (i.wrapper.spread.sheets[t]._name === s.selectedItem.scope) {
                                        e = t;
                                        break
                                    }
                                    i.wrapper.spread.sheets[e].removeCustomName(s.selectedItem.name)
                                }
                                o ? i.wrapper.spread.addCustomName(h.val(), p.val(), 0, 0) : i.wrapper.spread.sheets[a].addCustomName(h.val(), p.val(), 0, 0),
                                s.close()
                            } else f.show(i.res.newNameDialog.wrongName, i.res.title, 3)
                        }
                    };
                    if (r[0] === "new") {
                        for ($(".scope-select").removeAttr("disabled"), this._element.dialog("option", "title", i.res.newNameDialog.titleNew), this._element.dialog("option", "modal", !0), this._element.dialog("option", "buttons", [{
                            text: i.res.ok,
                            click: b
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                w.close()
                            }
                        }]), h.prop("value", ""), y.prop("selectedIndex", 0), k = i.wrapper.spread.sheets[i.wrapper.spread.getActiveSheetIndex()].getSelections(), l = "", e = 0; e < k.length; e++) u = k[e],
                        v = i.SpreadUtility.getRangeType(u),
                        v == 3 && (o = new t.Calc.Expressions.RangeExpression, o.initBand(0, u.rowCount - 1, !1, !1, !0), c = i.wrapper.spread.calcService.unparse(null, o, 0, 0)),
                        v == 0 && (o = new t.Calc.Expressions.RangeExpression, o.initBand(u.col, u.col + u.colCount - 1, !1, !1, !1), c = i.wrapper.spread.calcService.unparse(null, o, 0, 0)),
                        v == 1 && (o = new t.Calc.Expressions.RangeExpression, o.initBand(u.row, u.row + u.rowCount - 1, !1, !1, !0), c = i.wrapper.spread.calcService.unparse(null, o, 0, 0)),
                        v == 2 && (u.rowCount === 1 && u.colCount === 1 ? (d = new t.Calc.Expressions.CellExpression(u.row, u.col, !1, !1), c = i.wrapper.spread.calcService.unparse(null, d, 0, 0)) : (o = new t.Calc.Expressions.RangeExpression(u.row, u.col, u.row + u.rowCount - 1, u.col + u.colCount - 1, !1, !1, !1, !1), c = i.wrapper.spread.calcService.unparse(null, o, 0, 0))),
                        c = this._validateSheetName(i.wrapper.spread.getActiveSheet()._name) + "!" + c,
                        l += c + ",";
                        l = l.slice(0, l.length - 1),
                        p.prop("value", l)
                    } else if (r[0] === "edit") for ($(".scope-select").attr("disabled", "disabled"), this.selectedItem = r[1], this._element.dialog("option", "title", i.res.newNameDialog.titleEdit), this._element.dialog("option", "modal", !0), this._element.dialog("option", "buttons", [{
                        text: i.res.ok,
                        click: b
                    },
                    {
                        text: i.res.cancel,
                        click: function() {
                            w.close()
                        }
                    }]), h.prop("value", this.selectedItem.name), p.prop("value", this.selectedItem.refersTo), e = 0; e < a.length; e++) a[e].innerText === this.selectedItem.scope && $(a[e]).prop("selected", !0)
                },
                u
            } (i.BaseDialog),
            i.NewNameDialog = c,

            yt = function(n) {
                function t() {
                    var t = this,
                    r = {
                        resizable: !1,
                        width: "470px",
                        modal: !0,
                        title: i.res.insertFunctionDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var n = t._element.find(".formula").val(),
                                u = $("#formulaBarText"),
                                r;
                                n.substring(0, 1) !== "=" && (n = "=" + n),
                                u.text(n),
                                r = i.wrapper.spread.getActiveSheet(),
                                r.setFormula(r.getActiveRowIndex(), r.getActiveColumnIndex(), n),
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".insert-function-dialog", r)
                }
                return __extends(t, n),
                t.prototype._init = function() {
                    var n = this,
                    f, o;
                    this._databaseNames = ["DAVERAGE", "DCOUNT", "DCOUNTA", "DGET", "DMAX", "DMIN", "DPRODUCT", "DSTDEV", "DSTDEVP", "DSUM", "DVAR", "DVARP"],
                    this._dateAndTimeNames = ["DATE", "DATEDIF", "DATEVALUE", "DAY", "DAYS360", "EDATE", "EOMONTH", "HOUR", "MINUTE", "MONTH", "NETWORKDAYS", "NOW", "SECOND", "TIME", "TIMEVALUE", "TODAY", "WEEKDAY", "WEEKNUM", "WORKDAY", "YEAR", "YEARFRAC"],
                    this._engineeringNames = ["BESSELI", "BESSELJ", "BESSELK", "BESSELY", "BIN2DEC", "BIN2HEX", "BIN2OCT", "COMPLEX", "CONVERT", "DEC2BIN", "DEC2HEX", "DEC2OCT", "DELTA", "ERF", "ERFC", "GESTEP", "HEX2BIN", "HEX2DEC", "HEX2OCT", "IMABS", "IMAGINARY", "IMARGUMENT", "IMCONJUGATE", "IMCOS", "IMDIV", "IMEXP", "IMLN", "IMLOG10", "IMLOG2", "IMPOWER", "IMPRODUCT", "IMREAL", "IMSIN", "IMSQRT", "IMSUB", "IMSUM", "OCT2BIN", "OCT2DEC", "OCT2HEX"],
                    this._financialNames = ["ACCRINT", "ACCRINTM", "AMORDEGRC", "AMORLINC", "COUPDAYBS", "COUPDAYS", "COUPDAYSNC", "COUPNCD", "COUPNUM", "COUPPCD", "CUMIPMT", "CUMPRINC", "DB", "DDB", "DISC", "DOLLARDE", "DOLLARFR", "DURATION", "EFFECT", "FV", "FVSCHEDULE", "INTRATE", "IPMT", "IRR", "ISPMT", "MDURATION", "MIRR", "NOMINAL", "NPER", "NPV", "ODDFPRICE", "ODDFYIELD", "ODDLPRICE", "ODDLYIELD", "EURO", "EUROCONVERT", "PMT", "PPMT", "PRICE", "PRICEDISC", "PRICEMAT", "PV", "RATE", "RECEIVED", "SLN", "SYD", "TBILLEQ", "TBILLPRICE", "TBILLYIELD", "VDB", "XIRR", "XNPV", "YIELD", "YIELDDISC", "YIELDMAT"],
                    this._informationNames = ["ERROR.TYPE", "ISBLANK", "ISERR", "ISERROR", "ISEVEN", "ISLOGICAL", "ISNA", "ISNONTEXT", "ISNUMBER", "ISODD", "ISREF", "ISTEXT", "N", "NA", "TYPE"],
                    this._logicalNames = ["AND", "FALSE", "IF", "IFERROR", "NOT", "OR", "TRUE"],
                    this._lookupAndReferenceNames = ["ADDRESS", "CHOOSE", "COLUMN", "COLUMNS", "HLOOKUP", "INDEX", "LOOKUP", "MATCH", "OFFSET", "ROW", "ROWS", "TRANSPOSE", "VLOOKUP"],
                    this._mathAndTrigonometryNames = ["ABS", "ACOS", "ACOSH", "ASIN", "ASINH", "ATAN", "ATAN2", "ATANH", "CEILING", "COMBIN", "COS", "COSH", "DEGREES", "EVEN", "EXP", "FACT", "FACTDOUBLE", "FLOOR", "GCD", "INT", "LCM", "LN", "LOG", "LOG10", "MDETERM", "MINVERSE", "MMULT", "MOD", "MROUND", "MULTINOMIAL", "ODD", "PI", "POWER", "PRODUCT", "QUOTIENT", "RADIANS", "RAND", "RANDBETWEEN", "ROMAN", "ROUND", "ROUNDDOWN", "ROUNDUP", "SERIESSUM", "SIGN", "SIN", "SINH", "SQRT", "SQRTPI", "SUBTOTAL", "SUM", "SUMIF", "SUMIFS", "SUMPRODUCT", "SUMSQ", "SUMX2MY2", "SUMX2PY2", "SUMXMY2", "TAN", "TANH", "TRUNC"],
                    this._statisticalNames = ["AVEDEV", "AVERAGE", "AVERAGEA", "AVERAGEIF", "AVERAGEIFS", "BETADIST", "BETAINV", "BINOMDIST", "CHIDIST", "CHIINV", "CHITEST", "CONFIDENCE", "CORREL", "COUNT", "COUNTA", "COUNTBLANK", "COUNTIF", "COUNTIFS", "COVAR", "CRITBINOM", "DEVSQ", "EXPONDIST", "FDIST", "FINV", "FISHER", "FISHERINV", "FORECAST", "FREQUENCY", "FTEST", "GAMMADIST", "GAMMAINV", "GAMMALN", "GEOMEAN", "GROWTH", "HARMEAN", "HYPGEOMDIST", "INTERCEPT", "KURT", "LARGE", "LINEST", "LOGEST", "LOGINV", "LOGNORMDIST", "MAX", "MAXA", "MEDIAN", "MIN", "MINA", "MODE", "NEGBINOMDIST", "NORMDIST", "NORMINV", "NORMSDIST", "NORMSINV", "PEARSON", "PERCENTILE", "PERCENTRANK", "PERMUT", "POISSON", "PROB", "QUARTILE", "RANK", "RSQ", "SKEW", "SLOPE", "SMALL", "STANDARDIZE", "STDEV", "STDEVA", "STDEVP", "STDEVPA", "STEYX", "TDIST", "TINV", "TREND", "TRIMMEAN", "TTEST", "VAR", "VARA", "VARP", "VARPA", "WEIBULL", "ZTEST"],
                    this._textNames = ["CHAR", "CLEAN", "CODE", "CONCATENATE", "DOLLAR", "EXACT", "FIND", "FIXED", "LEFT", "LEN", "LOWER", "MID", "PROPER", "REPLACE", "REPT", "RIGHT", "SEARCH", "SUBSTITUTE", "T", "TEXT", "TRIM", "UPPER", "VALUE"],
                    this._functionCategory = i.res.insertFunctionDialog.functionCategorys.split(","),
                    this._allNames = [],
                    this._allNames = this._allNames.concat(this._databaseNames, this._dateAndTimeNames, this._engineeringNames, this._financialNames, this._informationNames, this._logicalNames, this._lookupAndReferenceNames, this._mathAndTrigonometryNames, this._statisticalNames, this._textNames),
                    this._allNames.sort();
                    var u = this._element.find(".function-list-select"),
                    r = u[0].options,
                    t = this._element.find(".formula"),
                    s = this._element.find(".function-category-select"),
                    h = s[0].options;
                    for (s.empty(), f = 0; f < this._functionCategory.length; f++) h.add(new Option(this._functionCategory[f]));
                    u.change(function(t) {
                        for (var c = t.target || t.srcElement,
                        s = c,
                        h = e.loadXML("./resources/FormulaBar_FunctionInformation.xml"), r = h.getElementsByTagName("Function"), o, f, u, i = 0; i < r.length; i++) {
                            u = r[i].attributes[0].value;
                            if (u === s.value) {
                                o = r[i].attributes[1].value,
                                f = r[i].attributes[2].value;
                                break
                            }
                        }
                        n._element.find(".function-name").text(s.value + "(" + o + ")"),
                        n._element.find(".function-description").text(f)
                    }),
                    u.dblclick(function(i) {
                        var e = i.target || i.srcElement,
                        f = e,
                        r, u;
                        t.prop("value") === "" ? (t.prop("value", f.value + "()"), t.attr("caretIndex", t.prop("value").length - 1), n._element.find(".formula").focus(), t[0].selectionStart = parseInt(t.attr("caretIndex")), t[0].selectionEnd = parseInt(t.attr("caretIndex"))) : (r = t.prop("value"), u = parseInt(t.attr("caretIndex")), r = r.substring(0, u) + f.value + "()" + r.substring(u, r.length), t.prop("value", r), t.attr("caretIndex", u + f.value.length + 1), n._element.find(".formula").focus(), t[0].selectionStart = parseInt(t.attr("caretIndex")), t[0].selectionEnd = parseInt(t.attr("caretIndex")))
                    }),
                    o = function() {
                        var n = t[0].selectionStart;
                        t.attr("caretIndex", n)
                    },
                    t.select(o),
                    t.click(o),
                    t.keyup(o),
                    s.change(function(t) {
                        var e = t.target || t.srcElement,
                        f = e,
                        i;
                        u.empty();
                        if (f.value === n._functionCategory[0]) for (i = 0; i < n._allNames.length; i++) r.add(new Option(n._allNames[i]));
                        else if (f.value === n._functionCategory[1]) for (i = 0; i < n._databaseNames.length; i++) r.add(new Option(n._databaseNames[i]));
                        else if (f.value === n._functionCategory[2]) for (i = 0; i < n._dateAndTimeNames.length; i++) r.add(new Option(n._dateAndTimeNames[i]));
                        else if (f.value === n._functionCategory[3]) for (i = 0; i < n._engineeringNames.length; i++) r.add(new Option(n._engineeringNames[i]));
                        else if (f.value === n._functionCategory[4]) for (i = 0; i < n._financialNames.length; i++) r.add(new Option(n._financialNames[i]));
                        else if (f.value === n._functionCategory[5]) for (i = 0; i < n._informationNames.length; i++) r.add(new Option(n._informationNames[i]));
                        else if (f.value === n._functionCategory[6]) for (i = 0; i < n._logicalNames.length; i++) r.add(new Option(n._logicalNames[i]));
                        else if (f.value === n._functionCategory[7]) for (i = 0; i < n._lookupAndReferenceNames.length; i++) r.add(new Option(n._lookupAndReferenceNames[i]));
                        else if (f.value === n._functionCategory[8]) for (i = 0; i < n._mathAndTrigonometryNames.length; i++) r.add(new Option(n._mathAndTrigonometryNames[i]));
                        else if (f.value === n._functionCategory[9]) for (i = 0; i < n._statisticalNames.length; i++) r.add(new Option(n._statisticalNames[i]));
                        else if (f.value === n._functionCategory[10]) for (i = 0; i < n._textNames.length; i++) r.add(new Option(n._textNames[i]));
                        $(r[0]).prop("selected", !0),
                        u.trigger("change")
                    })
                },
                t.prototype._beforeOpen = function() {
                    var h = $("#formulaBarText"),
                    f = h.text(),
                    s = h[0].selectionStart,
                    o,
                    t,
                    e,
                    c,
                    u;
                    for (f !== undefined && (f.substring(0, 1) === "=" ? (o = f.substring(1, f.length), t = s - 1) : t = s), e = this._element.find(".function-list-select"), c = e[0].options, e.empty(), u = 0; u < this._allNames.length; u++) c.add(new Option(this._allNames[u]));
                    this._element.find(".function-category-select").prop("selectedIndex", 0),
                    this._element.find(".function-list-select").prop("selectedIndex", 0),
                    this._element.find(".function-list-select").trigger("change");
                    var l = i.wrapper.spread.getActiveSheet().getActiveRowIndex(),
                    a = i.wrapper.spread.getActiveSheet().getActiveColumnIndex(),
                    r = i.wrapper.spread.getActiveSheet().getCell(l, a).formula(),
                    n = this._element.find(".formula");
                    o !== undefined ? (n.prop("value", o), n.attr("caretIndex", t), n[0].selectionStart = t, n[0].selectionEnd = t) : r !== undefined && r !== null ? (n.prop("value", r), n.attr("caretIndex", r.length), n[0].selectionStart = parseInt(n.attr("caretIndex")), n[0].selectionEnd = parseInt(n.attr("caretIndex"))) : (n.prop("value", ""), n.attr("caretIndex", 0))
                },
                t
            } (i.BaseDialog),
            i.InsertFunctionDialog = yt,
			
            vt = function(t) {
                function r() {
                    var r = this,
                    u = {
                        resizable: !1,
                        modal: !0,
                        title: i.res.buttonCellTypeDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var o = r._element.find(".margin-left"),
                                s = r._element.find(".margin-top"),
                                h = r._element.find(".margin-right"),
                                c = r._element.find(".margin-bottom"),
                                u = r._element.find(".button-text"),
                                f = r._element.find(".color-span"),
                                t = new n.spread.ButtonCellType;
                                o.val() !== "" && t.marginLeft(parseFloat(o.val())),
                                s.val() !== "" && t.marginTop(parseFloat(s.val())),
                                h.val() !== "" && t.marginRight(parseFloat(h.val())),
                                c.val() !== "" && t.marginBottom(parseFloat(c.val())),
                                u.val() !== "" && t.text(u.val()),
                                f.css("background-color") !== e._getTransparentColorString() && t.buttonBackColor(f.css("background-color")),
                                i.actions.doAction("setCellType", i.wrapper.spread, t),
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".button-celltype-dialog", u)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var n = this;
                    $(".button-backcolor-color-picker").wijcolorpicker({
                        valueChanged: function(t, i) {
                            i.color === undefined ? n._element.find(".color-span").css("background-color", "") : n._element.find(".color-span").css("background-color", i.color)
                        },
                        choosedColor: function(t, i) {
                            n._element.find(".color-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(t, i) {
                            n._element.find(".color-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".color-frame").wijcomboframe()
                },
                r.prototype._beforeOpen = function() {
                    var h = this._element.find(".margin-left"),
                    c = this._element.find(".margin-top"),
                    o = this._element.find(".margin-right"),
                    l = this._element.find(".margin-bottom"),
                    a = this._element.find(".button-text"),
                    u = this._element.find(".color-span"),
                    f = $(".button-backcolor-color-picker"),
                    r;
                    $(".button-backcolor-color-picker").wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors());
                    var y = i.wrapper.spread.getActiveSheet().getActiveRowIndex(),
                    v = i.wrapper.spread.getActiveSheet().getActiveColumnIndex(),
                    s = i.wrapper.spread.getActiveSheet().getCell(y, v),
                    e = s.cellType(),
                    t;
                    t = e instanceof n.spread.ButtonCellType ? e: new n.spread.ButtonCellType,
                    h.val(t._marginLeft),
                    c.val(t._marginTop),
                    o.val(t._marginRight),
                    l.val(t._marginBottom),
                    a.val(t._text),
                    t._buttonBackColor ? (r = i.ColorHelper.parse(t._buttonBackColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), f.wijcolorpicker("option", "selectedItem", r), u.css("background-color", r.color)) : (f.wijcolorpicker("option", "selectedItem", null), u.css("background-color", "transparent"))
                },
                r
            } (i.BaseDialog),
            i.ButtonCellTypeDialog = vt,
			
            it = function(t) {
                function r() {
                    var r = this,
                    u = {
                        resizable: !1,
                        modal: !0,
                        title: i.res.checkBoxCellTypeDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var u = r._element.find(".text-true"),
                                e = r._element.find(".text-indeterminate"),
                                o = r._element.find(".text-false"),
                                s = r._element.find(".text-align"),
                                f = r._element.find(".caption"),
                                h = r._element.find(".isThreeState"),
                                t = new n.spread.CheckBoxCellType;
                                u.val() !== "" && t.textTrue(u.val()),
                                e.val() !== "" && t.textIndeterminate(e.val()),
                                o.val() !== "" && t.textFalse(o.val()),
                                f.val() !== "" && t.caption(f.val()),
                                t.textAlign(parseInt(s.val())),
                                t.isThreeState(h.prop("checked")),
                                i.actions.doAction("setCellType", i.wrapper.spread, t),
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".checkbox-celltype-dialog", u)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var t = this._element.find(".text-align"),
                    n = t[0].options;
                    n.add(new Option(i.res.checkBoxCellTypeDialog.checkBoxTextAlign.top, "0")),
                    n.add(new Option(i.res.checkBoxCellTypeDialog.checkBoxTextAlign.bottom, "1")),
                    n.add(new Option(i.res.checkBoxCellTypeDialog.checkBoxTextAlign.left, "2")),
                    n.add(new Option(i.res.checkBoxCellTypeDialog.checkBoxTextAlign.right, "3"))
                },
                r.prototype._beforeOpen = function() {
                    var o = this._element.find(".text-true"),
                    l = this._element.find(".text-indeterminate"),
                    c = this._element.find(".text-false"),
                    r = this._element.find(".text-align"),
                    h = r[0].options,
                    a = this._element.find(".caption"),
                    v = this._element.find(".isThreeState"),
                    y = i.wrapper.spread.getActiveSheet(),
                    e = i.wrapper.spread.getActiveSheet().getActiveRowIndex(),
                    f = i.wrapper.spread.getActiveSheet().getActiveColumnIndex(),
                    s = i.wrapper.spread.getActiveSheet().getCell(e, f),
                    u = s.cellType(),
                    t;
                    t = u instanceof n.spread.CheckBoxCellType ? u: new n.spread.CheckBoxCellType,
                    o.val(t.textTrue()),
                    l.val(t.textIndeterminate()),
                    c.val(t.textFalse()),
                    a.val(t.caption()),
                    $(h[parseInt(t.textAlign())]).prop("selected", !0),
                    r.prop("selected", t.textAlign()),
                    v.prop("checked", t.isThreeState())
                },
                r
            } (i.BaseDialog),
            i.CheckBoxCellTypeDialog = it,
			
            a = function(t) {
                function r() {
                    var r = this,
                    u = {
                        resizable: !1,
                        width: "auto",
                        modal: !0,
                        title: i.res.comboBoxCellTypeDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var s = r._element.find(".text"),
                                h = r._element.find(".value"),
                                o,
                                t,
                                f,
                                e,
                                u;
                                r.selectedIndex !== -1 && r.selectedIndex < r.items.length && (r.items[r.selectedIndex] = {
                                    text: s.val(),
                                    value: h.val()
                                }),
                                o = r._element.find(".editor-valuetype"),
                                t = new n.spread.ComboBoxCellType,
                                t.editorValueType(parseInt(o.val())),
                                f = r._element.find("#combox-editable"),
                                t.editable(f.prop("checked")),
                                e = r._element.find(".combo-item-height"),
                                u = parseFloat(e.val()),
                                isNaN(u) || t.itemHeight(u),
                                r.items !== null && r.items !== undefined && t.items(r.items),
                                i.actions.doAction("setCellType", i.wrapper.spread, t),
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".combobox-celltype-dialog", u)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var n = this,
                    h, f;
                    this.selectedIndex = -1,
                    h = this._element.find(".editor-valuetype"),
                    f = h[0].options,
                    f.add(new Option(i.res.comboBoxCellTypeDialog.editorValueType.text, "0")),
                    f.add(new Option(i.res.comboBoxCellTypeDialog.editorValueType.index, "1")),
                    f.add(new Option(i.res.comboBoxCellTypeDialog.editorValueType.value, "2"));
                    var e = this._element.find(".items"),
                    t = e[0].options,
                    r = this._element.find(".text"),
                    u = this._element.find(".value"),
                    s = this._element.find(".add-button"),
                    o = this._element.find(".remove-button");
                    s.button(),
                    o.button(),
                    s.click(function() {
                        t[t.length] = new Option("ListItem" + t.length.toString()),
                        n.items === null && (n.items = []),
                        n.items.push({
                            text: "",
                            value: ""
                        }),
                        r.removeAttr("disabled"),
                        u.removeAttr("disabled"),
                        e.trigger("change", {
                            selectMoveTo: n.items.length - 1,
                            action: "add"
                        })
                    }),
                    o.click(function() {
                        t.remove(n.selectedIndex),
                        n.items.splice(n.selectedIndex, 1);
                        var i;
                        n.items.length > n.selectedIndex ? i = n.selectedIndex: n.items.length > 0 ? i = n.selectedIndex - 1 : (i = -1, r.val(""), u.val(""), r.attr("disabled", !0), u.attr("disabled", !0)),
                        e.trigger("change", {
                            selectMoveTo: i,
                            action: "remove"
                        })
                    }),
                    e.change(function(i, f) {
                        var o = i.target || i.srcElement,
                        s = o,
                        e; (f === undefined || f.action === "add") && n.selectedIndex !== -1 && n.selectedIndex < n.items.length && (n.items[n.selectedIndex] = {
                            text: r.val(),
                            value: u.val()
                        }),
                        f === undefined ? (e = s.value.substring(8), n.selectedIndex = parseInt(e)) : n.selectedIndex = f.selectMoveTo,
                        n.selectedIndex !== -1 && ($(t[n.selectedIndex]).prop("selected", !0), r.val(n.items[n.selectedIndex].text), u.val(n.items[n.selectedIndex].value))
                    })
                },
                r.prototype._beforeOpen = function() {
                    var l = this._element.find(".editor-valuetype"),
                    v = l[0].options,
                    s = this._element.find(".items"),
                    r = s[0].options,
                    f = this._element.find(".text"),
                    u = this._element.find(".value"),
                    a = this._element.find(".combo-item-height"),
                    y = this._element.find("#combox-editable"),
                    w = i.wrapper.spread.getActiveSheet(),
                    p = i.wrapper.spread.getActiveSheet().getActiveRowIndex(),
                    h = i.wrapper.spread.getActiveSheet().getActiveColumnIndex(),
                    c = i.wrapper.spread.getActiveSheet().getCell(p, h),
                    o = c.cellType(),
                    t,
                    e;
                    t = o instanceof n.spread.ComboBoxCellType ? o: new n.spread.ComboBoxCellType,
                    a.val(t.itemHeight()),
                    y.prop("checked", t.editable()),
                    $(v[parseInt(t.editorValueType())]).prop("selected", !0),
                    this.items = t.items(),
                    s.empty();
                    if (this.items !== null && this.items !== undefined && this.items.length !== 0) {
                        for (e = 0; e < this.items.length; e++) r[r.length] = new Option("ListItem" + r.length.toString());
                        f.removeAttr("disabled"),
                        u.removeAttr("disabled"),
                        $(r[0]).prop("selected", !0),
                        f.val(this.items[0].text),
                        u.val(this.items[0].value),
                        this.selectedIndex = 0
                    } else f.val(""),
                    u.val(""),
                    f.attr("disabled", !0),
                    u.attr("disabled", !0)
                },
                r
            } (i.BaseDialog),
            i.ComboBoxCellTypeDialog = a,
			
            v = function(t) {
                function r() {
                    var r = this,
                    u = {
                        resizable: !1,
                        modal: !0,
                        title: i.res.hyperLinkCellTypeDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var f = r._element.find(".text"),
                                o = r._element.find(".linktooltip"),
                                s = r._element.find(".link-color-span"),
                                u = r._element.find(".visitedlink-color-span"),
                                t = new n.spread.HyperLinkCellType;
                                f.val() !== "" && t.text(f.val()),
                                o.val() !== "" && t.linkToolTip(o.val()),
                                s.css("background-color") !== e._getTransparentColorString() && t.linkColor(s.css("background-color")),
                                u.css("background-color") !== e._getTransparentColorString() && t.visitedLinkColor(u.css("background-color")),
                                i.actions.doAction("setCellType", i.wrapper.spread, t),
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                r.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".hyperLink-celltype-dialog", u)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var n = this;
                    $(".link-color-picker").wijcolorpicker({
                        valueChanged: function(t, i) {
                            i.color === undefined ? n._element.find(".link-color-span").css("background-color", "") : n._element.find(".link-color-span").css("background-color", i.color)
                        },
                        choosedColor: function(t, i) {
                            n._element.find(".link-color-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(t, i) {
                            n._element.find(".link-color-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".link-color-frame").wijcomboframe(),
                    $(".visitedlink-color-picker").wijcolorpicker({
                        valueChanged: function(t, i) {
                            i.color === undefined ? n._element.find(".visitedlink-color-span").css("background-color", "") : n._element.find(".visitedlink-color-span").css("background-color", i.color)
                        },
                        choosedColor: function(t, i) {
                            n._element.find(".visitedlink-color-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(t, i) {
                            n._element.find(".visitedlink-color-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".visitedlink-color-frame").wijcomboframe()
                },
                r.prototype._beforeOpen = function() {
                    var h = this._element.find(".text"),
                    c = this._element.find(".linktooltip"),
                    o = this._element.find(".link-color-span"),
                    f = $(".link-color-picker"),
                    s = this._element.find(".visitedlink-color-span"),
                    u = $(".visitedlink-color-picker"),
                    r;
                    f.wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors()),
                    u.wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors());
                    var l = i.wrapper.spread.getActiveSheet().getActiveRowIndex(),
                    a = i.wrapper.spread.getActiveSheet().getActiveColumnIndex(),
                    v = i.wrapper.spread.getActiveSheet().getCell(l, a),
                    e = v.cellType(),
                    t;
                    t = e instanceof n.spread.HyperLinkCellType ? e: new n.spread.HyperLinkCellType,
                    c.val(t._linkToolTip),
                    h.val(t._text),
                    t._linkColor ? (r = i.ColorHelper.parse(t._linkColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), f.wijcolorpicker("option", "selectedItem", r), o.css("background-color", r.color)) : (f.wijcolorpicker("option", "selectedItem", null), o.css("background-color", "transparent")),
                    t._visitedLinkColor ? (r = i.ColorHelper.parse(t._visitedLinkColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), u.wijcolorpicker("option", "selectedItem", r), s.css("background-color", r.color)) : (u.wijcolorpicker("option", "selectedItem", null), s.css("background-color", "transparent"))
                },
                r
            } (i.BaseDialog),
            i.HyperLinkCellTypeDialog = v,
			
            y = function(r) {
                function u() {
                    var n = this,
                    t = {
                        width: 740,
                        minWidth: 740,
                        maxWidth: 740,
                        height: 705,
                        minHeight: 705,
                        maxHeight: 705,
                        resizable: !1,
                        modal: !0,
                        title: i.res.headerCellsDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                n._saveChanges(n._sheetArea),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    r.call(this, "./dialogs/dialogs.html", ".header-cells-dialog", t)
                }
                return __extends(u, r),
                u.prototype._init = function() {
                    var r, u, f, e, n, s;
                    for (this._hasError = !1, this._element.find(".font-popup").button(), this._settingTab = this._element.find(".header-tab").tabs(), this._element.find("#rowHeaderTab").wijspread({
                        sheetCount: 1
                    }), this._element.find("#columnHeaderTab").wijspread({
                        sheetCount: 1
                    }), r = this._element.find("#rowHeaderTab").wijspread("spread"), u = this._element.find("#columnHeaderTab").wijspread("spread"), r.sheets[0].selectionPolicy(1), u.sheets[0].selectionPolicy(1), r.tabStripVisible(!1), u.tabStripVisible(!1), f = this._element.find(".hAlign"), e = this._element.find(".vAlign"), n = 0; n < 4; n++) f.append($("<option></option>").val(n).text(i.res.headerCellsDialog[t.HorizontalAlign[n]]));
                    for (n = 0; n < 3; n++) e.append($("<option></option>").val(n).text(i.res.headerCellsDialog[t.VerticalAlign[n]]));
                    this._addEvents(r, u),
                    this._element.find(".backColor-colorframe").wijcomboframe(),
                    this._element.find(".foreColor-colorframe").wijcomboframe(),
                    this._element.find(".borderBottom-borderframe").wijcomboframe(),
                    this._element.find(".borderLeft-borderframe").wijcomboframe(),
                    this._element.find(".borderRight-borderframe").wijcomboframe(),
                    this._element.find(".borderTop-borderframe").wijcomboframe();
                    var c = $(".borderBottom-borderpicker"),
                    l = $(".borderLeft-borderpicker"),
                    h = $(".borderRight-borderpicker"),
                    o = $(".borderTop-borderpicker");
                    c.wijborderpicker("option", "colorOptions", {
                        showMoreColors: !1,
                        showNoFill: !1
                    }),
                    l.wijborderpicker("option", "colorOptions", {
                        showMoreColors: !1,
                        showNoFill: !1
                    }),
                    h.wijborderpicker("option", "colorOptions", {
                        showMoreColors: !1,
                        showNoFill: !1
                    }),
                    o.wijborderpicker("option", "colorOptions", {
                        showMoreColors: !1,
                        showNoFill: !1
                    }),
                    s = this,
                    this._element.data("ui-dialog")._focusTabbable = function() {}
                },
                u.prototype._beforeOpen = function(n) {
                    var s = this,
                    t = this,
                    f, r, u, o, e;
                    this._initialized || (this._initialized = !0, this._element.find(".button-set").wijribbon({
                        click: function(n, r) {
                            var o, f, e, u;
                            switch (r.commandName) {
                            case "merge":
                                i.actions.doAction("mergeCells", t._currentSpread);
                                break;
                            case "unmerge":
                                i.actions.doAction("unmergeCells", t._currentSpread);
                                break;
                            case "insertrows":
                                i.actions.doAction("insertRows", t._currentSpread);
                                break;
                            case "addrows":
                                for (f = new i.spreadActions.InsertAndDeleteBase(t._currentSpread), o = f.getSortedRowSelections(), u = 0; u < o.length; u++) t._currentSpread.sheets[0].addRows(t._currentSpread.sheets[0].getRowCount(), o[u].rowCount);
                                break;
                            case "deleterows":
                                i.actions.doAction("deleteRows", t._currentSpread);
                                break;
                            case "insertcolumns":
                                i.actions.doAction("insertColumns", t._currentSpread);
                                break;
                            case "addcolumns":
                                for (f = new i.spreadActions.InsertAndDeleteBase(t._currentSpread), e = f.getSortedColumnSelections(), u = 0; u < e.length; u++) t._currentSpread.sheets[0].addColumns(t._currentSpread.sheets[0].getColumnCount(), e[u].colCount);
                                break;
                            case "deletecolumns":
                                i.actions.doAction("deleteColumns", t._currentSpread);
                                break;
                            case "clear":
                                i.actions.doAction("clearAll", t._currentSpread);
                                break
                            }
                        }
                    })),
                    this._element.find(".sku-wijribbon-list").removeClass("sku-wijtabs-hide"),
                    r = this._element.find("#rowHeaderTab").wijspread("spread"),
                    u = this._element.find("#columnHeaderTab").wijspread("spread");
                    switch (n[0]) {
                    case "row":
                        f = 0,
                        this._currentSpread = r,
                        this._sheetArea = 2,
                        this._setActiveCell("row"),
                        r.sheets[0]._raiseSelectionChanged(),
                        setTimeout(function() {
                            s._element.find("#rowHeaderTab").wijspread("refresh")
                        },
                        0);
                        break;
                    case "col":
                        f = 1,
                        this._currentSpread = u,
                        this._sheetArea = 1,
                        this._setActiveCell("col"),
                        u.sheets[0]._raiseSelectionChanged(),
                        setTimeout(function() {
                            s._element.find("#columnHeaderTab").wijspread("refresh")
                        },
                        0);
                        break
                    }
                    this._switchLayout(n[0]),
                    this._settingTab.tabs("option", "active", f),
                    this._synColRowCount(r, u),
                    this._loadToSheet(1, u),
                    this._loadToSheet(2, r),
                    this._setActiveCell(n[0]),
                    this._synToPropertyGrid("cell"),
                    o = $(".backColor-colorpicker"),
                    e = $(".foreColor-colorpicker"),
                    o.wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors()),
                    e.wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors())
                },
                u.prototype._synColRowCount = function(n, t, r) {
                    if (r) {
                        var h = n.sheets[0].getColumnCount(3),
                        s = t.sheets[0].getColumnCount(3),
                        l = n.sheets[0].getRowCount(3),
                        c = t.sheets[0].getRowCount(3);
                        i.wrapper.spread.getActiveSheet().setColumnCount(h, 2),
                        i.wrapper.spread.getActiveSheet().setRowCount(l, 2),
                        i.wrapper.spread.getActiveSheet().setColumnCount(s, 1),
                        i.wrapper.spread.getActiveSheet().setRowCount(c, 1)
                    } else {
                        var f = i.wrapper.spread.getActiveSheet().getColumnCount(2),
                        u = i.wrapper.spread.getActiveSheet().getColumnCount(1),
                        o = i.wrapper.spread.getActiveSheet().getRowCount(2),
                        e = i.wrapper.spread.getActiveSheet().getRowCount(1);
                        n.sheets[0].setColumnCount(f),
                        n.sheets[0].setRowCount(o),
                        t.sheets[0].setColumnCount(u),
                        t.sheets[0].setRowCount(e)
                    }
                },
                u.prototype._setActiveCell = function(n) {
                    var r = 0,
                    t = 0;
                    switch (n) {
                    case "row":
                        r = i.wrapper.spread.getActiveSheet().getActiveRowIndex();
                        break;
                    case "col":
                        t = i.wrapper.spread.getActiveSheet().getActiveColumnIndex();
                        break
                    }
                    this._currentSpread.sheets[0].setActiveCell(r, t)
                },
                u.prototype._synToPropertyGrid = function(n) {
                    var e = this._currentSpread.sheets[0],
                    bt = e.getActiveColumnIndex(),
                    wt = e.getActiveRowIndex(),
                    o = e.getCell(wt, bt),
                    ot = e._getValueImp(e._getModel(3), o.row, o.col, 3),
                    at = e.getColumnWidth(o.col, 3),
                    lt = e.getRowHeight(o.row, 3),
                    yt = e.getColumnVisible(o.col, 3),
                    vt = e.getRowVisible(o.row, 3),
                    ct = e.getColumnResizable(o.col, 3),
                    st = e.getRowResizable(o.row, 3),
                    kt = this._element.find(".height"),
                    et = this._element.find(".value"),
                    ut = this._element.find(".visible"),
                    pt = this._element.find(".width"),
                    ft = this._element.find(".resizable"),
                    r,
                    s,
                    u,
                    f;
                    kt.val(lt),
                    ot !== null ? et.val(ot.toString()) : et.val(""),
                    pt.val(at);
                    switch (n) {
                    case "row":
                        ft.prop("checked", st),
                        ut.prop("checked", vt),
                        r = e.getStyle(o.row, -1, 3);
                        break;
                    case "col":
                        ft.prop("checked", ct),
                        ut.prop("checked", yt),
                        r = e.getStyle( - 1, o.col, 3);
                        break;
                    case "cell":
                        r = e.getStyle(o.row, o.col, 3);
                        break;
                    case "sheet":
                        r = e.getStyle( - 1, -1, 3);
                        break
                    }
                    var it = this._element.find(".backColor-colorspan"),
                    rt = $(".backColor-colorpicker"),
                    tt = this._element.find(".foreColor-colorspan"),
                    v = $(".foreColor-colorpicker"),
                    a = this._element.find(".borderBottom-borderspan"),
                    gt = $(".borderBottom-borderpicker"),
                    y = this._element.find(".borderLeft-borderspan"),
                    ni = $(".borderLeft-borderpicker"),
                    h = this._element.find(".borderRight-borderspan"),
                    ii = $(".borderRight-borderpicker"),
                    c = this._element.find(".borderTop-borderspan"),
                    ti = $(".borderTop-borderpicker"),
                    l = this._element.find(".font"),
                    p = this._element.find(".formatter"),
                    dt = this._element.find(".hAlign"),
                    d = this._element.find(".locked"),
                    g = this._element.find(".shrinkToFit"),
                    nt = this._element.find(".textIndent"),
                    ht = this._element.find(".vAlign"),
                    w = this._element.find(".wordWrap"),
                    b = dt[0].options,
                    k = ht[0].options;
                    r !== null && r !== undefined ? (r.backColor !== undefined ? (s = i.ColorHelper.parse(r.backColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), rt.wijcolorpicker("option", "selectedItem", s), it.css("background-color", s.color)) : (rt.wijcolorpicker("option", "selectedItem", null), it.css("background-color", "transparent")), r.foreColor !== undefined ? (s = i.ColorHelper.parse(r.foreColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), v.wijcolorpicker("option", "selectedItem", s), tt.css("background-color", s.color)) : (v.wijcolorpicker("option", "selectedItem", null), tt.css("background-color", "transparent")), r.borderBottom !== undefined ? (u = r.borderBottom, f = "", u.color !== undefined && u.color !== null && (f = u.color), u.style !== undefined && u.style !== null && (f += ";" + t.LineStyle[u.style]), a.val(f)) : a.val(""), r.borderLeft !== undefined ? (u = r.borderLeft, f = "", u.color !== undefined && u.color !== null && (f = u.color), u.style !== undefined && u.style !== null && (f += ";" + t.LineStyle[u.style]), y.val(f)) : y.val(""), r.borderRight !== undefined ? (u = r.borderRight, f = "", u.color !== undefined && u.color !== null && (f = u.color), u.style !== undefined && u.style !== null && (f += ";" + t.LineStyle[u.style]), h.val(f)) : h.val(""), r.borderTop !== undefined ? (u = r.borderTop, f = "", u.color !== undefined && u.color !== null && (f = u.color), u.style !== undefined && u.style !== null && (f += ";" + t.LineStyle[u.style]), c.val(f)) : c.val(""), r.font !== undefined ? l.val(r.font) : l.val(""), r.formatter !== undefined ? p.val(r.formatter) : p.val(""), r.textIndent !== undefined ? nt.val(r.textIndent) : nt.val(""), r.locked !== undefined ? d.prop("checked", r.locked) : d.prop("checked", !0), r.wordWrap !== undefined ? w.prop("checked", r.wordWrap) : w.prop("checked", !1), r.shrinkToFit !== undefined ? g.prop("checked", r.shrinkToFit) : g.prop("checked", !1), r.hAlign !== undefined ? $(b[parseInt(r.hAlign)]).prop("selected", !0) : $(b[3]).prop("selected", !0), r.vAlign !== undefined ? $(k[parseInt(r.vAlign)]).prop("selected", !0) : $(k[1]).prop("selected", !0)) : (rt.wijcolorpicker("option", "selectedItem", null), it.css("background-color", "transparent"), v.wijcolorpicker("option", "selectedItem", null), tt.css("background-color", "transparent"), a.val(""), y.val(""), h.val(""), c.val(""), l.val(""), p.val(""), nt.val(""), d.prop("checked", !0), w.prop("checked", !1), g.prop("checked", !1), $(b[3]).prop("selected", !0), $(k[1]).prop("selected", !0))
                },
                u.prototype._loadToSheet = function(n, t) {
                    var e, s, o, r, f, u;
                    e = t ? t: this._currentSpread,
                    s = e.isPaintSuspended(),
                    e.isPaintSuspended(!0);
                    try {
                        for (o = i.wrapper.spread.getActiveSheet(), r = e.sheets[0], u = 0; u < r.getRowCount(); u++) for (f = 0; f < r.getColumnCount(); f++) this._copyCell(o, r, u, f, n, 3);
                        for (f = 0; f < r.getColumnCount(); f++) this._copyCell(o, r, -1, f, n, 3);
                        for (u = 0; u < r.getRowCount(); u++) this._copyCell(o, r, u, -1, n, 3);
                        this._copyCell(o, r, -1, -1, n, 3),
                        this._copySheet(o, r, n, 3)
                    } catch(h) {
                        e.isPaintSuspended(s)
                    }
                    e.isPaintSuspended(s)
                },
                u.prototype._saveChanges = function(n) {
                    var s, r, t;
                    if (this._hasError) {
                        f.show(i.res.headerCellsDialog.exception, i.res.title, 3, 0);
                        return
                    }
                    s = i.wrapper.spread.isPaintSuspended(),
                    i.wrapper.spread.isPaintSuspended(!0);
                    try {
                        var e = this._element.find("#rowHeaderTab").wijspread("spread").sheets[0],
                        o = this._element.find("#columnHeaderTab").wijspread("spread").sheets[0],
                        u = i.wrapper.spread.getActiveSheet();
                        for (this._synColRowCount(this._element.find("#rowHeaderTab").wijspread("spread"), this._element.find("#columnHeaderTab").wijspread("spread"), !0), t = 0; t < e.getRowCount(); t++) for (r = 0; r < e.getColumnCount(); r++) this._copyCell(e, u, t, r, 3, 2);
                        for (t = 0; t < o.getRowCount(); t++) for (r = 0; r < o.getColumnCount(); r++) this._copyCell(o, u, t, r, 3, 1);
                        for (r = 0; r < e.getColumnCount(); r++) this._copyCell(e, u, -1, r, 3, 2);
                        for (r = 0; r < o.getColumnCount(); r++) this._copyCell(o, u, -1, r, 3, 1);
                        for (t = 0; t < e.getRowCount(); t++) this._copyCell(e, u, t, -1, 3, 2);
                        for (t = 0; t < o.getRowCount(); t++) this._copyCell(o, u, t, -1, 3, 1);
                        this._copyCell(e, u, -1, -1, 3, 2),
                        this._copyCell(o, u, -1, -1, 3, 1),
                        this._copySheet(e, u, 3, 2),
                        this._copySheet(o, u, 3, 1)
                    } catch(h) {
                        i.wrapper.spread.isPaintSuspended(s)
                    }
                    i.wrapper.spread.isPaintSuspended(s),
                    this.close()
                },
                u.prototype._copyCell = function(n, t, i, r, u, f) {
                    var y = n.getStyle(i, r, u),
                    s,
                    a,
                    e,
                    o,
                    v,
                    h,
                    c,
                    l;
                    t.setStyle(i, r, y, f),
                    s = n._getValueImp(n._getModel(u), i, r, u),
                    a = t._getValueImp(t._getModel(f), i, r, f),
                    s !== a && t.setValue(i, r, s, f),
                    e = n.getColumnWidth(r, u),
                    e === undefined || e < 0 || t.setColumnWidth(r, e, f),
                    o = n.getRowHeight(i, u),
                    o === undefined || o < 0 || t.setRowHeight(i, o, f),
                    v = n.getColumnVisible(r, u),
                    t.setColumnVisible(r, v, f),
                    h = n.getRowVisible(i, u),
                    t.setRowVisible(i, h, f),
                    c = n.getColumnResizable(r, u),
                    t.setColumnResizable(r, c, f),
                    l = n.getRowResizable(i, u),
                    t.setRowResizable(i, l, f)
                },
                u.prototype._copySheet = function(n, t, i, r) {
                    for (var f = t.getSpans(undefined, r), u = 0; u < f.length; u++) t.removeSpan(f[u].row, f[u].col, r);
                    f = n.getSpans(undefined, i);
                    if (f.length !== 0) for (u = 0; u < f.length; u++) t.addSpan(f[u].row, f[u].col, f[u].rowCount, f[u].colCount, r)
                },
                u.prototype._switchLayout = function(n) {
                    var r = this._element.find(".property-grid-container"),
                    t = this._element.find(".property-grid"),
                    i = this._element.find(".header-tab");
                    switch (n) {
                    case "row":
                        i.addClass("rowheader-sheet"),
                        i.removeClass("columnheader-sheet"),
                        t.addClass("rowheader-porpertygird"),
                        t.removeClass("columnheader-porpertygird"),
                        r.removeClass("columnheader-property-grid-container");
                        break;
                    case "col":
                        i.addClass("columnheader-sheet"),
                        i.removeClass("rowheader-sheet"),
                        t.addClass("columnheader-porpertygird"),
                        t.removeClass("rowheader-porpertygird"),
                        r.addClass("columnheader-property-grid-container");
                        break
                    }
                },
                u.prototype._setBorders = function(n) {
                    var e = new t.Style,
                    r, f, u;
                    switch (n) {
                    case "bottom":
                        r = $(".borderBottom-borderspan").val();
                        break;
                    case "top":
                        r = $(".borderTop-borderspan").val();
                        break;
                    case "left":
                        r = $(".borderLeft-borderspan").val();
                        break;
                    case "right":
                        r = $(".borderRight-borderspan").val();
                        break
                    }
                    f = r.split(";")[0],
                    u = r.split(";")[1];
                    switch (n) {
                    case "bottom":
                        e.borderBottom = new t.LineBorder(f, t.LineStyle[u]);
                        break;
                    case "top":
                        e.borderTop = new t.LineBorder(f, t.LineStyle[u]);
                        break;
                    case "left":
                        e.borderLeft = new t.LineBorder(f, t.LineStyle[u]);
                        break;
                    case "right":
                        e.borderRight = new t.LineBorder(f, t.LineStyle[u]);
                        break
                    }
                    i.actions.doAction("setStyle", this._currentSpread, e)
                },
                u.prototype._addEvents = function(r, u) {
                    var f = this,
                    pt = this._element.find(".backColor-colorspan"),
                    vt = $(".backColor-colorpicker"),
                    yt = this._element.find(".foreColor-colorspan"),
                    at = $(".foreColor-colorpicker"),
                    ut = this._element.find(".borderBottom-borderspan"),
                    k = $(".borderBottom-borderpicker"),
                    nt = this._element.find(".borderLeft-borderspan"),
                    g = $(".borderLeft-borderpicker"),
                    st = this._element.find(".borderRight-borderspan"),
                    d = $(".borderRight-borderpicker"),
                    ot = this._element.find(".borderTop-borderspan"),
                    p = $(".borderTop-borderpicker"),
                    v = this._element.find(".font"),
                    it = this._element.find(".formatter"),
                    et = this._element.find(".hAlign"),
                    lt = this._element.find(".locked"),
                    ct = this._element.find(".shrinkToFit"),
                    o = this._element.find(".textIndent"),
                    ht = this._element.find(".vAlign"),
                    ft = this._element.find(".wordWrap"),
                    s = this._element.find(".height"),
                    tt = this._element.find(".value"),
                    y = this._element.find(".visible"),
                    c = this._element.find(".width"),
                    w = this._element.find(".resizable"),
                    e = this,
                    l,
                    a,
                    rt,
                    b;
                    vt.wijcolorpicker({
                        valueChanged: function(n, r) {
                            if (r.color === undefined) e._element.find(".backColor-colorspan").css("background-color", ""),
                            i.actions.doAction("setBackColor", e._currentSpread, undefined);
                            else {
                                e._element.find(".backColor-colorspan").css("background-color", r.color);
                                var u = new t.Style;
                                u.backColor = r.color,
                                i.actions.doAction("setStyle", e._currentSpread, u)
                            }
                        },
                        choosedColor: function(n, t) {
                            e._element.find(".backColor-colorframe").wijcomboframe("close")
                        },
                        openColorDialog: function(n, t) {
                            e._element.find(".backColor-colorframe").wijcomboframe("close")
                        }
                    }),
                    at.wijcolorpicker({
                        valueChanged: function(n, r) {
                            if (r.color === undefined) e._element.find(".foreColor-colorspan").css("background-color", ""),
                            i.actions.doAction("setForeColor", e._currentSpread, undefined);
                            else {
                                e._element.find(".foreColor-colorspan").css("background-color", r.color);
                                var u = new t.Style;
                                u.foreColor = r.color,
                                i.actions.doAction("setStyle", e._currentSpread, u)
                            }
                        },
                        choosedColor: function(n, t) {
                            e._element.find(".foreColor-colorframe").wijcomboframe("close")
                        },
                        openColorDialog: function(n, t) {
                            e._element.find(".foreColor-colorframe").wijcomboframe("close")
                        }
                    }),
                    k.wijborderpicker({
                        colorChanged: function(n, i) {
                            ut.val(i.color + ";" + t.LineStyle[k.wijborderpicker("option", "lineStyle")]),
                            e._setBorders("bottom")
                        },
                        lineStyleChanged: function(n, i) {
                            ut.val(k.wijborderpicker("option", "borderColor").color + ";" + t.LineStyle[i]),
                            e._setBorders("bottom")
                        }
                    }),
                    g.wijborderpicker({
                        colorChanged: function(n, i) {
                            nt.val(i.color + ";" + t.LineStyle[g.wijborderpicker("option", "lineStyle")]),
                            e._setBorders("left")
                        },
                        lineStyleChanged: function(n, i) {
                            nt.val(g.wijborderpicker("option", "borderColor").color + ";" + t.LineStyle[i]),
                            e._setBorders("left")
                        }
                    }),
                    d.wijborderpicker({
                        colorChanged: function(n, i) {
                            st.val(i.color + ";" + t.LineStyle[d.wijborderpicker("option", "lineStyle")]),
                            e._setBorders("right")
                        },
                        lineStyleChanged: function(n, i) {
                            st.val(d.wijborderpicker("option", "borderColor").color + ";" + t.LineStyle[i]),
                            e._setBorders("right")
                        }
                    }),
                    p.wijborderpicker({
                        colorChanged: function(n, i) {
                            ot.val(i.color + ";" + t.LineStyle[p.wijborderpicker("option", "lineStyle")]),
                            e._setBorders("top")
                        },
                        lineStyleChanged: function(n, i) {
                            ot.val(p.wijborderpicker("option", "borderColor").color + ";" + t.LineStyle[i]),
                            e._setBorders("top")
                        }
                    }),
                    it.change(function() {
                        i.actions.doAction("setFormatter", f._currentSpread, it.val())
                    }),
                    s.change(function() {
                        s.removeClass("ui-state-error"),
                        f._hasError = !1,
                        $.isNumeric(s.val()) && parseInt(s.val()) >= 0 && parseInt(s.val()) === parseFloat(s.val()) ? i.actions.doAction("setRowsHeight", f._currentSpread, parseInt(s.val())) : (s.addClass("ui-state-error"), f._hasError = !0)
                    }),
                    w.change(function() {
                        var n = i.spreadActions.getSelectionType(f._currentSpread);
                        switch (n) {
                        case 2:
                            i.spreadActions.DesignerActionBase.prototype.execInSelectionsForCol(e._currentSpread.sheets[0],
                            function(n, t) {
                                e._currentSpread.sheets[0].setColumnResizable(t, w.prop("checked"), 1)
                            });
                            break;
                        case 1:
                            i.spreadActions.DesignerActionBase.prototype.execInSelectionsForRow(e._currentSpread.sheets[0],
                            function(n, t) {
                                e._currentSpread.sheets[0].setRowResizable(t, w.prop("checked"), 2)
                            });
                            break
                        }
                    }),
                    tt.change(function(n) {
                        var u = tt.val(),
                        r = e._currentSpread.sheets[0],
                        t = e._currentSpread.isPaintSuspended();
                        e._currentSpread.isPaintSuspended(!0);
                        try {
                            i.spreadActions.DesignerActionBase.prototype.execInSelections(r,
                            function(n, t, i) {
                                n.getCell(t, i).text(u)
                            })
                        } catch(f) {
                            e._currentSpread.isPaintSuspended(t)
                        }
                        e._currentSpread.isPaintSuspended(t)
                    }),
                    y.change(function() {
                        var t = i.spreadActions.getSelectionType(f._currentSpread),
                        n;
                        switch (t) {
                        case 2:
                            n = y.prop("checked") == !0 ? "unHideColumns": "hideColumns";
                            break;
                        case 1:
                            n = y.prop("checked") == !0 ? "unHideRows": "hideRows";
                            break
                        }
                        i.actions.doAction(n, f._currentSpread, y.val())
                    }),
                    c.change(function() {
                        c.removeClass("ui-state-error"),
                        f._hasError = !1,
                        $.isNumeric(c.val()) && parseInt(c.val()) >= 0 && parseInt(c.val()) === parseFloat(c.val()) ? i.actions.doAction("setColumnsWidth", f._currentSpread, parseInt(c.val())) : (c.addClass("ui-state-error"), f._hasError = !0)
                    }),
                    l = function(n) {
                        var u = n.target || n.srcElement,
                        r = new t.Style;
                        switch (u.id) {
                        case "hAlign":
                            r.hAlign = parseInt(et.val());
                            break;
                        case "locked":
                            r.locked = lt.prop("checked");
                            break;
                        case "shrinkToFit":
                            r.shrinkToFit = ct.prop("checked");
                            break;
                        case "textIndent":
                            o.removeClass("ui-state-error"),
                            f._hasError = !1,
                            $.isNumeric(o.val()) && parseInt(o.val()) >= 0 && parseInt(o.val()) === parseFloat(o.val()) ? r.textIndent = parseInt(o.val()) : o.val() === "" ? r.textIndent = undefined: (o.addClass("ui-state-error"), f._hasError = !0);
                            break;
                        case "vAlign":
                            r.vAlign = parseInt(ht.val());
                            break;
                        case "wordWrap":
                            r.wordWrap = ft.prop("checked");
                            break;
                        case "font":
                            r.font = v.val();
                            break
                        }
                        i.actions.doAction("setStyle", f._currentSpread, r)
                    },
                    et.change(l),
                    lt.change(l),
                    ct.change(l),
                    o.change(l),
                    ht.change(l),
                    ft.change(l),
                    v.change(l),
                    a = function(n, t) {
                        var r = i.spreadActions.getSelectionType(f._currentSpread);
                        switch (r) {
                        case 2:
                            f._element.find(".resizable-row").removeClass("hidden"),
                            f._element.find(".visible-row").removeClass("hidden"),
                            f._element.find(".width-row").removeClass("hidden"),
                            f._element.find(".resizable-row").addClass("visible"),
                            f._element.find(".visible-row").addClass("visible"),
                            f._element.find(".width-row").addClass("visible"),
                            f._element.find(".height-row").removeClass("visible"),
                            f._element.find(".value-row").removeClass("visible"),
                            f._element.find(".height-row").addClass("hidden"),
                            f._element.find(".value-row").addClass("hidden"),
                            f._synToPropertyGrid("col");
                            break;
                        case 1:
                            f._element.find(".resizable-row").removeClass("hidden"),
                            f._element.find(".visible-row").removeClass("hidden"),
                            f._element.find(".width-row").removeClass("visible"),
                            f._element.find(".resizable-row").addClass("visible"),
                            f._element.find(".visible-row").addClass("visible"),
                            f._element.find(".width-row").addClass("hidden"),
                            f._element.find(".height-row").removeClass("hidden"),
                            f._element.find(".value-row").removeClass("visible"),
                            f._element.find(".height-row").addClass("visible"),
                            f._element.find(".value-row").addClass("hidden"),
                            f._synToPropertyGrid("row");
                            break;
                        case 3:
                            f._element.find(".resizable-row").removeClass("visible"),
                            f._element.find(".visible-row").removeClass("visible"),
                            f._element.find(".width-row").removeClass("visible"),
                            f._element.find(".resizable-row").addClass("hidden"),
                            f._element.find(".visible-row").addClass("hidden"),
                            f._element.find(".width-row").addClass("hidden"),
                            f._element.find(".height-row").removeClass("visible"),
                            f._element.find(".value-row").removeClass("hidden"),
                            f._element.find(".height-row").addClass("hidden"),
                            f._element.find(".value-row").addClass("visible"),
                            f._synToPropertyGrid("cell");
                            break;
                        default:
                            f._element.find(".resizable-row").removeClass("visible"),
                            f._element.find(".visible-row").removeClass("visible"),
                            f._element.find(".width-row").removeClass("visible"),
                            f._element.find(".resizable-row").addClass("hidden"),
                            f._element.find(".visible-row").addClass("hidden"),
                            f._element.find(".width-row").addClass("hidden"),
                            f._element.find(".height-row").removeClass("visible"),
                            f._element.find(".value-row").removeClass("visible"),
                            f._element.find(".height-row").addClass("hidden"),
                            f._element.find(".value-row").addClass("hidden"),
                            f._synToPropertyGrid("sheet");
                            break
                        }
                        s.removeClass("ui-state-error"),
                        c.removeClass("ui-state-error"),
                        o.removeClass("ui-state-error"),
                        f._hasError = !1
                    },
                    r.sheets[0].bind(n.spread.Events.SelectionChanged, a),
                    u.sheets[0].bind(n.spread.Events.SelectionChanged, a),
                    rt = function(n, t) {
                        if (t.newPanel[0].id === "columnHeaderTab") {
                            f._currentSpread = u,
                            f._sheetArea = 1,
                            f._switchLayout("col"),
                            u.sheets[0]._raiseSelectionChanged(),
                            setTimeout(function() {
                                f._element.find("#columnHeaderTab").wijspread("refresh")
                            },
                            0);
                            return
                        } else if (t.newPanel[0].id === "rowHeaderTab") {
                            f._currentSpread = r,
                            f._sheetArea = 2,
                            f._switchLayout("row"),
                            r.sheets[0]._raiseSelectionChanged(),
                            setTimeout(function() {
                                f._element.find("#rowHeaderTab").wijspread("refresh")
                            },
                            0);
                            return
                        }
                    };
                    this._settingTab.on("tabsactivate", rt);
                    this._element.find(".property-grid").click(function(n) {
                        $(f._element.find(".property-grid").children()[0].children).removeClass("ui-state-focus");
                        var t = n.target || n.srcElement;
                        $(t).parents("tr").addClass("ui-state-focus")
                    });
                    if (this._fontDialog === undefined) {
                        b = new h,
                        this._element.find(".font-popup").click(function() {
                            b.open(v.val())
                        });
                        $(b).on("dialogClose",
                        function(n, t) {
                            v.val(t),
                            v.trigger("change")
                        })
                    }
                    $(document).mousedown(function(n) {
                        for (var t = n.target || n.srcElement,
                        r = $(".sku-wijborderpicker-color-picker"), u = !1, i = 0; i < r.length; i++) if (r[i].contains(t)) {
                            u = !0;
                            break
                        }
                        u || ($(".borderBottom-borderpicker")[0].contains(t) || f._element.find(".borderBottom-borderframe").wijcomboframe("close"), $(".borderLeft-borderpicker")[0].contains(t) || f._element.find(".borderLeft-borderframe").wijcomboframe("close"), $(".borderRight-borderpicker")[0].contains(t) || f._element.find(".borderRight-borderframe").wijcomboframe("close"), $(".borderTop-borderpicker")[0].contains(t) || f._element.find(".borderTop-borderframe").wijcomboframe("close"), $(".sku-wijborderpicker-color").wijcomboframe("close"))
                    }),
                    i.wrapper.spread.bind(t.Events.ActiveSheetChanged,
                    function() {
                        f._element.find("#rowHeaderTab").wijspread("destroy"),
                        f._element.find("#rowHeaderTab").empty(),
                        f._element.find("#columnHeaderTab").wijspread("destroy"),
                        f._element.find("#columnHeaderTab").empty(),
                        f._element.find("#rowHeaderTab").wijspread({
                            sheetCount: 1
                        }),
                        f._element.find("#columnHeaderTab").wijspread({
                            sheetCount: 1
                        }),
                        r = f._element.find("#rowHeaderTab").wijspread("spread"),
                        u = f._element.find("#columnHeaderTab").wijspread("spread"),
                        r.sheets[0].selectionPolicy(1),
                        u.sheets[0].selectionPolicy(1),
                        r.tabStripVisible(!1),
                        u.tabStripVisible(!1),
                        r.sheets[0].bind(n.spread.Events.SelectionChanged, a),
                        u.sheets[0].bind(n.spread.Events.SelectionChanged, a)
                    })
                },
                u
            } (i.BaseDialog),
            i.HeaderCellsDialog = y,
			
            h = function(n) {
                function t() {
                    var t = this,
                    r = {
                        width: 475,
                        autoOpen: !1,
                        resizable: !1,
                        modal: !0,
                        title: i.res.fontPickerDialog.title,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                t._raiseClose(event, t._composeFont()),
                                t.close()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".font-dialog", r)
                }
                return __extends(t, n),
                t.prototype._init = function() {
                    var n = this;
                    this._element.find(".font-picker").wijfontpicker({
                        changed: function(t, i) {
                            switch (i.name) {
                            case "family":
                                n._fontFamily = i.value;
                                break;
                            case "style":
                                n._fontStyle = i.value;
                                break;
                            case "size":
                                n._fontSize = i.value;
                                break;
                            case "weight":
                                n._fontWeight = i.value;
                                break
                            }
                        },
                        isColorVisible: !1
                    })
                },
                t.prototype._composeFont = function() {
                    var n;
                    return this._fontFamily === undefined && this._fontStyle === undefined && this._fontSize === undefined && this._fontWeight === undefined ? n = "": (n = this._fontStyle ? this._fontStyle: "normal", n += this._fontWeight ? " " + this._fontWeight: " normal", n += this._fontSize ? " " + this._fontSize + "pt": " " + i.res.defaultFont.split(" ")[0], n += this._fontFamily ? " " + this._fontFamily: " " + i.res.defaultFont.split(" ")[1]),
                    n
                },
                t.prototype._beforeOpen = function(n) {
                    if (n[0] !== undefined && n[0] !== null && n[0] !== "") {
                        var t = i.util.parseFont(n[0]);
                        this._element.find(".font-picker").wijfontpicker("family", t.fontFamily),
                        this._element.find(".font-picker").wijfontpicker("style", t.fontStyle),
                        this._element.find(".font-picker").wijfontpicker("size", parseFloat(t.fontSize).toString()),
                        this._element.find(".font-picker").wijfontpicker("weight", t.fontWeight)
                    } else this._element.find(".font-picker").wijfontpicker("family", ""),
                    this._element.find(".font-picker").wijfontpicker("style", ""),
                    this._element.find(".font-picker").wijfontpicker("size", ""),
                    this._element.find(".font-picker").wijfontpicker("weight", ""),
                    this._fontFamily = undefined,
                    this._fontStyle = undefined,
                    this._fontSize = undefined,
                    this._fontWeight = undefined
                },
                t.prototype._raiseClose = function(n, t) {
                    $(this).trigger("dialogClose", t)
                },
                t
            } (i.BaseDialog),
            i.FontPickerDialog = h,
			
            function(n) {
                n[n.greaterThan = 0] = "greaterThan",
                n[n.lessThan = 1] = "lessThan",
                n[n.between = 2] = "between",
                n[n.equalTo = 3] = "equalTo",
                n[n.top = 4] = "top",
                n[n.bottom = 5] = "bottom",
                n[n.above = 6] = "above",
                n[n.below = 7] = "below"
            } (i.OpenType || (i.OpenType = {})),
            gt = i.OpenType,
            p = function(r) {
                function e() {
                    var n = this,
                    t = {
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var t = n._validateValue();
                                t && (n._addRule(), n.close(), i.wrapper.setFocusToSpread())
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    r.call(this, "./dialogs/dialogs.html", ".cellValueRuleFormat-dialog", t)
                }
                return __extends(e, r),
                e.prototype._init = function() {
                    var n = this;
                    this.formatCellDialog === undefined && (this.formatCellDialog = new i.FormatDialog),
                    this._element.find(".withStyle").change(function(t) {
                        var u = t.target || t.srcElement,
                        r = u;
                        r.value === i.res.conditionalFormatting.withStyle.customFormat && (n.formatCellDialog.selectTabOptions = {
                            numbers: !0,
                            font: !0,
                            border: !0,
                            fill: !0
                        },
                        n.formatCellDialog.setFormatDirectly(!1), n.formatCellDialog.open("font", {
                            family: "disabled",
                            size: "disabled",
                            weight: "disabled"
                        },
                        n._style, !0))
                    });
                    $(this.formatCellDialog).on("okClicked",
                    function(t, i) {
                        n._style = i
                    })
                },
                e.prototype._beforeOpen = function(n) {
                    var u = n[0],
                    t,
                    r;
                    this._style = undefined,
                    this._openType = u;
                    switch (u) {
                    case 2:
                        t = i.res.conditionalFormatting.between.title,
                        r = i.res.conditionalFormatting.between.description,
                        this._switchDisplay(!0);
                        break;
                    case 3:
                        t = i.res.conditionalFormatting.equalTo.title,
                        r = i.res.conditionalFormatting.equalTo.description,
                        this._switchDisplay(!1);
                        break;
                    case 0:
                        t = i.res.conditionalFormatting.greaterThan.title,
                        r = i.res.conditionalFormatting.greaterThan.description,
                        this._switchDisplay(!1);
                        break;
                    case 1:
                        t = i.res.conditionalFormatting.lessThan.title,
                        r = i.res.conditionalFormatting.lessThan.description,
                        this._switchDisplay(!1);
                        break
                    }
                    this._element.dialog("option", "title", t),
                    this._element.find(".description").text(r),
                    this._initCellValuesInput(),
                    $(this._element.find(".withStyle").children()[0]).prop("selected", !0)
                },
                e.prototype._switchDisplay = function(n) {
                    var i = this._element.find(".label-and"),
                    t = this._element.find(".textBox-cell2");
                    n ? (i.removeClass("hidden"), t.removeClass("hidden")) : (i.addClass("hidden"), t.addClass("hidden"))
                },
                e.prototype._getStyle = function() {
                    var n = parseInt(this._element.find(".withStyle").prop("selectedIndex"));
                    return u._getStyle(n, this._style)
                },
                e.prototype._addRule = function() {
                    var e = i.wrapper.spread.getActiveSheet(),
                    o = e.getSelections(),
                    f = this._element.find(".textBox-cell1").val(),
                    r = this._element.find(".textBox-cell2").val(),
                    u = this._getStyle(),
                    t;
                    switch (this._openType) {
                    case 2:
                        t = new n.spread.CellValueRule(6, f, r, u);
                        break;
                    case 3:
                        t = new n.spread.CellValueRule(0, f, r, u);
                        break;
                    case 0:
                        t = new n.spread.CellValueRule(2, f, r, u);
                        break;
                    case 1:
                        t = new n.spread.CellValueRule(4, f, r, u);
                        break
                    }
                    t.ranges = o,
                    i.actions.doAction("addRule", i.wrapper.spread, t)
                },
                e.prototype._initCellValuesInput = function() {
                    var r = i.wrapper.spread.getActiveSheet(),
                    e = r.getSelections(),
                    o = r.getCalcService(),
                    s = $.sku.wijspread.AverageCondition.prototype._createExpression,
                    u = this._element.find(".textBox-cell1"),
                    l = this._element.find(".textBox-cell2"),
                    a = s("AVERAGE", e),
                    n = o.evaluateParsedFormula(r._getSheetSource(), a, 0, 0, !0);
                    n instanceof t.Calc.CalcError && (n = 0);
                    if (this._openType === 2) {
                        var v = s("MIN", e),
                        f = o.evaluateParsedFormula(r._getSheetSource(), v, 0, 0, !0),
                        h = n - f,
                        c = n + f;
                        u.val(h),
                        l.val(c)
                    } else u.val(n)
                },
                e.prototype._validateValue = function() {
                    var t = this._element.find(".textBox-cell1").val(),
                    r = this._element.find(".textBox-cell2").val(),
                    n = !0;
                    switch (this._openType) {
                    case 2:
                        (t === "" || r === "") && (f.show(i.res.conditionalFormatting.exceptions.e1, i.res.title, 2), n = !1);
                        break;
                    case 3:
                    case 0:
                    case 1:
                        t === "" && (f.show(i.res.conditionalFormatting.exceptions.e1, i.res.title, 2), n = !1);
                        break
                    }
                    return n
                },
                e
            } (i.BaseDialog),
            i.CellValueRuleFormatDialog = p,
            g = function(r) {
                function e() {
                    var n = this,
                    t = {
                        title: i.res.conditionalFormatting.textThatCotains.title,
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var t = n._validateValue();
                                t && (n._addRule(), n.close(), i.wrapper.setFocusToSpread())
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    r.call(this, "./dialogs/dialogs.html", ".textRuleFormat-dialog", t)
                }
                return __extends(e, r),
                e.prototype._init = function() {
                    var n = this;
                    this.formatCellDialog === undefined && (this.formatCellDialog = new i.FormatDialog),
                    this._element.find(".withStyle").change(function(t) {
                        var u = t.target || t.srcElement,
                        r = u;
                        r.value === i.res.conditionalFormatting.withStyle.customFormat && (n.formatCellDialog.selectTabOptions = {
                            numbers: !0,
                            font: !0,
                            border: !0,
                            fill: !0
                        },
                        n.formatCellDialog.setFormatDirectly(!1), n.formatCellDialog.open("font", {
                            family: "disabled",
                            size: "disabled",
                            weight: "disabled"
                        },
                        n._style, !0))
                    });
                    $(this.formatCellDialog).on("okClicked",
                    function(t, i) {
                        n._style = i
                    })
                },
                e.prototype._beforeOpen = function() {
                    this._style = undefined,
                    this._initCellValuesInput(),
                    $(this._element.find(".withStyle").children()[0]).prop("selected", !0)
                },
                e.prototype._getStyle = function() {
                    var n = parseInt(this._element.find(".withStyle").prop("selectedIndex"));
                    return u._getStyle(n, this._style)
                },
                e.prototype._addRule = function() {
                    var o = i.wrapper.spread.getActiveSheet(),
                    s = o.getSelections(),
                    r = this._element.find(".textBox-cell1").val(),
                    h = this._getStyle(),
                    u;
                    if (r.toString().substring(0, 1) === "=") {
                        var c = new t.Calc.ParserContext(null, i.wrapper.spread.referenceStyle(), 0, 0),
                        e = (new t.Calc.Parser).parse(r, c),
                        f = e;
                        r = i.wrapper.spread.getActiveSheet().getCell(f.row, f.column).text()
                    }
                    u = new n.spread.SpecificTextRule(0, r, h),
                    u.ranges = s,
                    i.actions.doAction("addRule", i.wrapper.spread, u)
                },
                e.prototype._initCellValuesInput = function() {
                    var n = i.wrapper.spread.getActiveSheet(),
                    u = n.getActiveColumnIndex(),
                    f = n.getActiveRowIndex(),
                    t = n.getCell(f, u),
                    r = this._element.find(".textBox-cell1");
                    r.val(t.text())
                },
                e.prototype._validateValue = function() {
                    var t = this._element.find(".textBox-cell1").val(),
                    n = !0;
                    return t === "" && (f.show(i.res.conditionalFormatting.exceptions.e2, i.res.title, 2), n = !1),
                    n
                },
                e
            } (i.BaseDialog),
            i.TextRuleFormatDialog = g,
            nt = function(t) {
                function r() {
                    var n = this,
                    r = {
                        title: i.res.conditionalFormatting.dateOccurringFormat.title,
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                n._addRule(),
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".dateOccurringFormat-dialog", r)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var n = this;
                    this.formatCellDialog === undefined && (this.formatCellDialog = new i.FormatDialog),
                    this._element.find(".withStyle").change(function(t) {
                        var u = t.target || t.srcElement,
                        r = u;
                        r.value === i.res.conditionalFormatting.withStyle.customFormat && (n.formatCellDialog.selectTabOptions = {
                            numbers: !0,
                            font: !0,
                            border: !0,
                            fill: !0
                        },
                        n.formatCellDialog.setFormatDirectly(!1), n.formatCellDialog.open("font", {
                            family: "disabled",
                            size: "disabled",
                            weight: "disabled"
                        },
                        n._style, !0))
                    });
                    $(this.formatCellDialog).on("okClicked",
                    function(t, i) {
                        n._style = i
                    })
                },
                r.prototype._beforeOpen = function() {
                    this._style = undefined,
                    $(this._element.find(".date").children()[0]).prop("selected", !0),
                    $(this._element.find(".withStyle").children()[0]).prop("selected", !0)
                },
                r.prototype._getStyle = function() {
                    var n = parseInt(this._element.find(".withStyle").prop("selectedIndex"));
                    return u._getStyle(n, this._style)
                },
                r.prototype._addRule = function() {
                    var u = i.wrapper.spread.getActiveSheet(),
                    e = u.getSelections(),
                    o = this._getStyle(),
                    f = parseInt(this._element.find(".date").prop("selectedIndex")),
                    t,
                    r;
                    switch (f) {
                    case 0:
                        t = 1;
                        break;
                    case 1:
                        t = 0;
                        break;
                    case 2:
                        t = 2;
                        break;
                    case 3:
                        t = 3;
                        break;
                    case 4:
                        t = 8;
                        break;
                    case 5:
                        t = 7;
                        break;
                    case 6:
                        t = 9;
                        break;
                    case 7:
                        t = 5;
                        break;
                    case 8:
                        t = 4;
                        break;
                    case 9:
                        t = 6;
                        break
                    }
                    r = new n.spread.DateOccurringRule(t, o),
                    r.ranges = e,
                    i.actions.doAction("addRule", i.wrapper.spread, r)
                },
                r
            } (i.BaseDialog),
            i.DateOccurringFormatDialog = nt,
            tt = function(t) {
                function r() {
                    var n = this,
                    r = {
                        title: i.res.conditionalFormatting.duplicateValuesFormat.title,
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                n._addRule(),
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".duplicateValuesFormat-dialog", r)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var n = this;
                    this.formatCellDialog === undefined && (this.formatCellDialog = new i.FormatDialog),
                    this._element.find(".withStyle").change(function(t) {
                        var u = t.target || t.srcElement,
                        r = u;
                        r.value === i.res.conditionalFormatting.withStyle.customFormat && (n.formatCellDialog.selectTabOptions = {
                            numbers: !0,
                            font: !0,
                            border: !0,
                            fill: !0
                        },
                        n.formatCellDialog.setFormatDirectly(!1), n.formatCellDialog.open("font", {
                            family: "disabled",
                            size: "disabled",
                            weight: "disabled"
                        },
                        n._style, !0))
                    });
                    $(this.formatCellDialog).on("okClicked",
                    function(t, i) {
                        n._style = i
                    })
                },
                r.prototype._beforeOpen = function() {
                    this._style = undefined,
                    $(this._element.find(".type").children()[0]).prop("selected", !0),
                    $(this._element.find(".withStyle").children()[0]).prop("selected", !0)
                },
                r.prototype._getStyle = function() {
                    var n = parseInt(this._element.find(".withStyle").prop("selectedIndex"));
                    return u._getStyle(n, this._style)
                },
                r.prototype._addRule = function() {
                    var u = i.wrapper.spread.getActiveSheet(),
                    e = u.getSelections(),
                    r = this._getStyle(),
                    f = parseInt(this._element.find(".type").prop("selectedIndex")),
                    t;
                    switch (f) {
                    case 0:
                        t = new n.spread.DuplicateRule(r);
                        break;
                    case 1:
                        t = new n.spread.UniqueRule(r);
                        break
                    }
                    t.ranges = e,
                    i.actions.doAction("addRule", i.wrapper.spread, t)
                },
                r
            } (i.BaseDialog),
            i.DuplicateValuesFormatDialog = tt,
            d = function(t) {
                function r() {
                    var n = this,
                    r = {
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var t = n._validateValue();
                                t && (n._addRule(), n.close(), i.wrapper.setFocusToSpread())
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".top10RuleFormat-dialog", r)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var n = this;
                    this.formatCellDialog === undefined && (this.formatCellDialog = new i.FormatDialog),
                    this._element.find(".withStyle").change(function(t) {
                        var u = t.target || t.srcElement,
                        r = u;
                        r.value === i.res.conditionalFormatting.withStyle.customFormat && (n.formatCellDialog.selectTabOptions = {
                            numbers: !0,
                            font: !0,
                            border: !0,
                            fill: !0
                        },
                        n.formatCellDialog.setFormatDirectly(!1), n.formatCellDialog.open("font", {
                            family: "disabled",
                            size: "disabled",
                            weight: "disabled"
                        },
                        n._style, !0))
                    });
                    $(this.formatCellDialog).on("okClicked",
                    function(t, i) {
                        n._style = i
                    })
                },
                r.prototype._beforeOpen = function(n) {
                    var f = n[0],
                    u,
                    t,
                    r;
                    this._style = undefined,
                    this._openType = f;
                    switch (f) {
                    case 4:
                        u = i.res.conditionalFormatting.top10items.title,
                        t = i.res.conditionalFormatting.top10items.description;
                        break;
                    case 5:
                        u = i.res.conditionalFormatting.bottom10items.title,
                        t = i.res.conditionalFormatting.bottom10items.description;
                        break
                    }
                    this._element.dialog("option", "title", u),
                    this._element.find(".description").text(t),
                    r = this._element.find(".itemCounts"),
                    r.spinner({
                        min: 1,
                        max: 1e3
                    }),
                    r.val(10),
                    $(this._element.find(".withStyle").children()[0]).prop("selected", !0)
                },
                r.prototype._getStyle = function() {
                    var n = parseInt(this._element.find(".withStyle").prop("selectedIndex"));
                    return u._getStyle(n, this._style)
                },
                r.prototype._addRule = function() {
                    var f = i.wrapper.spread.getActiveSheet(),
                    e = f.getSelections(),
                    u = this._getStyle(),
                    r = this._element.find(".itemCounts").val(),
                    t;
                    switch (this._openType) {
                    case 4:
                        t = new n.spread.Top10Rule(0, r, u);
                        break;
                    case 5:
                        t = new n.spread.Top10Rule(1, r, u);
                        break
                    }
                    t.ranges = e,
                    i.actions.doAction("addRule", i.wrapper.spread, t)
                },
                r.prototype._validateValue = function() {
                    var n = parseInt(this._element.find(".itemCounts").val()),
                    t = !0;
                    return (isNaN(n) || n > 1e3 || n < 1) && (f.show(i.res.conditionalFormatting.exceptions.e3, i.res.title, 2), t = !1),
                    t
                },
                r
            } (i.BaseDialog),
            i.Top10RuleFormatDialog = d,
            w = function(t) {
                function r() {
                    var n = this,
                    r = {
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                n._addRule(),
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                i.wrapper.setFocusToSpread()
                            }
                        }]
                    };
                    t.call(this, "./dialogs/dialogs.html", ".averageRuleFormat-dialog", r)
                }
                return __extends(r, t),
                r.prototype._init = function() {
                    var n = this;
                    this.formatCellDialog === undefined && (this.formatCellDialog = new i.FormatDialog),
                    this._element.find(".withStyle").change(function(t) {
                        var u = t.target || t.srcElement,
                        r = u;
                        r.value === i.res.conditionalFormatting.withStyle.customFormat && (n.formatCellDialog.selectTabOptions = {
                            numbers: !0,
                            font: !0,
                            border: !0,
                            fill: !0
                        },
                        n.formatCellDialog.setFormatDirectly(!1), n.formatCellDialog.open("font", {
                            family: "disabled",
                            size: "disabled",
                            weight: "disabled"
                        },
                        n._style, !0))
                    });
                    $(this.formatCellDialog).on("okClicked",
                    function(t, i) {
                        n._style = i
                    })
                },
                r.prototype._beforeOpen = function(n) {
                    var u = n[0],
                    t,
                    r;
                    this._style = undefined,
                    this._openType = u;
                    switch (u) {
                    case 6:
                        t = i.res.conditionalFormatting.aboveAverage.title,
                        r = i.res.conditionalFormatting.aboveAverage.description;
                        break;
                    case 7:
                        t = i.res.conditionalFormatting.belowAverage.title,
                        r = i.res.conditionalFormatting.belowAverage.description;
                        break
                    }
                    this._element.dialog("option", "title", t),
                    this._element.find(".description").text(r),
                    $(this._element.find(".withStyle").children()[0]).prop("selected", !0)
                },
                r.prototype._getStyle = function() {
                    var n = parseInt(this._element.find(".withStyle").prop("selectedIndex"));
                    return u._getStyle(n, this._style)
                },
                r.prototype._addRule = function() {
                    var u = i.wrapper.spread.getActiveSheet(),
                    f = u.getSelections(),
                    r = this._getStyle(),
                    t;
                    switch (this._openType) {
                    case 6:
                        t = new n.spread.AverageRule(0, r);
                        break;
                    case 7:
                        t = new n.spread.AverageRule(1, r);
                        break
                    }
                    t.ranges = f,
                    i.actions.doAction("addRule", i.wrapper.spread, t)
                },
                r
            } (i.BaseDialog),
            i.AverageRuleFormatDialog = w,
            function(n) {
                n[n.formatOnValue = 0] = "formatOnValue",
                n[n.formatContain = 1] = "formatContain",
                n[n.formatRankedValue = 2] = "formatRankedValue",
                n[n.formatAbove = 3] = "formatAbove",
                n[n.formatUnique = 4] = "formatUnique",
                n[n.useFormula = 5] = "useFormula"
            } (i.RuleType || (i.RuleType = {})),
            ni = i.RuleType,
            function(n) {
                n[n.color2 = 0] = "color2",
                n[n.color3 = 1] = "color3",
                n[n.dataBar = 2] = "dataBar",
                n[n.iconSets = 3] = "iconSets"
            } (i.FormatStyle || (i.FormatStyle = {})),
            kt = i.FormatStyle,
            o = function(r) {
                function e() {
                    var n = this,
                    t = {
                        width: "auto",
                        height: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                var t = n._validateValue();
                                t && (n._addRule(), i.actions.isFileModified = !0, n.close(), n._notApplySetting || i.wrapper.setFocusToSpread(), n._ranges && (n._rule.ranges = n._ranges), n._raiseClose(event, {
                                    rule: n._rule,
                                    isCloseByOK: !0
                                }), n.destroy())
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                n.close(),
                                n._notApplySetting || i.wrapper.setFocusToSpread(),
                                n._ranges && (n._rule.ranges = n._ranges),
                                n._raiseClose(event, {
                                    rule: n._rule,
                                    isCloseByOK: !1
                                }),
                                n.destroy()
                            }
                        }],
                        beforeClose: function(t, i) {
                            t.currentTarget && (n._ranges && (n._rule.ranges = n._ranges), n._raiseClose(t, {
                                rule: n._rule,
                                isCloseByOK: !1
                            }), n.destroy())
                        }
                    };
                    r.call(this, "./dialogs/dialogs.html", ".newFormattingRule-dialog", t)
                }
                return __extends(e, r),
                e.prototype.destroy = function() {
                    var u = $(".min-color-picker"),
                    f = $(".max-color-picker"),
                    i = $(".mid-color-picker"),
                    n = $(".barcolor1-picker"),
                    t = $(".barcolor2-picker");
                    u.length > 0 && u.children().length > 0 && u.wijcolorpicker("destroy"),
                    f.length > 0 && f.children().length > 0 && f.wijcolorpicker("destroy"),
                    i.length > 0 && i.children().length > 0 && i.wijcolorpicker("destroy"),
                    n.length > 0 && n.children().length > 0 && n.wijcolorpicker("destroy"),
                    t.length > 0 && t.children().length > 0 && t.wijcolorpicker("destroy"),
                    u.remove(),
                    f.remove(),
                    i.remove(),
                    n.remove(),
                    t.remove(),
                    $("#icon-sets-popup-dialog").remove(),
                    r.prototype.destroy.call(this)
                },
                e.prototype._init = function() {
                    var n = this,
                    t = this._element.find(".ruleType");
                    t.change(function() {
                        var i = parseInt(t.prop("selectedIndex"));
                        n._switchVisible(i),
                        n._showSperatorLine(i),
                        n._isEdit && n._parseRule(n._rule)
                    }),
                    this._notApplySetting = !1,
                    this._addEvents()
                },
                e.prototype._beforeOpen = function(n) {
                    var t = n[0],
                    e = n[1],
                    o = n[2],
                    f = n[3],
                    r = n[4],
                    u = n[5];
                    this._style = undefined,
                    this._negativeDialogData = undefined,
                    this._switchVisible(t, o, u),
                    this._showSperatorLine(t),
                    e ? this._element.dialog("option", "title", i.res.conditionalFormatting.newFormattingRule.title) : (this._element.dialog("option", "title", i.res.conditionalFormatting.newFormattingRule.title2), this._parseRule(r), this._isEdit = !0),
                    this._notApplySetting = f
                },
                e.prototype._addEvents = function() {
                    var t = this,
                    n = this,
                    k = this._element.find(".formatStyle"),
                    h,
                    c,
                    v,
                    l,
                    s,
                    it,
                    y,
                    tt,
                    u,
                    r,
                    i,
                    o,
                    a,
                    nt,
                    ft,
                    ut,
                    rt,
                    g,
                    p,
                    w,
                    b,
                    e,
                    f,
                    d;
                    k.change(function() {
                        var n = parseInt(k.prop("selectedIndex"));
                        t._formatOnValue_switchVisible(n),
                        (n === 0 || n === 1) && t._colorOfColor23Changed()
                    }),
                    h = this._element.find(".minSelector"),
                    h.change(function() {
                        var i = parseInt(h.prop("selectedIndex")),
                        n = t._element.find(".minValue");
                        switch (i) {
                        case 0:
                            n.val("(" + h.val() + ")"),
                            n.attr("disabled", "disabled");
                            break;
                        case 1:
                        case 2:
                            n.val(0),
                            n.removeAttr("disabled");
                            break;
                        case 3:
                            n.val(""),
                            n.removeAttr("disabled");
                            break;
                        case 4:
                            n.val(10),
                            n.removeAttr("disabled");
                            break
                        }
                    }),
                    c = this._element.find(".maxSelector"),
                    c.change(function() {
                        var i = parseInt(c.prop("selectedIndex")),
                        n = t._element.find(".maxValue");
                        switch (i) {
                        case 0:
                            n.val("(" + c.val() + ")"),
                            n.attr("disabled", "disabled");
                            break;
                        case 1:
                            n.val(0),
                            n.removeAttr("disabled");
                            break;
                        case 2:
                            n.val(100),
                            n.removeAttr("disabled");
                            break;
                        case 3:
                            n.val(""),
                            n.removeAttr("disabled");
                            break;
                        case 4:
                            n.val(90),
                            n.removeAttr("disabled");
                            break
                        }
                    }),
                    v = this._element.find(".midSelector"),
                    v.change(function() {
                        var i = parseInt(v.prop("selectedIndex")),
                        n = t._element.find(".midValue");
                        switch (i) {
                        case 0:
                            n.val(0);
                            break;
                        case 1:
                            n.val(50);
                            break;
                        case 2:
                            n.val("");
                            break;
                        case 3:
                            n.val(50);
                            break
                        }
                    }),
                    l = this._element.find(".minSelector2"),
                    l.change(function() {
                        var i = parseInt(l.prop("selectedIndex")),
                        n = t._element.find(".minValue2");
                        switch (i) {
                        case 0:
                        case 5:
                            n.val("(" + l.val() + ")"),
                            n.attr("disabled", "disabled");
                            break;
                        case 1:
                        case 2:
                            n.val(0),
                            n.removeAttr("disabled");
                            break;
                        case 3:
                            n.val(""),
                            n.removeAttr("disabled");
                            break;
                        case 4:
                            n.val(10),
                            n.removeAttr("disabled");
                            break
                        }
                    }),
                    s = this._element.find(".maxSelector2"),
                    s.change(function() {
                        var i = parseInt(s.prop("selectedIndex")),
                        n = t._element.find(".maxValue2");
                        switch (i) {
                        case 0:
                        case 5:
                            n.val("(" + s.val() + ")"),
                            n.attr("disabled", "disabled");
                            break;
                        case 1:
                            n.val(0),
                            n.removeAttr("disabled");
                            break;
                        case 2:
                            n.val(100),
                            n.removeAttr("disabled");
                            break;
                        case 3:
                            n.val(""),
                            n.removeAttr("disabled");
                            break;
                        case 4:
                            n.val(90),
                            n.removeAttr("disabled");
                            break
                        }
                    }),
                    it = this._element.find(".fillSelector"),
                    it.change(function() {
                        n._dataBarAppChanged()
                    }),
                    y = this._element.find(".borderSelector"),
                    y.change(function() {
                        n._dataBarAppChanged(),
                        y.prop("selectedIndex") === 0 ? t._element.find(".barcolor2-frame button").attr("disabled", "disabled") : t._element.find(".barcolor2-frame button").removeAttr("disabled")
                    }),
                    tt = this._element.find(".barDirectionSelector"),
                    tt.change(function() {
                        n._dataBarAppChanged()
                    }),
                    u = this._element.find(".value1"),
                    u.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(u.val())
                    }),
                    r = this._element.find(".value2"),
                    r.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(undefined, r.val())
                    }),
                    i = this._element.find(".value3"),
                    i.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(undefined, undefined, i.val())
                    }),
                    o = this._element.find(".value4"),
                    o.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(undefined, undefined, undefined, o.val())
                    }),
                    a = this._element.find(".reverseIconOrder"),
                    a.change(function(n) {
                        for (var u = [], r, i = 0; i < t._speratoriconStyleImages.length; i++) u.push(t._speratoriconStyleImages[i].toString());
                        r = u.reverse(),
                        t._formatOnValue_iconSets_updateIcons(undefined, r)
                    });
                    $("#icon-sets-popup-dialog button").on("mouseenter",
                    function(n) {
                        var i = n.currentTarget,
                        t = $(i).children("span.icon-button-container");
                        $(t).addClass("ui-state-hover")
                    });
                    $("#icon-sets-popup-dialog button").on("mouseleave",
                    function(n) {
                        var i = n.currentTarget,
                        t = $(i).children("span.icon-button-container");
                        $(t).removeClass("ui-state-hover")
                    });
                    $("#icon-sets-popup-dialog button").on("click",
                    function(t) {
                        var u, i, e;
                        n._element.find(".iconStyle-frame").wijcomboframe("close");
                        var r = [],
                        f = t.currentTarget,
                        s = f.childNodes[1].children;
                        for (i = 0; i < s.length; i++) {
                            var o = s[i].className,
                            h = "iconSetsIcons horizontal-icon-set-item ",
                            c = o.substring(h.length, o.length);
                            r.push(c)
                        }
                        if (a.prop("checked")) {
                            for (u = [], i = 0; i < r.length; i++) u.push(r[i].toString());
                            e = u.reverse(),
                            n._formatOnValue_iconSets_updateIcons(r, e)
                        } else n._formatOnValue_iconSets_updateIcons(r, r);
                        n._formatOnValue_IconSets_switchVisible(r.length),
                        n._iconNames = f.name,
                        n._formatOnValue_iconSets_updateValues(f.name)
                    });
                    nt = this._element.find(".value1Selector"),
                    nt.change(function() {
                        n._formatOnValue_iconSets_updateValues(n._iconNames, 1)
                    }),
                    ft = this._element.find(".value2Selector"),
                    ft.change(function() {
                        n._formatOnValue_iconSets_updateValues(n._iconNames, 2)
                    }),
                    ut = this._element.find(".value3Selector"),
                    ut.change(function() {
                        n._formatOnValue_iconSets_updateValues(n._iconNames, 3)
                    }),
                    rt = this._element.find(".value4Selector"),
                    rt.change(function() {
                        n._formatOnValue_iconSets_updateValues(n._iconNames, 4)
                    }),
                    g = this._element.find(".operator1"),
                    g.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(u.val())
                    }),
                    p = this._element.find(".operator2"),
                    p.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(undefined, r.val())
                    }),
                    w = this._element.find(".operator3"),
                    w.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(undefined, undefined, i.val())
                    }),
                    b = this._element.find(".operator4"),
                    b.change(function() {
                        n._formatOnValue_iconSets_updatedesctiptions(undefined, undefined, undefined, o.val())
                    }),
                    e = this._element.find(".formatContain-type"),
                    f = this._element.find(".operator"),
                    e.change(function() {
                        var n = parseInt(e.prop("selectedIndex"));
                        t._formatContain_switchOperator(n),
                        t._formatContain_switchVisible(n),
                        f.trigger("change")
                    }),
                    f.change(function(n) {
                        var u = parseInt(e.prop("selectedIndex")),
                        i,
                        r;
                        u === 0 && (i = n.target || n.srcElement, r = i, t._formatContain_switchVisible_CellValue(f.prop("selectedIndex")))
                    }),
                    d = this._element.find(".format-button"),
                    d.click(function() {
                        t.formatCellDialog.selectTabOptions = {
                            numbers: !0,
                            font: !0,
                            border: !0,
                            fill: !0
                        },
                        t.formatCellDialog.setFormatDirectly(!1),
                        t.formatCellDialog.open("font", {
                            family: "disabled",
                            size: "disabled",
                            weight: "disabled"
                        },
                        t._style, !0)
                    })
                },
                e.prototype._showSperatorLine = function(n) {
                    var t = ".format-rule-sperator-line";
                    n === 0 ? this._element.find(t).css("display", "none") : this._element.find(t).css("display", "block")
                },
                e.prototype._raiseClose = function(n, t) {
                    $(this).trigger("dialogClose", t)
                },
                e.prototype._parseRule = function(n) {
                    var c, o, et, p, vi, oi, kt, ft, b, w, d, ni, fi, e, si, v, ei, y, dt, rr, ir, gt, er, fr, ur, ki, bi, wi, nr, gi, ti, ii, k, ui, ri, tt, vt, di, at, r, f, bt, wt, ut, it, nt, l, pt, h, tr, g, pi, st, ht, ct, lt, hi, s, ot, ai, yt, rt, ci, li, a, i, yi;
                    this._ranges = n.ranges,
                    this._rule = n;
                    if (n instanceof t.TwoScaleRule) c = n,
                    et = c.getMinimumType(),
                    v = c.getMinimumValue(),
                    p = c.getMinimumColor(),
                    ft = c.getMaximumType(),
                    y = c.getMaximumValue(),
                    b = c.getMaximumColor(),
                    w = this._element.find(".minSelector"),
                    i = this._getIndexofScaleValueType(et),
                    w.prop("selectedIndex", i),
                    w.trigger("change"),
                    d = this._element.find(".maxSelector"),
                    k = this._getIndexofScaleValueType(ft),
                    d.prop("selectedIndex", k),
                    d.trigger("change"),
                    $(".min-color-picker").wijcolorpicker("option", "value", p),
                    this._element.find(".min-color-span").css("background-color", p),
                    $(".max-color-picker").wijcolorpicker("option", "value", b),
                    this._element.find(".max-color-span").css("background-color", b),
                    this._element.find(".minValue").val(v),
                    this._element.find(".maxValue").val(y),
                    this._colorOfColor23Changed();
                    else if (n instanceof t.ThreeScaleRule) o = n,
                    et = o.getMinimumType(),
                    v = o.getMinimumValue(),
                    p = o.getMinimumColor(),
                    ft = o.getMaximumType(),
                    y = o.getMaximumValue(),
                    b = o.getMaximumColor(),
                    vi = o.getMidpointType(),
                    oi = o.getMidpointValue(),
                    kt = o.getMidpointColor(),
                    w = this._element.find(".minSelector"),
                    i = this._getIndexofScaleValueType(et),
                    w.prop("selectedIndex", i),
                    w.trigger("change"),
                    d = this._element.find(".maxSelector"),
                    k = this._getIndexofScaleValueType(ft),
                    d.prop("selectedIndex", k),
                    d.trigger("change"),
                    ni = this._element.find(".midSelector"),
                    fi = this._getIndexofScaleValueType(vi) - 1,
                    ni.prop("selectedIndex", fi),
                    ni.trigger("change"),
                    $(".min-color-picker").wijcolorpicker("option", "value", p),
                    this._element.find(".min-color-span").css("background-color", p),
                    $(".max-color-picker").wijcolorpicker("option", "value", b),
                    this._element.find(".max-color-span").css("background-color", b),
                    $(".mid-color-picker").wijcolorpicker("option", "value", kt),
                    this._element.find(".mid-color-span").css("background-color", kt),
                    this._element.find(".minValue").val(v),
                    this._element.find(".maxValue").val(y),
                    this._element.find(".midValue").val(oi),
                    this._colorOfColor23Changed();
                    else if (n instanceof t.DataBarRule) e = n,
                    si = e.minimumType(),
                    v = e.minimumValue(),
                    ei = e.maximumType(),
                    y = e.maximumValue(),
                    dt = e.color(),
                    gt = e.borderColor(),
                    rr = e.showBarOnly(),
                    ir = e.gradient(),
                    er = e.showBorder(),
                    fr = e.dataBarDirection(),
                    ur = e.negativeBorderColor(),
                    ki = e.negativeFillColor(),
                    bi = e.useNegativeBorderColor(),
                    wi = e.useNegativeFillColor(),
                    nr = e.axisColor(),
                    gi = e.axisPosition(),
                    ti = this._element.find(".minSelector2"),
                    i = this._getIndexofScaleValueType(si),
                    ti.prop("selectedIndex", i),
                    ti.trigger("change"),
                    ii = this._element.find(".maxSelector2"),
                    k = this._getIndexofScaleValueType(ei),
                    ii.prop("selectedIndex", k),
                    ii.trigger("change"),
                    this._element.find(".minValue2").val(v),
                    this._element.find(".maxValue2").val(y),
                    $(".barcolor1-picker").wijcolorpicker("option", "value", dt),
                    $(".barcolor2-picker").wijcolorpicker("option", "value", gt),
                    this._element.find(".barcolor1-span").css("background-color", dt),
                    this._element.find(".barcolor2-span").css("background-color", gt),
                    this._element.find(".showBarOnly").prop("checked", rr),
                    ui = this._element.find(".fillSelector"),
                    ui.prop("selectedIndex", ir === !0 ? 1 : 0),
                    ui.trigger("change"),
                    ri = this._element.find(".borderSelector"),
                    ri.prop("selectedIndex", er === !0 ? 1 : 0),
                    ri.trigger("change"),
                    this._element.find(".barDirectionSelector").prop("selectedIndex", fr === 0 ? 0 : 1),
                    this._negativeDialogData = {
                        negativeBorderColor: ur,
                        negativeFillColor: ki,
                        useNegativeBorderColor: bi,
                        useNegativeFillColor: wi,
                        axisColor: nr,
                        axisPosition: gi
                    },
                    this._dataBarAppChanged();
                    else if (n instanceof t.IconSetRule) {
                        tt = n,
                        vt = tt.iconSetType(),
                        di = tt.showIconOnly(),
                        at = tt.reverseIconOrder(),
                        r = tt.iconCriteria();
                        switch (vt) {
                        case 0:
                            f = "3-arrows-icon-set";
                            break;
                        case 1:
                            f = "3-arrows-gray-icon-set";
                            break;
                        case 2:
                            f = "3-triangles-icon-set";
                            break;
                        case 5:
                            f = "3-traffic-lights-unrimmed-icon-set";
                            break;
                        case 6:
                            f = "3-traffic-lights-rimmed-icon-set";
                            break;
                        case 7:
                            f = "3-signs-icon-set";
                            break;
                        case 8:
                            f = "3-symbols-circled-icon-set";
                            break;
                        case 9:
                            f = "3-symbols-uncircled-icon-set";
                            break;
                        case 4:
                            f = "3-flags-icon-set";
                            break;
                        case 3:
                            f = "3-stars-icon-set";
                            break;
                        case 11:
                            f = "4-arrows-gray-icon-set";
                            break;
                        case 10:
                            f = "4-arrows-icon-set";
                            break;
                        case 14:
                            f = "4-traffic-lights-icon-set";
                            break;
                        case 12:
                            f = "red-to-black-icon-set";
                            break;
                        case 13:
                            f = "4-ratings-icon-set";
                            break;
                        case 16:
                            f = "5-arrows-gray-icon-set";
                            break;
                        case 15:
                            f = "5-arrows-icon-set";
                            break;
                        case 18:
                            f = "5-quarters-icon-set";
                            break;
                        case 17:
                            f = "5-ratings-icon-set";
                            break;
                        case 19:
                            f = "5-boxes-icon-set";
                            break
                        }
                        for (this._formatOnValue_iconSets_updateValues(f), this._element.find(".showIconOnly").prop("checked", di), this._element.find(".reverseIconOrder").prop("checked", at), this._element.find(".operator1").prop("selectedIndex", r[r.length - 1].isGreaterThanOrEqualTo === !0 ? 0 : 1), this._element.find(".operator2").prop("selectedIndex", r[r.length - 2].isGreaterThanOrEqualTo === !0 ? 0 : 1), this._element.find(".value1Selector").prop("selectedIndex", this._getIndexofIconValueType(r[r.length - 1].iconValueType)), this._element.find(".value2Selector").prop("selectedIndex", this._getIndexofIconValueType(r[r.length - 2].iconValueType)), bt = this._element.find(".value1"), bt.val(r[r.length - 1].iconValue), wt = this._element.find(".value2"), wt.val(r[r.length - 2].iconValue), r.length < 3 || (this._element.find(".operator3").prop("selectedIndex", r[r.length - 3].isGreaterThanOrEqualTo === !0 ? 0 : 1), this._element.find(".value3Selector").prop("selectedIndex", this._getIndexofIconValueType(r[r.length - 3].iconValueType)), ut = this._element.find(".value3"), ut.val(r[r.length - 3].iconValue)), r.length < 4 || (this._element.find(".operator4").prop("selectedIndex", r[r.length - 4].isGreaterThanOrEqualTo === !0 ? 0 : 1), this._element.find(".value4Selector").prop("selectedIndex", this._getIndexofIconValueType(r[r.length - 4].iconValueType)), it = this._element.find(".value4"), it.val(r[r.length - 4].iconValue)), nt = $("<div></div>"), u._drawIconSetPreview(nt, vt), nt.children().removeClass("iconSetsIcons"), l = [], h = 0; h < nt.children().length; h++) l.push(nt.children()[h].className);
                        if (at) {
                            for (pt = [], h = 0; h < l.length; h++) pt.push(l[h]),
                            tr = pt.reverse();
                            this._formatOnValue_iconSets_updateIcons(l, tr)
                        } else this._formatOnValue_iconSets_updateIcons(l, l);
                        this._formatOnValue_IconSets_switchVisible(r.length + 1),
                        this._formatOnValue_iconSets_updatedesctiptions(bt.val(), wt.val(), ut === undefined ? undefined: ut.val(), it === undefined ? undefined: it.val())
                    } else if (n instanceof t.CellValueRule) {
                        g = n,
                        ht = g.operator,
                        ct = g.value1,
                        pi = g.value2,
                        this._style = g.style,
                        s = this._element.find(".formatContain-type"),
                        s.prop("selectedIndex", 0),
                        s.trigger("change");
                        switch (ht) {
                        case 6:
                            i = 0;
                            break;
                        case 7:
                            i = 1;
                            break;
                        case 0:
                            i = 2;
                            break;
                        case 1:
                            i = 3;
                            break;
                        case 2:
                            i = 4;
                            break;
                        case 4:
                            i = 5;
                            break;
                        case 3:
                            i = 6;
                            break;
                        case 5:
                            i = 7;
                            break
                        }
                        this._element.find(".operator").prop("selectedIndex", i),
                        this._element.find(".operator").trigger("change"),
                        this._element.find(".textBox-cell1").val(ct),
                        this._element.find(".textBox-cell2").val(pi),
                        this._drawPreviewControl(this._style)
                    } else if (n instanceof t.SpecificTextRule) {
                        st = n,
                        ht = st.operator,
                        ct = st.text,
                        this._style = st.style,
                        s = this._element.find(".formatContain-type"),
                        s.prop("selectedIndex", 1),
                        s.trigger("change");
                        switch (ht) {
                        case 0:
                            i = 0;
                            break;
                        case 1:
                            i = 1;
                            break;
                        case 2:
                            i = 2;
                            break;
                        case 3:
                            i = 3;
                            break
                        }
                        this._element.find(".operator").prop("selectedIndex", i),
                        this._element.find(".operator").trigger("change"),
                        this._element.find(".textBox-cell1").val(ct),
                        this._drawPreviewControl(this._style)
                    } else if (n instanceof t.DateOccurringRule) {
                        lt = n,
                        hi = lt.type,
                        this._style = lt.style,
                        s = this._element.find(".formatContain-type"),
                        s.prop("selectedIndex", 2),
                        s.trigger("change");
                        switch (hi) {
                        case 1:
                            i = 0;
                            break;
                        case 0:
                            i = 1;
                            break;
                        case 2:
                            i = 2;
                            break;
                        case 3:
                            i = 3;
                            break;
                        case 8:
                            i = 4;
                            break;
                        case 7:
                            i = 5;
                            break;
                        case 9:
                            i = 6;
                            break;
                        case 5:
                            i = 7;
                            break;
                        case 4:
                            i = 8;
                            break;
                        case 6:
                            i = 9;
                            break
                        }
                        this._element.find(".operator").prop("selectedIndex", i),
                        this._element.find(".operator").trigger("change"),
                        this._drawPreviewControl(this._style)
                    } else if (n instanceof t.Top10Rule) ot = n,
                    rt = ot.type,
                    ai = ot.rank,
                    this._style = ot.style,
                    this._element.find(".formatRankedValue-type").prop("selectedIndex", rt === 0 ? 0 : 1),
                    this._element.find(".formatRankedValue-type").trigger("change"),
                    this._element.find(".itemCounts").val(ai),
                    this._drawPreviewControl(this._style);
                    else if (n instanceof t.AverageRule) {
                        yt = n,
                        rt = yt.type,
                        this._style = yt.style;
                        switch (rt) {
                        case 0:
                            i = 0;
                            break;
                        case 1:
                            i = 1;
                            break;
                        case 2:
                            i = 2;
                            break;
                        case 3:
                            i = 3;
                            break;
                        case 4:
                            i = 4;
                            break;
                        case 5:
                            i = 5;
                            break;
                        case 6:
                            i = 6;
                            break;
                        case 7:
                            i = 7;
                            break;
                        case 8:
                            i = 8;
                            break;
                        case 9:
                            i = 9;
                            break
                        }
                        this._element.find(".formatAbove-type").prop("selectedIndex", i),
                        this._element.find(".formatAbove-type").trigger("change"),
                        this._drawPreviewControl(this._style)
                    } else n instanceof t.DuplicateRule ? (ci = n, this._style = ci.style, this._element.find(".formatUnique-type").prop("selectedIndex", 0), this._drawPreviewControl(this._style)) : n instanceof t.UniqueRule ? (li = n, this._style = li.style, this._element.find(".formatUnique-type").prop("selectedIndex", 1), this._drawPreviewControl(this._style)) : n instanceof t.FormulaRule && (a = u._getformulaRuleType(n), i = a.selectorIndex, this._style = a.style, a.ruleType === 1 ? (this._element.find(".formatContain-type").prop("selectedIndex", i), this._element.find(".formatContain-type").trigger("change")) : a.ruleType === 5 && (yi = a.formula, this._element.find(".formula-input").val(yi)), this._drawPreviewControl(this._style))
                },
                e.prototype._getIndexofScaleValueType = function(n) {
                    var t;
                    switch (n) {
                    case 2:
                    case 1:
                        t = 0;
                        break;
                    case 0:
                        t = 1;
                        break;
                    case 3:
                        t = 2;
                        break;
                    case 6:
                        t = 3;
                        break;
                    case 4:
                        t = 4;
                        break;
                    case 5:
                    case 7:
                        t = 5;
                        break
                    }
                    return t
                },
                e.prototype._getIndexofIconValueType = function(n) {
                    var t;
                    switch (n) {
                    case 1:
                        t = 0;
                        break;
                    case 4:
                        t = 1;
                        break;
                    case 7:
                        t = 2;
                        break;
                    case 5:
                        t = 3;
                        break
                    }
                    return t
                },
                e.prototype._getIconValueTypeofIndex = function(n) {
                    var t;
                    switch (n) {
                    case 0:
                        t = 1;
                        break;
                    case 1:
                        t = 4;
                        break;
                    case 2:
                        t = 7;
                        break;
                    case 3:
                        t = 5;
                        break
                    }
                    return t
                },
                e.prototype._validateValue = function() {
                    var h = parseInt(this._element.find(".ruleType").prop("selectedIndex")),
                    n,
                    u,
                    s,
                    r;
                    switch (h) {
                    case 0:
                        break;
                    case 1:
                        var c = parseInt(this._element.find(".formatContain-type").prop("selectedIndex")),
                        o = this._element.find(".operator").prop("selectedIndex"),
                        e = this._element.find(".textBox-cell1"),
                        l = this._element.find(".textBox-cell2");
                        switch (c) {
                        case 0:
                            if (o === 0 || o === 1) {
                                if (e.val() === "" || l.val() === "") return f.show(i.res.conditionalFormatting.exceptions.e4, i.res.title, 2),
                                !1
                            } else if (e.val() === "") return f.show(i.res.conditionalFormatting.exceptions.e4, i.res.title, 2),
                            !1;
                            break;
                        case 1:
                            if (e.val() === "") return f.show(i.res.conditionalFormatting.exceptions.e4, i.res.title, 2),
                            !1;
                            break
                        }
                        break;
                    case 2:
                        return n = parseInt(this._element.find(".itemCounts").val()),
                        u = !0,
                        (isNaN(n) || n > 1e3 || n < 1) && (f.show(i.res.conditionalFormatting.exceptions.e3, i.res.title, 2), u = !1),
                        u;
                        break;
                    case 5:
                        s = this._element.find(".formula-input").val(),
                        r = (new t.Calc.Parser).parse(s);
                        if (! (r instanceof t.Calc.Expressions.FunctionExpression) && !(r instanceof t.Calc.Expressions.CellExpression) && !(r instanceof t.Calc.Expressions.OperatorExpression)) return f.show(i.res.conditionalFormatting.exceptions.e5, i.res.title, 2),
                        !1;
                        break
                    }
                    return ! 0
                },
                e.prototype._addRule = function() {
                    var i = parseInt(this._element.find(".ruleType").prop("selectedIndex")),
                    t,
                    n;
                    switch (i) {
                    case 0:
                        t = parseInt(this._element.find(".formatStyle").prop("selectedIndex"));
                        switch (t) {
                        case 0:
                            this._addRuleOfColorScale(!1);
                            break;
                        case 1:
                            this._addRuleOfColorScale(!0);
                            break;
                        case 2:
                            this._addRuleOfDataBar();
                            break;
                        case 3:
                            this._addRuleOfIconSets();
                            break
                        }
                        break;
                    case 1:
                        n = parseInt(this._element.find(".formatContain-type").prop("selectedIndex"));
                        switch (n) {
                        case 0:
                            this._addRuleOfCellValue();
                            break;
                        case 1:
                            this._addRuleOfText();
                            break;
                        case 2:
                            this._addRuleOfDatesOccuring();
                            break;
                        default:
                            this._addRuleOfFormulaRule(n);
                            break
                        }
                        break;
                    case 2:
                        this._addRuleOfformatRankedValue();
                        break;
                    case 3:
                        this._addRuleOfformatAbove();
                        break;
                    case 4:
                        this._addRuleOfformatUnique();
                        break;
                    case 5:
                        this._addRuleOfuseFormula();
                        break
                    }
                },
                e.prototype._switchVisible = function(n, t, i) {
                    var s = this._element.find(".formatOnValue"),
                    o = this._element.find(".formatContain"),
                    c = this._element.find(".formatRankedValue"),
                    h = this._element.find(".formatAbove"),
                    u = this._element.find(".formatUnique"),
                    r = this._element.find(".useFormula"),
                    e = this._element.find(".ruleType"),
                    f = this._element.find(".preview");
                    switch (n) {
                    case 0:
                        s.removeClass("hidden"),
                        o.addClass("hidden"),
                        c.addClass("hidden"),
                        h.addClass("hidden"),
                        u.addClass("hidden"),
                        r.addClass("hidden"),
                        f.addClass("hidden"),
                        this._initformatOnValue(t),
                        e.prop("selectedIndex", 0);
                        break;
                    case 1:
                        s.addClass("hidden"),
                        o.removeClass("hidden"),
                        c.addClass("hidden"),
                        h.addClass("hidden"),
                        u.addClass("hidden"),
                        r.addClass("hidden"),
                        f.removeClass("hidden"),
                        this._initformatContain(i),
                        this._initPreview(),
                        e.prop("selectedIndex", 1);
                        break;
                    case 2:
                        s.addClass("hidden"),
                        o.addClass("hidden"),
                        c.removeClass("hidden"),
                        h.addClass("hidden"),
                        u.addClass("hidden"),
                        r.addClass("hidden"),
                        f.removeClass("hidden"),
                        this._initformatRankedValue(),
                        this._initPreview(),
                        e.prop("selectedIndex", 2);
                        break;
                    case 3:
                        s.addClass("hidden"),
                        o.addClass("hidden"),
                        c.addClass("hidden"),
                        h.removeClass("hidden"),
                        u.addClass("hidden"),
                        r.addClass("hidden"),
                        f.removeClass("hidden"),
                        this._initformatAbove(),
                        this._initPreview(),
                        e.prop("selectedIndex", 3);
                        break;
                    case 4:
                        s.addClass("hidden"),
                        o.addClass("hidden"),
                        c.addClass("hidden"),
                        h.addClass("hidden"),
                        u.removeClass("hidden"),
                        r.addClass("hidden"),
                        f.removeClass("hidden"),
                        this._initformatUnique(),
                        this._initPreview(),
                        e.prop("selectedIndex", 4);
                        break;
                    case 5:
                        s.addClass("hidden"),
                        o.addClass("hidden"),
                        c.addClass("hidden"),
                        h.addClass("hidden"),
                        u.addClass("hidden"),
                        r.removeClass("hidden"),
                        f.removeClass("hidden"),
                        this._inituseFormula(),
                        this._initPreview(),
                        e.prop("selectedIndex", 5);
                        break
                    }
                },
                e.prototype._colorOfColor23Changed = function() {
                    var t = this._element.find(".min-color-span").css("background-color"),
                    i = this._element.find(".mid-color-span").css("background-color"),
                    n = this._element.find(".max-color-span").css("background-color");
                    this._formatStyle === 0 ? this._formatOnValue_previewColor23(t, n) : this._formatOnValue_previewColor23(t, i, n)
                },
                e.prototype._dataBarAppChanged = function() {
                    var e = this._element.find(".barcolor1-span").css("background-color"),
                    f = this._element.find(".barcolor2-span").css("background-color"),
                    h = this._element.find(".fillSelector").prop("selectedIndex"),
                    o = this._element.find(".borderSelector").prop("selectedIndex"),
                    s = this._element.find(".barDirectionSelector").prop("selectedIndex"),
                    u = this._element.find(".previewContainer-dataBar"),
                    t = e,
                    n,
                    c,
                    r,
                    i;
                    h === 1 && (n = "white"),
                    o === 1 && (r = f),
                    s === 1 ? (i = t, t = n, n = i, u.attr("align", "right")) : u.attr("align", "left"),
                    this._formatRankedValue_previewDataBar(t, n, r)
                },
                e.prototype._initformatOnValue = function(n) {
                    var s = this,
                    t = this,
                    i, nt, tt, d, ot, f, ut, u, ht, o, ct, r, et, e, ft, rt, v, it, g, c, b, p, a, y, w, h, k;
                    $(".min-color-picker").wijcolorpicker({
                        valueChanged: function(n, i) {
                            var r;
                            r = i.color === undefined ? "red": i.color,
                            t._element.find(".min-color-span").css("background-color", r),
                            t._colorOfColor23Changed()
                        },
                        choosedColor: function(n, i) {
                            t._element.find(".min-color-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(n, i) {
                            t._element.find(".min-color-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".min-color-frame").wijcomboframe(),
                    $(".min-color-picker").wijcolorpicker("option", "value", "red"),
                    this._element.find(".min-color-span").css("background-color", "red"),
                    $(".mid-color-picker").wijcolorpicker({
                        valueChanged: function(n, i) {
                            i.color === undefined ? t._element.find(".mid-color-span").css("background-color", "yellow") : t._element.find(".mid-color-span").css("background-color", i.color),
                            t._colorOfColor23Changed()
                        },
                        choosedColor: function(n, i) {
                            t._element.find(".mid-color-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(n, i) {
                            t._element.find(".mid-color-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".mid-color-frame").wijcomboframe(),
                    $(".mid-color-picker").wijcolorpicker("option", "value", "yellow"),
                    this._element.find(".mid-color-span").css("background-color", "yellow"),
                    $(".max-color-picker").wijcolorpicker({
                        valueChanged: function(n, i) {
                            i.color === undefined ? t._element.find(".max-color-span").css("background-color", "green") : t._element.find(".max-color-span").css("background-color", i.color),
                            t._colorOfColor23Changed()
                        },
                        choosedColor: function(n, i) {
                            t._element.find(".max-color-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(n, i) {
                            t._element.find(".max-color-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".max-color-frame").wijcomboframe(),
                    $(".max-color-picker").wijcolorpicker("option", "value", "green"),
                    this._element.find(".max-color-span").css("background-color", "green"),
                    i = this._element.find(".formatStyle");
                    if (n) switch (n) {
                    case 0:
                        i.prop("selectedIndex", 0);
                        break;
                    case 1:
                        i.prop("selectedIndex", 1);
                        break;
                    case 2:
                        i.prop("selectedIndex", 2);
                        break;
                    case 3:
                        i.prop("selectedIndex", 3);
                        break
                    } else i.prop("selectedIndex", 0);
                    i.trigger("change"),
                    nt = this._element.find(".minSelector"),
                    nt.prop("selectedIndex", 0),
                    nt.trigger("change"),
                    tt = this._element.find(".maxSelector"),
                    tt.prop("selectedIndex", 0),
                    tt.trigger("change"),
                    d = this._element.find(".midSelector"),
                    d.prop("selectedIndex", 3),
                    d.trigger("change"),
                    ot = this._element.find(".showBarOnly"),
                    ot.prop("checked", !1),
                    f = this._element.find(".minSelector2"),
                    ut = f.prop("selectedIndex"),
                    f.prop("selectedIndex", 5),
                    ut !== f.prop("selectedIndex") && f.trigger("change"),
                    u = this._element.find(".maxSelector2"),
                    ht = u.prop("selectedIndex"),
                    u.prop("selectedIndex", 5),
                    ht !== u.prop("selectedIndex") && u.trigger("change"),
                    $(".barcolor1-picker").wijcolorpicker({
                        valueChanged: function(n, i) {
                            var r;
                            r = i.color === undefined ? "rgb(99,142,198)": i.color,
                            t._element.find(".barcolor1-span").css("background-color", r),
                            t._dataBarAppChanged()
                        },
                        choosedColor: function(n, i) {
                            t._element.find(".barcolor1-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(n, i) {
                            t._element.find(".barcolor1-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".barcolor1-frame").wijcomboframe(),
                    $(".barcolor1-picker").wijcolorpicker("option", "value", "rgb(99,142,198)"),
                    this._element.find(".barcolor1-span").css("background-color", "rgb(99,142,198)"),
                    $(".barcolor2-picker").wijcolorpicker({
                        valueChanged: function(n, i) {
                            var r;
                            r = i.color === undefined ? "black": i.color,
                            t._element.find(".barcolor2-span").css("background-color", r),
                            t._dataBarAppChanged()
                        },
                        choosedColor: function(n, i) {
                            t._element.find(".barcolor2-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(n, i) {
                            t._element.find(".barcolor2-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".barcolor2-frame").wijcomboframe(),
                    $(".barcolor2-picker").wijcolorpicker("option", "value", "black"),
                    this._element.find(".barcolor2-span").css("background-color", "black"),
                    o = this._element.find(".fillSelector"),
                    ct = o.prop("selectedIndex"),
                    o.prop("selectedIndex", 0),
                    ct !== o.prop("selectedIndex") && o.trigger("change"),
                    r = this._element.find(".borderSelector"),
                    et = r.prop("selectedIndex"),
                    r.prop("selectedIndex", 0),
                    et !== r.prop("selectedIndex") && r.trigger("change"),
                    e = this._element.find(".barDirectionSelector"),
                    ft = e.prop("selectedIndex"),
                    e.prop("selectedIndex", 0),
                    ft !== e.prop("selectedIndex") && e.trigger("change"),
                    rt = this._element.find(".negativeBtn"),
                    rt.button(),
                    rt.click(function() {
                        var n = r.prop("selectedIndex");
                        s.negativeDialog || (s.negativeDialog = new l);
                        $(s.negativeDialog).on("dialogClose",
                        function(n, i) {
                            i && (t._negativeDialogData = i),
                            t.negativeDialog = null
                        });
                        s.negativeDialog.open(n, s._negativeDialogData)
                    }),
                    this._dataBarAppChanged(),
                    this._spaniconStyleImages === undefined && (this._spaniconStyleImages = []),
                    this._speratoriconStyleImages === undefined && (this._speratoriconStyleImages = []),
                    v = this._element.find(".reverseIconOrder"),
                    v.prop("checked") !== !1 && (v.prop("checked", !1), v.trigger("change")),
                    it = this._element.find(".showIconOnly"),
                    it.prop("checked") !== !1 && it.prop("checked", !1);
                    var at = this._element.find(".iconStyleIcon1-span"),
                    vt = this._element.find(".iconStyleIcon2-span"),
                    yt = this._element.find(".iconStyleIcon3-span"),
                    st = $("#icon-sets-popup-dialog"),
                    lt = st.find("ul");
                    st.wijpopup({
                        autoHide: !0,
                        position: {
                            of: at,
                            my: "left top",
                            at: "right top"
                        },
                        collision: "fit fit",
                        showing: function(n, t) {
                            lt.removeClass("hidden")
                        },
                        hidden: function(n, i) {
                            t._element.find(".iconStyle-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".iconStyle-frame").wijcomboframe(),
                    g = ["up-arrow-green", "right-arrow-yellow", "down-arrow-red"],
                    this._formatOnValue_iconSets_updateIcons(g, g),
                    this._formatOnValue_IconSets_switchVisible(3),
                    this._iconNames = "3-arrows-icon-set",
                    c = this._element.find(".value1Selector"),
                    c.prop("selectedIndex") !== 1 && (c.prop("selectedIndex", 1), c.trigger("change")),
                    b = this._element.find(".value2Selector"),
                    b.prop("selectedIndex") !== 1 && (b.prop("selectedIndex", 1), b.trigger("change")),
                    p = this._element.find(".value3Selector"),
                    p.prop("selectedIndex") !== 1 && (p.prop("selectedIndex", 1), p.trigger("change")),
                    a = this._element.find(".value4Selector"),
                    a.prop("selectedIndex") !== 1 && (a.prop("selectedIndex", 1), a.trigger("change")),
                    t._formatOnValue_iconSets_updateValues("3-arrows-icon-set"),
                    y = this._element.find(".operator1"),
                    y.prop("selectedIndex") !== 0 && (y.prop("selectedIndex", 0), y.trigger("change")),
                    w = this._element.find(".operator2"),
                    w.prop("selectedIndex") !== 0 && (w.prop("selectedIndex", 0), w.trigger("change")),
                    h = this._element.find(".operator3"),
                    h.prop("selectedIndex") !== 0 && (h.prop("selectedIndex", 0), h.trigger("change")),
                    k = this._element.find(".operator4"),
                    k.prop("selectedIndex") !== 0 && (k.prop("selectedIndex", 0), k.trigger("change"))
                },
                e.prototype._formatOnValue_iconSets_updateValues = function(n, t) {
                    this._iconNames = n;
                    var c = this._element.find(".value1Selector").prop("selectedIndex"),
                    h = this._element.find(".value2Selector").prop("selectedIndex"),
                    a = this._element.find(".value3Selector").prop("selectedIndex"),
                    v = this._element.find(".value4Selector").prop("selectedIndex"),
                    i,
                    r,
                    u,
                    f;
                    switch (n) {
                    case "3-arrows-icon-set":
                    case "3-arrows-gray-icon-set":
                    case "3-triangles-icon-set":
                    case "3-traffic-lights-unrimmed-icon-set":
                    case "3-traffic-lights-rimmed-icon-set":
                    case "3-signs-icon-set":
                    case "3-symbols-circled-icon-set":
                    case "3-symbols-uncircled-icon-set":
                    case "3-flags-icon-set":
                    case "3-stars-icon-set":
                        switch (c) {
                        case 0:
                            i = 0;
                            break;
                        case 1:
                        case 3:
                            i = 67;
                            break;
                        case 2:
                            i = "";
                            break
                        }
                        switch (h) {
                        case 0:
                            r = 0;
                            break;
                        case 1:
                        case 3:
                            r = 33;
                            break;
                        case 2:
                            r = "";
                            break
                        }
                        break;
                    case "4-arrows-gray-icon-set":
                    case "4-arrows-icon-set":
                    case "4-traffic-lights-icon-set":
                    case "red-to-black-icon-set":
                    case "4-ratings-icon-set":
                        switch (c) {
                        case 0:
                            i = 0;
                            break;
                        case 1:
                        case 3:
                            i = 75;
                            break;
                        case 2:
                            i = "";
                            break
                        }
                        switch (h) {
                        case 0:
                            r = 0;
                            break;
                        case 1:
                        case 3:
                            r = 50;
                            break;
                        case 2:
                            r = "";
                            break
                        }
                        switch (a) {
                        case 0:
                            u = 0;
                            break;
                        case 1:
                        case 3:
                            u = 25;
                            break;
                        case 2:
                            u = "";
                            break
                        }
                        break;
                    case "5-arrows-gray-icon-set":
                    case "5-arrows-icon-set":
                    case "5-quarters-icon-set":
                    case "5-ratings-icon-set":
                    case "5-boxes-icon-set":
                        switch (c) {
                        case 0:
                            i = 0;
                            break;
                        case 1:
                        case 3:
                            i = 80;
                            break;
                        case 2:
                            i = "";
                            break
                        }
                        switch (h) {
                        case 0:
                            r = 0;
                            break;
                        case 1:
                        case 3:
                            r = 60;
                            break;
                        case 2:
                            r = "";
                            break
                        }
                        switch (a) {
                        case 0:
                            u = 0;
                            break;
                        case 1:
                        case 3:
                            u = 40;
                            break;
                        case 2:
                            u = "";
                            break
                        }
                        switch (v) {
                        case 0:
                            f = 0;
                            break;
                        case 1:
                        case 3:
                            f = 20;
                            break;
                        case 2:
                            f = "";
                            break
                        }
                        break
                    }
                    var o = this._element.find(".value1"),
                    e = this._element.find(".value2"),
                    s = this._element.find(".value3"),
                    l = this._element.find(".value4");
                    if (t !== undefined) switch (t) {
                    case 1:
                        o.val(i);
                        break;
                    case 2:
                        e.val(r);
                        break;
                    case 3:
                        s.val(u);
                        break;
                    case 4:
                        l.val(f);
                        break
                    } else o.val(i),
                    e.val(r),
                    s.val(u),
                    l.val(f);
                    this._formatOnValue_iconSets_updatedesctiptions(o.val(), e.val(), s.val(), l.val())
                },
                e.prototype._formatOnValue_iconSets_updatedesctiptions = function(n, t, r, u) {
                    var it = this._element.find(".iconSet-dataRow4"),
                    g = this._element.find(".iconSet-dataRow5"),
                    l,
                    h,
                    f,
                    v,
                    e,
                    p,
                    s,
                    a;
                    l = it.hasClass("hidden") ? !1 : !0,
                    h = g.hasClass("hidden") ? !1 : !0;
                    var nt = this._element.find(".des2_iconSet"),
                    b = this._element.find(".des3_iconSet"),
                    w = this._element.find(".des4_iconSet"),
                    ft = this._element.find(".des5_iconSet"),
                    k = "",
                    tt = this._element.find(".operator1").prop("selectedIndex");
                    tt === 1 && (k = " = "),
                    f = "",
                    v = this._element.find(".operator2").prop("selectedIndex"),
                    v === 1 && (f = " = "),
                    e = "",
                    p = this._element.find(".operator3").prop("selectedIndex"),
                    p === 1 && (e = " = "),
                    s = "",
                    a = this._element.find(".operator4").prop("selectedIndex"),
                    a === 1 && (s = " = ");
                    var ut = this._element.find(".value1Selector").prop("selectedIndex"),
                    ot = this._element.find(".value2Selector").prop("selectedIndex"),
                    et = this._element.find(".value3Selector").prop("selectedIndex"),
                    rt = this._element.find(".value4Selector").prop("selectedIndex"),
                    y = ut === 2 ? "Formula": n,
                    c = ot === 2 ? "Formula": t,
                    o = et === 2 ? "Formula": r,
                    d = rt === 2 ? "Formula": u;
                    y && nt.text(i.res.conditionalFormatting.newFormattingRule.formatOnValue.iconSets.description2 + k + y + " " + i.res.conditionalFormatting.common.and),
                    c && (l ? b.text(i.res.conditionalFormatting.newFormattingRule.formatOnValue.iconSets.description2 + f + c + " " + i.res.conditionalFormatting.common.and) : b.text(i.res.conditionalFormatting.newFormattingRule.formatOnValue.iconSets.description2 + f + c)),
                    h ? (o && w.text(i.res.conditionalFormatting.newFormattingRule.formatOnValue.iconSets.description2 + e + o + " " + i.res.conditionalFormatting.common.and), d && ft.text(i.res.conditionalFormatting.newFormattingRule.formatOnValue.iconSets.description2 + s + d)) : o && w.text(i.res.conditionalFormatting.newFormattingRule.formatOnValue.iconSets.description2 + e + o)
                },
                e.prototype._formatOnValue_iconSets_updateIcons = function(n, t) {
                    var h = this._element.find(".iconStyleIcon1-span"),
                    s = this._element.find(".iconStyleIcon2-span"),
                    c = this._element.find(".iconStyleIcon3-span"),
                    f = this._element.find(".iconStyleIcon4-span"),
                    e = this._element.find(".iconStyleIcon5-span"),
                    a = this._element.find(".icon1"),
                    l = this._element.find(".icon2"),
                    o = this._element.find(".icon3"),
                    u = this._element.find(".icon4"),
                    r = this._element.find(".icon5"),
                    i;
                    if (n) {
                        for (i = 0; i < this._spaniconStyleImages.length; i++) switch (i) {
                        case 0:
                            h.removeClass(this._spaniconStyleImages[i]);
                            break;
                        case 1:
                            s.removeClass(this._spaniconStyleImages[i]);
                            break;
                        case 2:
                            c.removeClass(this._spaniconStyleImages[i]);
                            break;
                        case 3:
                            f.removeClass(this._spaniconStyleImages[i]);
                            break;
                        case 4:
                            e.removeClass(this._spaniconStyleImages[i]);
                            break
                        }
                        for (i = 0; i < n.length; i++) switch (i) {
                        case 0:
                            h.addClass(n[i]);
                            break;
                        case 1:
                            s.addClass(n[i]);
                            break;
                        case 2:
                            c.addClass(n[i]);
                            break;
                        case 3:
                            f.addClass(n[i]),
                            f.addClass("iconSetsIcons");
                            break;
                        case 4:
                            e.addClass(n[i]),
                            e.addClass("iconSetsIcons");
                            break
                        }
                        for (this._spaniconStyleImages = n, i = n.length; i < 5; i++) switch (i) {
                        case 3:
                            f.removeClass("iconSetsIcons");
                            break;
                        case 4:
                            e.removeClass("iconSetsIcons");
                            break
                        }
                    }
                    if (t) {
                        for (i = 0; i < this._speratoriconStyleImages.length; i++) switch (i) {
                        case 0:
                            a.removeClass(this._speratoriconStyleImages[i]);
                            break;
                        case 1:
                            l.removeClass(this._speratoriconStyleImages[i]);
                            break;
                        case 2:
                            o.removeClass(this._speratoriconStyleImages[i]);
                            break;
                        case 3:
                            u.removeClass(this._speratoriconStyleImages[i]);
                            break;
                        case 4:
                            r.removeClass(this._speratoriconStyleImages[i]);
                            break
                        }
                        for (i = 0; i < t.length; i++) switch (i) {
                        case 0:
                            a.addClass(t[i]);
                            break;
                        case 1:
                            l.addClass(t[i]);
                            break;
                        case 2:
                            o.addClass(t[i]);
                            break;
                        case 3:
                            u.addClass(t[i]),
                            u.addClass("iconSetsIcons");
                            break;
                        case 4:
                            r.addClass(t[i]),
                            r.addClass("iconSetsIcons");
                            break
                        }
                        for (this._speratoriconStyleImages = t, i = t.length; i < 5; i++) switch (i) {
                        case 3:
                            u.removeClass("iconSetsIcons");
                            break;
                        case 4:
                            r.removeClass("iconSetsIcons");
                            break
                        }
                    }
                },
                e.prototype._formatOnValue_previewColor23 = function(n, t, i) {
                    var r = this._element.find(".previewOfColor23");
                    u._setLinearGradient(r, n, t, i)
                },
                e.prototype._formatOnValue_switchVisible = function(n) {
                    this._formatStyle = n;
                    var r = this._element.find(".color23"),
                    u = this._element.find(".color3"),
                    t = this._element.find(".dataBar"),
                    i = this._element.find(".iconSets");
                    switch (n) {
                    case 0:
                        r.removeClass("hidden"),
                        t.addClass("hidden"),
                        i.addClass("hidden"),
                        u.addClass("hidden"),
                        this._formatOnValue_previewColor23("red", "green");
                        break;
                    case 1:
                        r.removeClass("hidden"),
                        t.addClass("hidden"),
                        i.addClass("hidden"),
                        u.removeClass("hidden"),
                        this._formatOnValue_previewColor23("red", "yellow", "green");
                        break;
                    case 2:
                        r.addClass("hidden"),
                        t.removeClass("hidden"),
                        i.addClass("hidden");
                        break;
                    case 3:
                        r.addClass("hidden"),
                        t.addClass("hidden"),
                        i.removeClass("hidden");
                        break
                    }
                },
                e.prototype._formatOnValue_IconSets_switchVisible = function(n) {
                    var r = this._element.find(".iconSet-dataRow4"),
                    u = this._element.find(".iconSet-dataRow5"),
                    t = this._element.find(".row3-mayHiddenParts"),
                    i = this._element.find(".row4-mayHiddenParts");
                    n > 3 ? n > 4 ? (r.removeClass("hidden"), u.removeClass("hidden"), t.removeClass("hidden"), i.removeClass("hidden")) : (r.removeClass("hidden"), u.addClass("hidden"), t.removeClass("hidden"), i.addClass("hidden")) : (r.addClass("hidden"), u.addClass("hidden"), t.addClass("hidden"), i.addClass("hidden"))
                },
                e.prototype._initformatContain = function(n) {
                    var u = this._element.find(".formatContain-type"),
                    t,
                    r,
                    i;
                    u.prop("selectedIndex", 0),
                    u.trigger("change"),
                    t = this._element.find(".operator"),
                    n ? t.prop("selectedIndex", n) : t.prop("selectedIndex", 0),
                    t.trigger("change"),
                    r = this._element.find(".textBox-cell1"),
                    r.val(""),
                    i = this._element.find(".textBox-cell2"),
                    i.val("")
                },
                e.prototype._formatContain_switchOperator = function(n) {
                    var r = this._element.find(".operator"),
                    t = r[0].options;
                    r.empty();
                    switch (n) {
                    case 0:
                        t[0] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.between),
                        t[1] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.notBetween),
                        t[2] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.equalTo),
                        t[3] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.notEqualTo),
                        t[4] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.greaterThan),
                        t[5] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.lessThan),
                        t[6] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.greaterThanOrEqu),
                        t[7] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_cellValue.lessThanOrEqu);
                        break;
                    case 1:
                        t[0] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_specificText.containing),
                        t[1] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_specificText.notContaining),
                        t[2] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_specificText.beginningWith),
                        t[3] = new Option(i.res.conditionalFormatting.newFormattingRule.formatContain.operator_specificText.endingWith);
                        break;
                    case 2:
                        t[0] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.yesterday),
                        t[1] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.today),
                        t[2] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.tomorrow),
                        t[3] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.last7days),
                        t[4] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.lastweek),
                        t[5] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.thisweek),
                        t[6] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.nextweek),
                        t[7] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.lastmonth),
                        t[8] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.thismonth),
                        t[9] = new Option(i.res.conditionalFormatting.dateOccurringFormat.date.nextmonth);
                        break
                    }
                },
                e.prototype._formatContain_switchVisible = function(n) {
                    var r = this._element.find(".operator"),
                    u = this._element.find(".textBox-cell1"),
                    t = this._element.find(".label-and"),
                    i = this._element.find(".textBox-cell2");
                    switch (n) {
                    case 0:
                    case 1:
                        r.removeClass("hidden"),
                        u.removeClass("hidden"),
                        t.addClass("hidden"),
                        i.addClass("hidden");
                        break;
                    case 2:
                        r.removeClass("hidden"),
                        u.addClass("hidden"),
                        t.addClass("hidden"),
                        i.addClass("hidden");
                        break;
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                        r.addClass("hidden"),
                        u.addClass("hidden"),
                        t.addClass("hidden"),
                        i.addClass("hidden");
                        break
                    }
                },
                e.prototype._formatContain_switchVisible_CellValue = function(n) {
                    var r = this._element.find(".textBox-cell1"),
                    i = this._element.find(".label-and"),
                    t = this._element.find(".textBox-cell2");
                    switch (n) {
                    case 0:
                    case 1:
                        r.removeClass("hidden"),
                        i.removeClass("hidden"),
                        t.removeClass("hidden");
                        break;
                    default:
                        r.removeClass("hidden"),
                        i.addClass("hidden"),
                        t.addClass("hidden");
                        break
                    }
                },
                e.prototype._initformatRankedValue = function() {
                    var t = this._element.find(".formatRankedValue-type"),
                    n;
                    t.prop("selectedIndex", 0),
                    n = this._element.find(".itemCounts"),
                    n.spinner({
                        min: 1,
                        max: 1e3
                    }),
                    n.val(10)
                },
                e.prototype._formatRankedValue_previewDataBar = function(n, t, i) {
                    var r = this._element.find(".previewOfDatabar");
                    t ? u._setLinearGradient(r, n, t) : r.css("background", n),
                    i ? r.css("border", "1px solid " + i) : r.css("border-width", "0px")
                },
                e.prototype._initformatAbove = function() {
                    var n = this._element.find(".formatAbove-type");
                    n.prop("selectedIndex", 0)
                },
                e.prototype._initformatUnique = function() {
                    var n = this._element.find(".formatUnique-type");
                    n.prop("selectedIndex", 0)
                },
                e.prototype._inituseFormula = function() {
                    var n = this._element.find(".formula-input");
                    n.val("")
                },
                e.prototype._initPreview = function() {
                    var n = this,
                    t = this._element.find(".format-button");
                    t.button();
                    if (this.formatCellDialog === undefined) {
                        this.formatCellDialog = new i.FormatDialog;
                        $(this.formatCellDialog).on("okClicked",
                        function(t, r) {
                            n._style = r;
                            if (r.font !== "" && r.font !== undefined) {
                                var f = i.wrapper.spread.getActiveSheet(),
                                o = f.getActiveColumnIndex(),
                                s = f.getActiveRowIndex(),
                                e = f.getActualStyle(s, o, 3),
                                u = $("<span></span>");
                                e.font !== undefined ? (u.css("font", e.font), r.font !== "" && u.css("font-style", "italic")) : r.font !== "" && u.css("font", r.font + i.res.defaultFont),
                                n._style.font = u.css("font")
                            }
                            n._drawPreviewControl(n._style)
                        })
                    }
                    this._style = undefined,
                    this._drawPreviewControl(this._style)
                },
                e.prototype._drawPreviewControl = function(n) {
                    var t = this._element.find(".preview-common");
                    u._drawPreviewControl(t, this._style)
                },
                e.prototype._addRuleOfColorScale = function(t) {
                    var k = i.wrapper.spread.getActiveSheet(),
                    p = k.getSelections(),
                    r,
                    w = this._element.find(".minSelector"),
                    e = parseInt(w.prop("selectedIndex")),
                    u,
                    a,
                    f,
                    l,
                    o;
                    switch (e) {
                    case 0:
                        r = 1;
                        break;
                    case 1:
                        r = 0;
                        break;
                    case 2:
                        r = 3;
                        break;
                    case 3:
                        r = 6;
                        break;
                    case 4:
                        r = 4;
                        break
                    }
                    a = this._element.find(".maxSelector"),
                    e = parseInt(a.prop("selectedIndex"));
                    switch (e) {
                    case 0:
                        u = 2;
                        break;
                    case 1:
                        u = 0;
                        break;
                    case 2:
                        u = 3;
                        break;
                    case 3:
                        u = 6;
                        break;
                    case 4:
                        u = 4;
                        break
                    }
                    var c = this._element.find(".minValue").val(),
                    y = this._element.find(".maxValue").val(),
                    h = this._element.find(".min-color-span").css("background-color"),
                    v = this._element.find(".max-color-span").css("background-color");
                    if (t) {
                        l = this._element.find(".midSelector"),
                        e = parseInt(l.prop("selectedIndex"));
                        switch (e) {
                        case 0:
                            f = 0;
                            break;
                        case 1:
                            f = 3;
                            break;
                        case 2:
                            f = 6;
                            break;
                        case 3:
                            f = 4;
                            break
                        }
                        var d = this._element.find(".midValue").val(),
                        b = this._element.find(".mid-color-span").css("background-color"),
                        s = new n.spread.ThreeScaleRule(r, c, h, f, d, b, u, y, v);
                        s.ranges = p,
                        this._notApplySetting ? this._rule = s: i.actions.doAction("addRule", i.wrapper.spread, s)
                    } else o = new n.spread.TwoScaleRule(r, c, h, u, y, v),
                    o.ranges = p,
                    this._notApplySetting ? this._rule = o: i.actions.doAction("addRule", i.wrapper.spread, o)
                },
                e.prototype._addRuleOfDataBar = function() {
                    var a = i.wrapper.spread.isPaintSuspended(),
                    f,
                    o,
                    e;
                    i.wrapper.spread.isPaintSuspended(!0);
                    var w = i.wrapper.spread.getActiveSheet(),
                    p = w.getSelections(),
                    r,
                    y = this._element.find(".minSelector2"),
                    e = parseInt(y.prop("selectedIndex"));
                    switch (e) {
                    case 0:
                        r = 1;
                        break;
                    case 1:
                        r = 0;
                        break;
                    case 2:
                        r = 3;
                        break;
                    case 3:
                        r = 6;
                        break;
                    case 4:
                        r = 4;
                        break;
                    case 5:
                        r = 5;
                        break
                    }
                    o = this._element.find(".maxSelector2"),
                    e = parseInt(o.prop("selectedIndex"));
                    switch (e) {
                    case 0:
                        f = 2;
                        break;
                    case 1:
                        f = 0;
                        break;
                    case 2:
                        f = 3;
                        break;
                    case 3:
                        f = 6;
                        break;
                    case 4:
                        f = 4;
                        break;
                    case 5:
                        f = 7;
                        break
                    }
                    var d = this._element.find(".minValue2").val(),
                    k = this._element.find(".maxValue2").val(),
                    b = this._element.find(".barcolor1-span").css("background-color"),
                    c = this._element.find(".barcolor2-span").css("background-color"),
                    h = this._element.find(".showBarOnly").prop("checked"),
                    s = this._element.find(".fillSelector").prop("selectedIndex") === 0 ? !1 : !0,
                    v = this._element.find(".borderSelector").prop("selectedIndex") === 0 ? !1 : !0,
                    l = this._element.find(".barDirectionSelector").prop("selectedIndex") === 0 ? 0 : 1,
                    t;
                    t = new n.spread.DataBarRule(r, u.parseValue(d), f, u.parseValue(k), b),
                    t.showBarOnly(h),
                    t.gradient(s),
                    t.borderColor(c),
                    t.showBorder(v),
                    t.dataBarDirection(l),
                    this._negativeDialogData && (t.negativeBorderColor(this._negativeDialogData.negativeBorderColor), t.negativeFillColor(this._negativeDialogData.negativeFillColor), t.useNegativeBorderColor(this._negativeDialogData.useNegativeBorderColor), t.useNegativeFillColor(this._negativeDialogData.useNegativeFillColor), t.axisColor(this._negativeDialogData.axisColor), t.axisPosition(this._negativeDialogData.axisPosition)),
                    t.ranges = p,
                    this._notApplySetting ? this._rule = t: i.actions.doAction("addRule", i.wrapper.spread, t),
                    i.wrapper.spread.isPaintSuspended(a)
                },
                e.prototype._addRuleOfIconSets = function() {
                    var nt = i.wrapper.spread.isPaintSuspended(),
                    d,
                    k,
                    o,
                    n,
                    r;
                    i.wrapper.spread.isPaintSuspended(!0),
                    d = i.wrapper.spread.getActiveSheet(),
                    k = d.getSelections();
                    switch (this._iconNames) {
                    case "3-arrows-icon-set":
                        n = 0;
                        break;
                    case "3-arrows-gray-icon-set":
                        n = 1;
                        break;
                    case "3-triangles-icon-set":
                        n = 2;
                        break;
                    case "3-traffic-lights-unrimmed-icon-set":
                        n = 5;
                        break;
                    case "3-traffic-lights-rimmed-icon-set":
                        n = 6;
                        break;
                    case "3-signs-icon-set":
                        n = 7;
                        break;
                    case "3-symbols-circled-icon-set":
                        n = 8;
                        break;
                    case "3-symbols-uncircled-icon-set":
                        n = 9;
                        break;
                    case "3-flags-icon-set":
                        n = 4;
                        break;
                    case "3-stars-icon-set":
                        n = 3;
                        break;
                    case "4-arrows-gray-icon-set":
                        n = 11;
                        break;
                    case "4-arrows-icon-set":
                        n = 10;
                        break;
                    case "4-traffic-lights-icon-set":
                        n = 14;
                        break;
                    case "red-to-black-icon-set":
                        n = 12;
                        break;
                    case "4-ratings-icon-set":
                        n = 13;
                        break;
                    case "5-arrows-gray-icon-set":
                        n = 16;
                        break;
                    case "5-arrows-icon-set":
                        n = 15;
                        break;
                    case "5-quarters-icon-set":
                        n = 18;
                        break;
                    case "5-ratings-icon-set":
                        n = 17;
                        break;
                    case "5-boxes-icon-set":
                        n = 19;
                        break
                    }
                    var rt = this._element.find(".showIconOnly").prop("checked"),
                    tt = this._element.find(".reverseIconOrder").prop("checked"),
                    a = this._element.find(".operator1").prop("selectedIndex") === 0 ? !0 : !1,
                    l = this._element.find(".operator2").prop("selectedIndex") === 0 ? !0 : !1,
                    v = this._element.find(".operator3").prop("selectedIndex") === 0 ? !0 : !1,
                    g = this._element.find(".operator4").prop("selectedIndex") === 0 ? !0 : !1,
                    et = parseInt(this._element.find(".value1Selector").prop("selectedIndex")),
                    e = this._getIconValueTypeofIndex(et),
                    ot = parseInt(this._element.find(".value2Selector").prop("selectedIndex")),
                    f = this._getIconValueTypeofIndex(ot),
                    ft = parseInt(this._element.find(".value3Selector").prop("selectedIndex")),
                    s = this._getIconValueTypeofIndex(ft),
                    ut = parseInt(this._element.find(".value4Selector").prop("selectedIndex")),
                    p = this._getIconValueTypeofIndex(ut),
                    c = this._element.find(".value1").val(),
                    h = this._element.find(".value2").val(),
                    y = this._element.find(".value3").val(),
                    w = this._element.find(".value4").val(),
                    b = this._element.find(".iconSet-dataRow4"),
                    it = this._element.find(".iconSet-dataRow5");
                    o = new t.IconSetRule(n),
                    o.showIconOnly(rt),
                    o.reverseIconOrder(tt),
                    r = o.iconCriteria(),
                    it.hasClass("hidden") || b.hasClass("hidden") ? b.hasClass("hidden") ? (r[0] = f !== 7 ? new t.IconCriterion(l, f, u.parseValue(h)) : new t.IconCriterion(l, f, h), r[1] = e !== 7 ? new t.IconCriterion(a, e, u.parseValue(c)) : new t.IconCriterion(a, e, c)) : (r[0] = s !== 7 ? new t.IconCriterion(v, s, u.parseValue(y)) : new t.IconCriterion(v, s, y), r[1] = f !== 7 ? new t.IconCriterion(l, f, u.parseValue(h)) : new t.IconCriterion(l, f, h), r[2] = e !== 7 ? new t.IconCriterion(a, e, u.parseValue(c)) : new t.IconCriterion(a, e, c)) : (r[0] = p !== 7 ? new t.IconCriterion(g, p, u.parseValue(w)) : new t.IconCriterion(g, p, w), r[1] = s !== 7 ? new t.IconCriterion(v, s, u.parseValue(y)) : new t.IconCriterion(v, s, y), r[2] = f !== 7 ? new t.IconCriterion(l, f, u.parseValue(h)) : new t.IconCriterion(l, f, h), r[3] = e !== 7 ? new t.IconCriterion(a, e, u.parseValue(c)) : new t.IconCriterion(a, e, c)),
                    o.ranges = k,
                    this._notApplySetting ? this._rule = o: i.actions.doAction("addRule", i.wrapper.spread, o),
                    i.wrapper.spread.isPaintSuspended(nt)
                },
                e.prototype._addRuleOfCellValue = function() {
                    var e = i.wrapper.spread.getActiveSheet(),
                    o = e.getSelections(),
                    r,
                    s = this._element.find(".operator"),
                    h = parseInt(s.prop("selectedIndex")),
                    t,
                    f,
                    u;
                    switch (h) {
                    case 0:
                        t = 6;
                        break;
                    case 1:
                        t = 7;
                        break;
                    case 2:
                        t = 0;
                        break;
                    case 3:
                        t = 1;
                        break;
                    case 4:
                        t = 2;
                        break;
                    case 5:
                        t = 4;
                        break;
                    case 6:
                        t = 3;
                        break;
                    case 7:
                        t = 5;
                        break
                    }
                    f = this._element.find(".textBox-cell1").val(),
                    u = this._element.find(".textBox-cell2").val(),
                    r = new n.spread.CellValueRule(t, f, u, this._style),
                    r.ranges = o,
                    this._notApplySetting ? this._rule = r: i.actions.doAction("addRule", i.wrapper.spread, r)
                },
                e.prototype._addRuleOfText = function() {
                    var f = i.wrapper.spread.getActiveSheet(),
                    o = f.getSelections(),
                    r,
                    s = this._element.find(".operator"),
                    e = parseInt(s.prop("selectedIndex")),
                    t,
                    u;
                    switch (e) {
                    case 0:
                        t = 0;
                        break;
                    case 1:
                        t = 1;
                        break;
                    case 2:
                        t = 2;
                        break;
                    case 3:
                        t = 3;
                        break
                    }
                    u = this._element.find(".textBox-cell1").val(),
                    r = new n.spread.SpecificTextRule(t, u, this._style),
                    r.ranges = o,
                    this._notApplySetting ? this._rule = r: i.actions.doAction("addRule", i.wrapper.spread, r)
                },
                e.prototype._addRuleOfDatesOccuring = function() {
                    var u = i.wrapper.spread.getActiveSheet(),
                    f = u.getSelections(),
                    e = parseInt(this._element.find(".operator").prop("selectedIndex")),
                    t,
                    r;
                    switch (e) {
                    case 0:
                        t = 1;
                        break;
                    case 1:
                        t = 0;
                        break;
                    case 2:
                        t = 2;
                        break;
                    case 3:
                        t = 3;
                        break;
                    case 4:
                        t = 8;
                        break;
                    case 5:
                        t = 7;
                        break;
                    case 6:
                        t = 9;
                        break;
                    case 7:
                        t = 5;
                        break;
                    case 8:
                        t = 4;
                        break;
                    case 9:
                        t = 6;
                        break
                    }
                    r = new n.spread.DateOccurringRule(t, this._style),
                    r.ranges = f,
                    this._notApplySetting ? this._rule = r: i.actions.doAction("addRule", i.wrapper.spread, r)
                },
                e.prototype._addRuleOfFormulaRule = function(n) {
                    var l = i.wrapper.spread.getActiveSheet(),
                    h = l.getSelections(),
                    o,
                    s;
                    h.length > 1 && f.show(i.res.conditionalFormatting.exceptions.e6, i.res.title, 2);
                    var r = h[0],
                    c = new t.Calc.Expressions.RangeExpression(r.row, r.col, r.row + r.rowCount - 1, r.col + r.colCount - 1, !1, !1),
                    e = i.wrapper.spread.calcService.unparse(null, c, 0, 0),
                    u;
                    switch (n) {
                    case 3:
                        u = "ISBLANK(" + e + ")";
                        break;
                    case 4:
                        u = "NOT(ISBLANK(" + e + "))";
                        break;
                    case 5:
                        u = "ISERROR(" + e + ")";
                        break;
                    case 6:
                        u = "NOT(ISERROR(" + e + "))";
                        break
                    }
                    o = new t.FormulaRule("=" + u, this._style),
                    s = [],
                    s.push(r),
                    o.ranges = s,
                    this._notApplySetting ? this._rule = o: i.actions.doAction("addRule", i.wrapper.spread, o)
                },
                e.prototype._addRuleOfformatRankedValue = function() {
                    var u = i.wrapper.spread.getActiveSheet(),
                    f = u.getSelections(),
                    e = this._element.find(".formatRankedValue-type").prop("selectedIndex") === 0 ? 0 : 1,
                    r = this._element.find(".itemCounts").val(),
                    n = new t.Top10Rule(e, r, this._style);
                    n.ranges = f,
                    this._notApplySetting ? this._rule = n: i.actions.doAction("addRule", i.wrapper.spread, n)
                },
                e.prototype._addRuleOfformatAbove = function() {
                    var u = i.wrapper.spread.getActiveSheet(),
                    e = u.getSelections(),
                    r,
                    f = parseInt(this._element.find(".formatAbove-type").prop("selectedIndex")),
                    n;
                    switch (f) {
                    case 0:
                        n = 0;
                        break;
                    case 1:
                        n = 1;
                        break;
                    case 2:
                        n = 2;
                        break;
                    case 3:
                        n = 3;
                        break;
                    case 4:
                        n = 4;
                        break;
                    case 5:
                        n = 5;
                        break;
                    case 6:
                        n = 6;
                        break;
                    case 7:
                        n = 7;
                        break;
                    case 8:
                        n = 8;
                        break;
                    case 9:
                        n = 9;
                        break
                    }
                    r = new t.AverageRule(n, this._style),
                    r.ranges = e,
                    this._notApplySetting ? this._rule = r: i.actions.doAction("addRule", i.wrapper.spread, r)
                },
                e.prototype._addRuleOfformatUnique = function() {
                    var r = i.wrapper.spread.getActiveSheet(),
                    f = r.getSelections(),
                    u = parseInt(this._element.find(".formatUnique-type").prop("selectedIndex")),
                    t;
                    switch (u) {
                    case 0:
                        t = new n.spread.DuplicateRule(this._style);
                        break;
                    case 1:
                        t = new n.spread.UniqueRule(this._style);
                        break
                    }
                    t.ranges = f,
                    this._notApplySetting ? this._rule = t: i.actions.doAction("addRule", i.wrapper.spread, t)
                },
                e.prototype._addRuleOfuseFormula = function() {
                    var r = i.wrapper.spread.getActiveSheet(),
                    f = r.getSelections(),
                    u = this._element.find(".formula-input").val(),
                    n = new t.FormulaRule(u, this._style);
                    n.ranges = f,
                    this._notApplySetting ? this._rule = n: i.actions.doAction("addRule", i.wrapper.spread, n)
                },
                e
            } (i.BaseDialog),
            i.NewFormattingRuleDialog = o,
            l = function(n) {
                function t() {
                    var t = this,
                    r = {
                        title: i.res.conditionalFormatting.newFormattingRule.formatOnValue.dataBar.negativeDialog.title,
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                t.close(),
                                t._raiseClose(event, t._returnData()),
                                t.destroy()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close(),
                                t._raiseClose(event, null),
                                t.destroy()
                            }
                        }],
                        beforeClose: function(n, i) {
                            n.currentTarget && (t._raiseClose(n, null), t.destroy())
                        }
                    };
                    n.call(this, "./dialogs/dialogs.html", ".negativeValueAndAxisSettings-dialog", r)
                }
                return __extends(t, n),
                t.prototype.destroy = function() {
                    var r = $(".fillcolor-picker"),
                    i = $(".bordercolor-picker"),
                    t = $(".axiscolor-picker");
                    r.length > 0 && r.children().length > 0 && r.wijcolorpicker("destroy"),
                    i.length > 0 && i.children().length > 0 && i.wijcolorpicker("destroy"),
                    t.length > 0 && t.children().length > 0 && t.wijcolorpicker("destroy"),
                    r.remove(),
                    i.remove(),
                    t.remove(),
                    n.prototype.destroy.call(this)
                },
                t.prototype._raiseClose = function(n, t) {
                    $(this).trigger("dialogClose", t)
                },
                t.prototype._init = function() {
                    var t = this,
                    n = this;
                    $(".fillcolor-picker").wijcolorpicker({
                        valueChanged: function(t, i) {
                            var r;
                            r = i.color === undefined ? "red": i.color,
                            n._element.find(".fillcolor-span").css("background-color", r)
                        },
                        choosedColor: function(t, i) {
                            n._element.find(".fillcolor-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(t, i) {
                            n._element.find(".fillcolor-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".fillcolor-frame").wijcomboframe(),
                    $(".fillcolor-picker").wijcolorpicker("option", "value", "red"),
                    this._element.find(".fillcolor-span").css("background-color", "red"),
                    $(".bordercolor-picker").wijcolorpicker({
                        valueChanged: function(t, i) {
                            var r;
                            r = i.color === undefined ? "black": i.color,
                            n._element.find(".bordercolor-span").css("background-color", r)
                        },
                        choosedColor: function(t, i) {
                            n._element.find(".bordercolor-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(t, i) {
                            n._element.find(".bordercolor-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".bordercolor-frame").wijcomboframe(),
                    $(".bordercolor-picker").wijcolorpicker("option", "value", "black"),
                    this._element.find(".bordercolor-span").css("background-color", "black"),
                    $(".axiscolor-picker").wijcolorpicker({
                        valueChanged: function(t, i) {
                            var r;
                            r = i.color === undefined ? "black": i.color,
                            n._element.find(".axiscolor-span").css("background-color", r)
                        },
                        choosedColor: function(t, i) {
                            n._element.find(".axiscolor-frame").wijcomboframe("close")
                        },
                        openColorDialog: function(t, i) {
                            n._element.find(".axiscolor-frame").wijcomboframe("close")
                        }
                    }),
                    this._element.find(".axiscolor-frame").wijcomboframe(),
                    $(".axiscolor-picker").wijcolorpicker("option", "value", "black"),
                    this._element.find(".axiscolor-span").css("background-color", "black"),
                    this._element.find(".default-radio").prop("checked", !0).attr("autofocus", !0),
                    this._element.find("input[name = 'axis-positon']").change(function() {
                        t._element.find("input[name = 'axis-positon']:checked").val() === "none" ? t._element.find(".axiscolor-frame button").attr("disabled", "disabled") : t._element.find(".axiscolor-frame button").removeAttr("disabled")
                    })
                },
                t.prototype._beforeOpen = function(n) {
                    var r = n[0],
                    t = n[1],
                    i = this._element.find(".borderColor");
                    r === 0 ? i.attr("disabled", "disabled") : i.removeAttr("disabled"),
                    t && this._loadData(t)
                },
                t.prototype._loadData = function(n) {
                    this._element.find(".fillcolor-span").css("background-color", n.negativeFillColor),
                    this._element.find(".bordercolor-span").css("background-color", n.negativeBorderColor),
                    this._element.find(".axiscolor-span").css("background-color", n.axisColor),
                    n.useNegativeFillColor ? (this._element.find(".default-radio").prop("checked", !0), this._element.find("#fill-color-editor1").prop("checked", !0)) : this._element.find("#fill-color-editor2").prop("checked", !0),
                    n.useNegativeBorderColor ? this._element.find("#border-color-editor1").prop("checked", !0) : this._element.find("#border-color-editor2").prop("checked", !0),
                    n.axisPosition === 0 ? this._element.find("#axis-positon-editor1").prop("checked", !0) : n.axisPosition === 1 ? this._element.find("#axis-positon-editor2").prop("checked", !0) : this._element.find("#axis-positon-editor3").prop("checked", !0)
                },
                t.prototype._returnData = function() {
                    var h, o, e, t, r, s, n, u, f, i;
                    return e = this._element.find(".fillcolor-span").css("background-color"),
                    o = this._element.find(".bordercolor-span").css("background-color"),
                    s = this._element.find(".axiscolor-span").css("background-color"),
                    u = this._element.find("input[name = 'fill-color']:checked").val(),
                    r = u === "fillColor" ? !0 : !1,
                    f = this._element.find("input[name = 'border-color']:checked").val(),
                    t = f === "borderColor" ? !0 : !1,
                    i = this._element.find("input[name = 'axis-positon']:checked").val(),
                    n = i === "auto" ? 0 : i === "cell" ? 1 : 2,
                    h = {
                        negativeBorderColor: o,
                        negativeFillColor: e,
                        useNegativeBorderColor: t,
                        useNegativeFillColor: r,
                        axisColor: s,
                        axisPosition: n
                    }
                },
                t
            } (i.BaseDialog),
            i.NegativeValueandAxisDialog = l,
            u = function() {
                function n() {}
                return n._getStyle = function(n, r) {
                    var u = new t.Style;
                    switch (n) {
                    case 0:
                        u.backColor = "#FFB6C1",
                        u.foreColor = "#8B0000";
                        break;
                    case 1:
                        u.backColor = "#F0E68C",
                        u.foreColor = "#BDB76B";
                        break;
                    case 2:
                        u.backColor = "#90EE90",
                        u.foreColor = "#006400";
                        break;
                    case 3:
                        u.backColor = "#FFB6C1";
                        break;
                    case 4:
                        u.foreColor = "#8B0000";
                        break;
                    case 5:
                        u.borderBottom = new t.LineBorder("#8B0000", 1),
                        u.borderLeft = new t.LineBorder("#8B0000", 1),
                        u.borderTop = new t.LineBorder("#8B0000", 1),
                        u.borderRight = new t.LineBorder("#8B0000", 1);
                        break;
                    case 6:
                        u = r;
                        if (r.font !== "" && r.font !== undefined) {
                            var e = i.wrapper.spread.getActiveSheet(),
                            s = e.getActiveColumnIndex(),
                            h = e.getActiveRowIndex(),
                            o = e.getActualStyle(h, s, 3),
                            f = $("<span></span>");
                            o.font !== undefined ? (f.css("font", o.font), r.font !== "" && f.css("font-style", "italic")) : r.font !== "" && f.css("font", r.font + i.res.defaultFont),
                            u.font = f.css("font")
                        }
                        break
                    }
                    return u
                },
                n._setLinearGradient = function(n, t, i, r) {
                    r === undefined ? (n.css("background-image", "linear-gradient(to right, " + t + ", " + i + ")"), n.css("background-image", "-o-linear-gradient(to right, " + t + ", " + i + ")"), n.css("background-image", "-moz-linear-gradient(to right, " + t + ", " + i + ")"), n.css("background-image", "-webkit-linear-gradient(to right, " + t + ", " + i + ")"), n.css("background-image", "-ms-linear-gradient(to right, " + t + ", " + i + ")"), n.css("background-image", "-webkit-gradient(linear, left top, right top, color-stop(0, " + t + "),  color-stop(1, " + i + "))")) : (n.css("background-image", "linear-gradient(to right, " + t + ", " + i + ", " + r + ")"), n.css("background-image", "-o-linear-gradient(to right, " + t + ", " + i + ", " + r + ")"), n.css("background-image", "-moz-linear-gradient(to right, " + t + ", " + i + ", " + r + ")"), n.css("background-image", "-webkit-linear-gradient(to right, " + t + ", " + i + ", " + r + ")"), n.css("background-image", "-ms-linear-gradient(to right, " + t + ", " + i + ", " + r + ")"), n.css("background-image", "-webkit-gradient(linear, left top, right top, from(" + t + "), to(" + r + "),  color-stop(50%, " + i + "))"))
                },
                n._drawPreviewControl = function(t, r) {
                    var f, u, o, e;
                    r === undefined ? (t.text(i.res.conditionalFormatting.newFormattingRule.preview.noFormat), t.css("background-color", ""), t.css("color", "black"), t.css("font-style", "normal"), t.css("text-decoration", "none")) : (t.text(i.res.conditionalFormatting.newFormattingRule.preview.hasFormat), f = n._convertThemeColor(r.backColor), f === undefined && (f = r.backColor), t.css("background-color", f), u = n._convertThemeColor(r.foreColor), u === undefined && (u = r.foreColor), t.css("color", u), r.font !== undefined && r.font !== "" && (o = i.util.parseFont(r.font), t.css("font-style", o.fontStyle)), r.textDecoration && (e = i.util.toCSSTextDecoration(r.textDecoration), t.css("text-decoration", e)))
                },
                n._convertThemeColor = function(n) {
                    var r = i.wrapper.spread.getActiveSheet().currentTheme().colors();
                    return r.getColor(n)
                },
                n._getformulaRuleType = function(n) {
                    var i, r, h, o = n,
                    s, u, f, c, e;
                    return h = o.style,
                    s = (new t.Calc.Parser).parse(o.formula),
                    s instanceof t.Calc.Expressions.FunctionExpression && (u = s, f = u.getFunctionName(), f === "ISBLANK" ? (i = 1, r = 3) : f === "ISERROR" ? (i = 1, r = 5) : f === "NOT" && u.args.length === 1 && (c = u.args[0], e = c.getFunctionName(), e === "ISBLANK" ? (i = 1, r = 4) : e === "ISERROR" && (i = 1, r = 6))),
                    i === undefined && (i = 5),
                    {
                        ruleType: i,
                        selectorIndex: r,
                        style: h,
                        formula: o.formula
                    }
                },
                n.parseValue = function(n) {
                    return ! isNaN(n) && isFinite(n) ? parseFloat(n) : n
                },
                n._drawIconSetPreview = function(t, i, r) {
                    switch (i) {
                    case 15:
                        n._buildIconSet(t, ["up-arrow-green", "right-up-arrow-yellow", "right-arrow-yellow", "right-down-arrow-yellow", "down-arrow-red"], r);
                        break;
                    case 16:
                        n._buildIconSet(t, ["up-arrow-gray", "right-up-arrow-gray", "right-arrow-gray", "right-down-arrow-gray", "down-arrow-gray"], r);
                        break;
                    case 19:
                        n._buildIconSet(t, ["box-4", "box-3", "box-2", "box-1", "box-0"], r);
                        break;
                    case 18:
                        n._buildIconSet(t, ["quarters-4", "quarters-3", "quarters-2", "quarters-1", "quarters-0"], r);
                        break;
                    case 17:
                        n._buildIconSet(t, ["rating-4", "rating-3", "rating-2", "rating-1", "rating-0"], r);
                        break;
                    case 10:
                        n._buildIconSet(t, ["up-arrow-green", "right-up-arrow-yellow", "right-down-arrow-yellow", "down-arrow-red"], r);
                        break;
                    case 11:
                        n._buildIconSet(t, ["up-arrow-gray", "right-up-arrow-gray", "right-down-arrow-gray", "down-arrow-gray"], r);
                        break;
                    case 13:
                        n._buildIconSet(t, ["rating-3", "rating-2", "rating-1", "rating-0"], r);
                        break;
                    case 12:
                        n._buildIconSet(t, ["ball-red", "ball-pink", "ball-gray", "ball-black"], r);
                        break;
                    case 14:
                        n._buildIconSet(t, ["traffic-light-green", "traffic-light-yellow", "traffic-light-red", "traffic-light-black"], r);
                        break;
                    case 0:
                        n._buildIconSet(t, ["up-arrow-green", "right-arrow-yellow", "down-arrow-red"], r);
                        break;
                    case 1:
                        n._buildIconSet(t, ["up-arrow-gray", "right-arrow-gray", "down-arrow-gray"], r);
                        break;
                    case 4:
                        n._buildIconSet(t, ["flag-green", "flag-yellow", "flag-red"], r);
                        break;
                    case 7:
                        n._buildIconSet(t, ["traffic-light-green", "up-triangle-yellow", "down-rhombus-red"], r);
                        break;
                    case 3:
                        n._buildIconSet(t, ["star-solid", "star-half", "star-hollow"], r);
                        break;
                    case 8:
                        n._buildIconSet(t, ["check-circled-green", "notice-circled-yellow", "close-circled-red"], r);
                        break;
                    case 9:
                        n._buildIconSet(t, ["check-uncircled-green", "notice-uncircled-yellow", "close-uncircled-red"], r);
                        break;
                    case 6:
                        n._buildIconSet(t, ["traffic-light-rimmed-green", "traffic-light-rimmed-yellow", "traffic-light-rimmed-red"], r);
                        break;
                    case 5:
                        n._buildIconSet(t, ["traffic-light-green", "traffic-light-yellow", "traffic-light-red"], r);
                        break;
                    case 2:
                        n._buildIconSet(t, ["up-triangle-green", "minus-yellow", "down-triangle-red"], r);
                        break;
                    default:
                    }
                },
                n._buildIconSet = function(n, t, i) {
                    for (var u, r = 0; r < t.length; r++) u = $("<span>").addClass("iconSetsIcons").addClass(t[r].toString()),
                    i && u.css(i),
                    n.append(u)
                },
                n
            } (),
            i.RuleFormatHelper = u,
            b = function(n) {
                function r() {
                    var t = this,
                    r = {
                        title: i.res.formattingRulesManagerDialog.title,
                        width: "auto",
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                i.wrapper.spread.isPaintSuspended(this._spreadSuspendState),
                                i.actions.isFileModified = !0,
                                t._applyRules(),
                                t.close()
                            }
                        },
                        {
                            text: i.res.close,
                            click: function() {
                                t.close()
                            }
                        },
                        {
                            text: i.res.apply,
                            click: function() {
                                i.wrapper.spread.isPaintSuspended(this._spreadSuspendState),
                                t._applyRules()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".format-rules-manager-dialog", r)
                }
                return __extends(r, n),
                r.prototype._applyRules = function() {
                    var t, n;
                    if (this._tempFormats === undefined) return;
                    var f = i.wrapper.spread.getActiveSheet(),
                    u = f.getConditionalFormats(),
                    r = i.wrapper.spread.isPaintSuspended();
                    i.wrapper.spread.isPaintSuspended(!0);
                    try {
                        for (u.clearRule(), t = 0; t < this._tempFormats.count(); t++) n = this._tempFormats.getRule(t),
                        n.condition && delete n.condition,
                        u.addRule(n)
                    } catch(e) {
                        i.wrapper.spread.isPaintSuspended(r);
                        throw e;
                    }
                    i.wrapper.spread.isPaintSuspended(r),
                    this._spreadSuspendState = r,
                    i.wrapper.spread.isPaintSuspended(!0)
                },
                r.prototype._afterClose = function() {
                    var t = i.wrapper.spread.getActiveSheet().getConditionalFormats(),
                    r = t.rules.concat(),
                    n;
                    for (t.clearRule(), n = 0; n < r.length; n++) t.addRule(r[n]);
                    i.wrapper.spread.isPaintSuspended(this._spreadSuspendState)
                },
                r.prototype._addEventListner = function() {
                    var n = this;
                    $("#new-rule").on("click",
                    function() {
                        n._newFormatRule(),
                        n.close()
                    });
                    $("#edit-rule").on("click",
                    function() {
                        if ($(".format-rules-grid-body .ui-state-default").length === 0) return;
                        n._editFormatRule(),
                        n.close()
                    });
                    $("#delete-rule").on("click",
                    function() {
                        return n._deleteFormatRule()
                    });
                    $("#format-rule-move-up").on("click",
                    function() {
                        return n._sortFormatRules(!0)
                    });
                    $("#format-rule-move-down").on("click",
                    function() {
                        return n._sortFormatRules(!1)
                    })
                },
                r.prototype._newFormatRule = function() {
                    var n = this;
                    if (!n._newRuleDialog) {
                        n._newRuleDialog = new o;
                        $(n._newRuleDialog).on("dialogClose",
                        function(t, i) {
                            i.isCloseByOK && n._tempFormats.addRule(i.rule),
                            n._newRuleDialog = null,
                            n.open(!0)
                        })
                    }
                    n._newRuleDialog.open(0, !0, 0, !0)
                },
                r.prototype._editFormatRule = function() {
                    var r;
                    if (this._tempFormats === undefined || this._tempFormats.count() === 0) return;
                    var e = $(".format-rules-grid-body .ui-state-default").index(),
                    s = this._tempFormats.count() - 1 - e,
                    n = this._tempFormats.getRule(s),
                    i,
                    f;
                    n instanceof t.CellValueRule ? i = 1 : n instanceof t.SpecificTextRule ? i = 1 : n instanceof t.DateOccurringRule ? i = 1 : n instanceof t.DuplicateRule ? i = 4 : n instanceof t.UniqueRule ? i = 4 : n instanceof t.Top10Rule ? i = 2 : n instanceof t.AverageRule ? i = 3 : n instanceof t.DataBarRule ? (i = 0, f = 2) : n instanceof t.TwoScaleRule ? (i = 0, f = 0) : n instanceof t.ThreeScaleRule ? (i = 0, f = 1) : n instanceof t.IconSetRule ? (i = 0, f = 3) : n instanceof t.FormulaRule && (i = u._getformulaRuleType(n).ruleType),
                    r = this;
                    if (!r._editRuleDialog) {
                        r._editRuleDialog = new o;
                        $(r._editRuleDialog).on("dialogClose",
                        function(t, i) {
                            if (i.isCloseByOK) {
                                var u = r._tempFormats.getRules().indexOf(n);
                                r._tempFormats.rules[u] = i.rule
                            }
                            r._editRuleDialog = null,
                            r.open(!0)
                        })
                    }
                    r._editRuleDialog.open(i, !1, f, !0, n)
                },
                r.prototype._deleteFormatRule = function() {
                    var n, t;
                    if (this._tempFormats === undefined || this._tempFormats.count() === 0) return;
                    n = $(".format-rules-grid-body .ui-state-default").index();
                    if (n === -1) return;
                    t = this._tempFormats.count() - 1 - n,
                    this._tempFormats.removeRule(this._tempFormats.getRule(t)),
                    this._updateFormatsGrid()
                },
                r.prototype._sortFormatRules = function(n) {
                    var u = $(".format-rules-grid-body .ui-state-default").index(),
                    i,
                    r,
                    t;
                    if (u === 0 && n || u === this._tempFormats.count() - 1 && !n) return;
                    i = $.extend(!0, {},
                    this._tempFormats),
                    this._tempFormats.clearRule(),
                    r = i.count() - 1 - u;
                    if (n) for (t = 0; t < i.count(); t++) t === r ? this._tempFormats.addRule(i.getRule(r + 1)) : t === r + 1 ? this._tempFormats.addRule(i.getRule(r)) : this._tempFormats.addRule(i.getRule(t));
                    else for (t = 0; t < i.count(); t++) t === r ? this._tempFormats.addRule(i.getRule(r - 1)) : t === r - 1 ? this._tempFormats.addRule(i.getRule(r)) : this._tempFormats.addRule(i.getRule(t));
                    this._updateFormatsGrid(),
                    n ? $(".format-rules-grid-body tr:eq(" + (u - 1) + ")").addClass("ui-state-default") : $(".format-rules-grid-body tr:eq(" + (u + 1) + ")").addClass("ui-state-default")
                },
                r.prototype._init = function() {
                    this._addEventListner()
                },
                r.prototype._beforeOpen = function(n) {
                    var u = n[0],
                    t,
                    r;
                    this._spreadSuspendState = i.wrapper.spread.isPaintSuspended(),
                    i.wrapper.spread.isPaintSuspended(!0),
                    t = i.wrapper.spread.getActiveSheet(),
                    r = t.getConditionalFormats(),
                    u || (this._tempFormats = $.extend(!0, {},
                    r)),
                    this._updateFormatsGrid()
                },
                r.prototype._stringToRange = function(n) {
                    var i = new $.sku.wijspread.Calc.Parser,
                    t = i.parse(n);
                    return t instanceof $.sku.wijspread.Calc.Expressions.ReferenceExpression ? t.getRange(0, 0) : null
                },
                r.prototype._addEventListnerForEachRow = function(n, i) {
                    var r = this;
                    n.on("click",
                    function(t) {
                        $(".format-rules-grid-body tr").removeClass("ui-state-default"),
                        n.addClass("ui-state-default")
                    });
                    n.on("dblclick",
                    function(n) {
                        r._editFormatRule(),
                        r.close()
                    });
                    n.find("input[type!=checkbox]").on("change",
                    function(n) {
                        return f(n)
                    });
                    n.find("input[type=checkbox]").on("change",
                    function(n) {
                        return u(n)
                    });
                    var e = this,
                    f = function(n) {
                        for (var s = n.currentTarget,
                        o = s.value,
                        f = o.slice(1).split(","), u, r = 0; r < i.ranges.length; r++) i.ranges.pop();
                        for (r = 0; r < f.length; r++) u = e._stringToRange(f[r]),
                        i.ranges.unshift(new t.Range(u.row, u.column, u.rowCount, u.columnCount))
                    },
                    u = function(n) {
                        var t = n.currentTarget;
                        i.stopIfTrue(t.checked)
                    }
                },
                r.prototype._updateFormatsGrid = function() {
                    var r, n, f, e, tt, k, y, s, l, v, g, c;
                    for ($(".format-rules-grid-body").empty(), r = this._tempFormats.getRules(), n = r.length - 1; n >= 0; n--) {
                        var b = $("<tr>"),
                        h = $("<td>"),
                        w = $("<td>"),
                        o = $("<div>"),
                        p = $("<td>"),
                        nt = $("<input>"),
                        d = $("<td>"),
                        a = $("<input>");
                        a.prop("type", "checkbox"),
                        f = i.res.formattingRulesManagerDialog.ruleDescriptions;
                        if (r[n] instanceof t.CellValueRule) {
                            switch (r[n].operator) {
                            case 6:
                                e = i.util.format(f.valueBetween, r[n].value1, +r[n].value2);
                                break;
                            case 0:
                                e = i.util.format(f.valueEquals, r[n].value1);
                                break;
                            case 2:
                                e = i.util.format(f.valueGreateThan, r[n].value1);
                                break;
                            case 3:
                                e = i.util.format(f.valueGreateThanOrEquals, r[n].value1);
                                break;
                            case 4:
                                e = i.util.format(f.valueLessThan, r[n].value1);
                                break;
                            case 5:
                                e = i.util.format(f.valueLessThanOrEquals, r[n].value1);
                                break;
                            case 7:
                                e = i.util.format(f.valueNotBetween, r[n].value1, r[n].value2);
                                break;
                            case 1:
                                e = i.util.format(f.valueNotEquals, r[n].value1);
                                break
                            }
                            h.text(e),
                            o.text(i.res.formattingRulesManagerDialog.previewText),
                            u._drawPreviewControl(o, r[n].style)
                        } else if (r[n] instanceof t.SpecificTextRule) {
                            switch (r[n].operator) {
                            case 2:
                                e = i.util.format(f.valueBeginsWith, r[n].text);
                                break;
                            case 0:
                                e = i.util.format(f.valueContains, r[n].text);
                                break;
                            case 1:
                                e = i.util.format(f.valueNotContains, r[n].text);
                                break;
                            case 3:
                                e = i.util.format(f.valueEndsWith, r[n].text);
                                break
                            }
                            h.text(e),
                            o.text(i.res.formattingRulesManagerDialog.previewText),
                            u._drawPreviewControl(o, r[n].style)
                        } else if (r[n] instanceof t.DateOccurringRule) {
                            switch (r[n].type) {
                            case 3:
                                e = f.last7Days;
                                break;
                            case 5:
                                e = f.lastMonth;
                                break;
                            case 8:
                                e = f.lastWeek;
                                break;
                            case 6:
                                e = f.nextMonth;
                                break;
                            case 9:
                                e = f.nextWeek;
                                break;
                            case 4:
                                e = f.thisMonth;
                                break;
                            case 7:
                                e = f.thisWeek;
                                break;
                            case 0:
                                e = f.today;
                                break;
                            case 2:
                                e = f.tomorrow;
                                break;
                            case 1:
                                e = f.yesterday;
                                break
                            }
                            h.text(e),
                            o.text(i.res.formattingRulesManagerDialog.previewText),
                            u._drawPreviewControl(o, r[n].style)
                        } else if (r[n] instanceof t.DuplicateRule) h.text(f.duplicateValues),
                        o.text(i.res.formattingRulesManagerDialog.previewText),
                        u._drawPreviewControl(o, r[n].style);
                        else if (r[n] instanceof t.UniqueRule) h.text(f.uniqueValues),
                        o.text(i.res.formattingRulesManagerDialog.previewText),
                        u._drawPreviewControl(o, r[n].style);
                        else if (r[n] instanceof t.Top10Rule) {
                            switch (r[n].type) {
                            case 0:
                                e = i.util.format(f.top, r[n].rank);
                                break;
                            case 1:
                                e = i.util.format(f.bottom, r[n].rank);
                                break
                            }
                            h.text(e),
                            o.text(i.res.formattingRulesManagerDialog.previewText),
                            u._drawPreviewControl(o, r[n].style)
                        } else if (r[n] instanceof t.AverageRule) {
                            switch (r[n].type) {
                            case 0:
                                e = f.above;
                                break;
                            case 4:
                                e = f.above1StdDev;
                                break;
                            case 6:
                                e = f.above2StdDev;
                                break;
                            case 8:
                                e = f.above3StdDev;
                                break;
                            case 1:
                                e = f.below;
                                break;
                            case 5:
                                e = f.below1StdDev;
                                break;
                            case 7:
                                e = f.below2StdDev;
                                break;
                            case 9:
                                e = f.below3StdDev;
                                break;
                            case 2:
                                e = f.equalOrAbove;
                                break;
                            case 3:
                                e = f.equalOrBelow;
                                break
                            }
                            h.text(e),
                            o.text(i.res.formattingRulesManagerDialog.previewText),
                            u._drawPreviewControl(o, r[n].style)
                        } else r[n] instanceof t.DataBarRule ? (h.text(f.dataBar), r[n].showBorder() && o.css("border", "1px solid " + r[n].borderColor()), r[n].gradient() ? u._setLinearGradient(o, r[n].color(), "white") : o.css("background-color", r[n].color()), a.prop("disabled", "disabled")) : r[n] instanceof t.TwoScaleRule ? (h.text(f.twoScale), u._setLinearGradient(o, r[n].getMinimumColor(), r[n].getMaximumColor()), a.prop("disabled", "disabled")) : r[n] instanceof t.ThreeScaleRule ? (h.text(f.threeScale), u._setLinearGradient(o, r[n].getMinimumColor(), r[n].getMidpointColor(), r[n].getMaximumColor()), a.prop("disabled", "disabled")) : r[n] instanceof t.IconSetRule ? (h.text(f.iconSet), u._drawIconSetPreview(o, r[n].iconSetType(), {
                            margin: "2px 0 0 2px"
                        }), a.prop("disabled", "disabled")) : r[n] instanceof t.FormulaRule && (h.text(i.util.format(f.formula, r[n].formula)), u._drawPreviewControl(o, r[n].style));
                        for (tt = "", k = r[n].ranges, y = 0; y < k.length; y++) s = k[y],
                        v = i.SpreadUtility.getRangeType(s),
                        v == 3 && (c = new t.Calc.Expressions.RangeExpression, c.initBand(0, s.rowCount - 1, !1, !1, !0), l = i.wrapper.spread.calcService.unparse(null, c, 0, 0)),
                        v == 0 && (c = new t.Calc.Expressions.RangeExpression, c.initBand(s.col, s.col + s.colCount - 1, !1, !1, !1), l = i.wrapper.spread.calcService.unparse(null, c, 0, 0)),
                        v == 1 && (c = new t.Calc.Expressions.RangeExpression, c.initBand(s.row, s.row + s.rowCount - 1, !1, !1, !0), l = i.wrapper.spread.calcService.unparse(null, c, 0, 0)),
                        v == 2 && (s.rowCount === 1 && s.colCount === 1 ? (g = new t.Calc.Expressions.CellExpression(s.row, s.col, !1, !1), l = i.wrapper.spread.calcService.unparse(null, g, 0, 0)) : (c = new t.Calc.Expressions.RangeExpression(s.row, s.col, s.row + s.rowCount - 1, s.col + s.colCount - 1, !1, !1, !1, !1), l = i.wrapper.spread.calcService.unparse(null, c, 0, 0))),
                        tt += l + ",";
                        nt.val("=" + l),
                        p.append(nt),
                        a.prop("checked", r[n].stopIfTrue()),
                        d.append(a),
                        o.css({
                            width: "100%",
                            height: "20px"
                        }).appendTo(w),
                        h.addClass("rule-column"),
                        w.addClass("format-column"),
                        p.addClass("applies-to-column"),
                        d.addClass("stop-if-true-column"),
                        b.append([h, w, p, d]),
                        b.appendTo($(".format-rules-grid-body")),
                        this._addEventListnerForEachRow(b, r[n])
                    }
                },
                r
            } (i.BaseDialog),
            i.FormatRulesManagerDialog = b,
            e = function() {
                function n() {}
                return n._getTransparentColorString = function() {
                    var n = $("<span></span>");
                    return n.css("background-color", "rgba(0,0,0,0)"),
                    n.css("background-color")
                },
                n.loadXML = function(n) {
                    var t;
                    return $.ajax({
                        url: n,
                        async: !1,
                        type: "GET",
                        dataType: "xml",
                        success: function(n) {
                            t = n
                        }
                    }),
                    t
                },
                n
            } (),
            i.Helper = e,
            k = function(n) {
                function t() {
                    var t = this,
                    r = {
                        title: i.res.filemenuOptionsDialog.title,
                        resizable: !1,
                        modal: !0,
                        buttons: [{
                            text: i.res.ok,
                            click: function() {
                                t._apply(),
                                t.close()
                            }
                        },
                        {
                            text: i.res.cancel,
                            click: function() {
                                t.close()
                            }
                        }]
                    };
                    n.call(this, "./dialogs/dialogs.html", ".filemenu-options-dialog", r)
                }
                return __extends(t, n),
                t.prototype._apply = function() {
                    i.actions.setServiceUrl($("#excel-service-url").val())
                },
                t.prototype._beforeOpen = function() {
                    $("#excel-service-url").val(i.actions.getServiceUrl())
                },
                t
            } (i.BaseDialog),
            i.OptionsDialog = k
        })(t.designer || (t.designer = {}));
        var i = t.designer
    })(n.spread || (n.spread = {}));
    var t = n.spread
})(sku || (sku = {}))