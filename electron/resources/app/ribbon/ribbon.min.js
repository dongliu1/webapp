var sku;
(function(n) {
	(function(t) {
		(function(i) {
			(function(r) {
				"use strict";

				function checkLicense() {
					if(app.isNative){
						if(app.getLicenseStatus() === LicenseStatus.Valid){
							$(".only-for-no-licensed").remove();
						}
						else{
							if(app.getLicenseStatus() !== LicenseStatus.Trial){
								//$(".only-for-licensed").prop("disabled", "disabled");
								//$(".only-for-licensed").css("-webkit-filter", "grayscale(100%)");
								//$(".only-for-licensed").off("click");
							}
						}
					}else{
						//$(".only-for-native").remove();
						$(".only-for-no-licensed").remove();
					}
					
					$(".quick-access-bar").on("click", "[data-action]", function(n) {
						var r = $(n.currentTarget),
							t = r.data("action"),
							u = r.data("actionArgs");
						//console.log(r,u)	
						t === "reset" ? i.actions.reset() : i.actions.doAction(t, i.wrapper.spread, u)
					});
					undoManage()
				}
				function init_ribbon() {
					$(".ribbon-bar").wijribbon({
						click: function(e, obj) {
							var spread = i.wrapper.spread,
								sheet = spread.getActiveSheet(),
								ft, ct, lt, d, ot, y, p, b, pr, uu, fu, at, ht, br, w, ar, ci, l, st;
							//console.log(obj);
							switch (obj.name) {
							case "font-family":
								i.actions.doAction("setFontFamily", spread, $("#" + obj.commandName).data("font"));
								break;
							case "font-size":
								i.actions.doAction("setFontSize", spread, $("#" + obj.commandName).text() + "pt")
							}
							switch (obj.commandName) {
							case "copy":
								i.actions.doAction("copy", spread);
								break;
							case "cut":
								i.actions.doAction("cut", spread);
								break;
							case "paste-all":
								i.actions.doAction("paste", spread, 0);
								break;
							case "paste-formulas":
								i.actions.doAction("paste", spread, 3);
								break;
							case "paste-values":
								i.actions.doAction("paste", spread, 1);
								break;
							case "paste-formatting":
								i.actions.doAction("paste", spread, 2);
								break;
							case "font-weight":
								i.actions.doAction("setFontWeight", spread, $("#" + obj.commandName).prop("checked") ? "bold" : "normal");
								break;
							case "font-italic":
								i.actions.doAction("setFontStyle", spread, $("#" + obj.commandName).prop("checked") ? "italic" : "normal");
								break;
							case "font-underline":
								i.actions.doAction("setUnderline", spread, $("#" + obj.commandName).prop("checked"));
								break;
							case "increase-fontsize":
								ft = increase_fontsize(), 
								ft && i.actions.doAction("setFontSize", spread, ft + "pt");
								break;
							case "decrease-fontsize":
								ft = decrease_fontsize(), ft && i.actions.doAction("setFontSize", spread, ft + "pt");
								break;
							case "bottom-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										bottom: !0
									}
								});
								break;
							case "top-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										top: !0
									}
								});
								break;
							case "left-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										left: !0
									}
								});
								break;
							case "right-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										right: !0
									}
								});
								break;
							case "no-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: null,
									options: {
										all: !0
									}
								});
								break;
							case "all-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										all: !0
									}
								});
								break;
							case "outside-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										outline: !0
									}
								});
								break;
							case "thickbox-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 5),
									options: {
										outline: !0
									}
								});
								break;
							case "bottom-double-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 6),
									options: {
										bottom: !0
									}
								});
								break;
							case "thick-bottom-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 5),
									options: {
										bottom: !0
									}
								});
								break;
							case "top-bottom-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										bottom: !0,
										top: !0
									}
								});
								break;
							case "top-thick-bottom-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										top: !0
									}
								}), i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 5),
									options: {
										bottom: !0
									}
								});
								break;
							case "top-double-bottom-border":
								i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 1),
									options: {
										top: !0
									}
								}), i.actions.doAction("setBorder", spread, {
									lineborder: new t.LineBorder("black", 6),
									options: {
										bottom: !0
									}
								});
								break;
							case "more-border":
								h === undefined && (h = new i.FormatDialog), h.open("border");
								break;
							case "backcolor":
								ct || ($("#backcolor-picker").wijcolorpicker({
									valueChanged: function(n, t) {
										t.name ? i.actions.doAction("setBackColor", i.wrapper.spread, t.name) : i.actions.doAction("setBackColor", i.wrapper.spread, t.color)
									},
									choosedColor: function(n, t) {
										ct.wijpopup("hide")
									},
									openColorDialog: function() {
										ct.wijpopup("hide")
									}
								}), ct = $("#backcolor-popup").wijpopup({
									autoHide: !0,
									position: {
										of: $("#backcolor-button"),
										my: "left top",
										at: "left bottom"
									},
									showing: function(n, t) {
										$("#backcolor-picker").wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors())
									}
								})), ct.wijpopup("show");
								break;
							case "forecolor":
								lt || ($("#forecolor-picker").wijcolorpicker({
									valueChanged: function(n, t) {
										t.name ? i.actions.doAction("setForeColor", i.wrapper.spread, t.name) : i.actions.doAction("setForeColor", i.wrapper.spread, t.color)
									},
									choosedColor: function(n, t) {
										lt.wijpopup("hide")
									},
									openColorDialog: function() {
										lt.wijpopup("hide")
									}
								}), lt = $("#forecolor-popup").wijpopup({
									autoHide: !0,
									position: {
										of: $("#forecolor-button"),
										my: "left top",
										at: "left bottom"
									},
									showing: function(n, t) {
										$("#forecolor-picker").wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors())
									}
								})), lt.wijpopup("show");
								break;
							case "top-align":
								i.actions.doAction("setVAlign", spread, 0);
								break;
							case "middle-align":
								i.actions.doAction("setVAlign", spread, 1);
								break;
							case "bottom-align":
								i.actions.doAction("setVAlign", spread, 2);
								break;
							case "left-align":
								i.actions.doAction("setHAlign", spread, 0);
								break;
							case "center-align":
								i.actions.doAction("setHAlign", spread, 1);
								break;
							case "right-align":
								i.actions.doAction("setHAlign", spread, 2);
								break;
							case "increase-indent":
								i.actions.doAction("setIndent", spread, 1);
								break;
							case "decrease-indent":
								i.actions.doAction("setIndent", spread, -1);
								break;
							case "wrap-text":
								i.actions.doAction("setWordWrap", spread, $("#wrap-text").prop("checked"));
								break;
							case "merge-center":
								$("#merge-center").prop("checked") ? i.actions.doAction("mergeCenter", spread) : i.actions.doAction("unmergeCells", spread), setTimeout(function() {
									updateCellStyle()
								}, 0);
								break;
							case "merge-center-button":
								i.actions.doAction("mergeCenter", spread);
								break;
							case "merge-across":
								i.actions.doAction("mergeAcross", spread);
								break;
							case "merge-cells":
								i.actions.doAction("mergeCells", spread);
								break;
							case "unmerge-cells":
								i.actions.doAction("unmergeCells", spread);
								break;
							case "format-general":
								i.actions.doAction("setFormatter", spread, null);
								break;
							case "format-number":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Number.format);
								break;
							case "format-currency":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Currency.format);
								break;
							case "format-accouting":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Accounting.format);
								break;
							case "format-shortdate":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.ShortDate.format);
								break;
							case "format-longdate":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.LongDate.format);
								break;
							case "format-time":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Time.format);
								break;
							case "format-percentage":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Percentage.format);
								break;
							case "format-fraction":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Fraction.format);
								break;
							case "format-scientific":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Scientific.format);
								break;
							case "format-text":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Text.format);
								break;
							case "format-comma":
								i.actions.doAction("setFormatter", spread, i.res.commonFormats.Comma.format);
								break;
							case "format-more":
								h === undefined && (h = new i.FormatDialog), h.open("number");
								break;
							case "increase-decimal":
								i.actions.doAction("increaseDecimal", spread);
								break;
							case "decrease-decimal":
								i.actions.doAction("decreaseDecimal", spread);
								break;
							case "button-celltype":
								tr === undefined && (tr = new i.ButtonCellTypeDialog), tr.open();
								break;
							case "checkbox-celltype":
								rr === undefined && (rr = new i.CheckBoxCellTypeDialog), rr.open();
								break;
							case "combobox-celltype":
								fr === undefined && (fr = new i.ComboBoxCellTypeDialog), fr.open();
								break;
							case "hyperlink-celltype":
								ur === undefined && (ur = new i.HyperLinkCellTypeDialog), ur.open();
								break;
							case "clear-celltype":
								i.actions.doAction("clearCellType", spread);
								break;
							case "conditional-format":
								bi || (bi = $("#condition-format-popup").wijpopup({
									autoHide: !0,
									position: {
										of: $("#condition-format"),
										my: "left top",
										at: "left bottom"
									},
									collision: "fit fit",
									showing: function(n, t) {
										$("#condition-format-popup-menu").removeClass("hidden")
									},
									hiding: function() {
										return r()
									}
								})), bi.wijpopup("show");
								break;
							case "insert-cells":
								y = i.spreadActions.getSelectionType(spread);
								switch (y) {
								case 0:
									i.MessageBox.show(n.spread.designer.res.insertCellInSheet, i.res.title, 2);
									break;
								case 2:
									i.spreadActions.insertColumns(spread);
									break;
								case 1:
									i.spreadActions.insertRows(spread);
									break;
								case 4:
									i.MessageBox.show(n.spread.designer.res.insertCellInMixtureRange, i.res.title, 2);
									break;
								case 3:
									li === undefined && (li = new i.InsertCellsDialog), li.open();
									break;
								default:
									break
								}
								break;
							case "insert-rows":
								i.actions.doAction("insertRows", spread);
								break;
							case "insert-columns":
								i.actions.doAction("insertColumns", spread);
								break;
							case "insert-sheet":
								i.actions.doAction("insertSheet", spread);
								break;
							case "delete-cells":
								y = i.spreadActions.getSelectionType(spread);
								switch (y) {
								case 0:
									this._sheet.clear(0, 0, this._sheet.getRowCount(), this._sheet.getColumnCount(), 3, 51);
									break;
								case 2:
									i.spreadActions.deleteColumns(spread);
									break;
								case 1:
									i.spreadActions.deleteRows(spread);
									break;
								case 4:
									i.MessageBox.show(n.spread.designer.res.insertCellInMixtureRange, i.res.title, 2);
									break;
								case 3:
									vi === undefined && (vi = new i.DeleteCellsDialog), vi.open();
									break;
								default:
									break
								}
								break;
							case "delete-rows":
								i.actions.doAction("deleteRows", spread);
								break;
							case "delete-columns":
								i.actions.doAction("deleteColumns", spread);
								break;
							case "delete-sheet":
								i.actions.doAction("deleteSheet", spread);
								break;
							case "set-rowheight":
								wi === undefined && (wi = new i.RowHeightDialog), wi.open();
								break;
							case "set-columnwidth":
								ki === undefined && (ki = new i.ColumnWidthDialog), ki.open();
								break;
							case "autofit-rowheight":
								i.actions.doAction("autofitRows", spread);
								break;
							case "default-rowheight":
								nr === undefined && (nr = new i.StandardRowHeightDialog), nr.open();
								break;
							case "hide-rows":
								i.actions.doAction("hideRows", spread);
								break;
							case "unhide-rows":
								i.actions.doAction("unHideRows", spread);
								break;
							case "set-columnwidth":
								i.actions.doAction("setColumnsWidth", spread);
								break;
							case "autofit-columnwidth":
								i.actions.doAction("autofitColumns", spread);
								break;
							case "default-columnwidth":
								di === undefined && (di = new i.StandardColumnWidthDialog), di.open();
								break;
							case "hide-columns":
								i.actions.doAction("hideColumns", spread);
								break;
							case "unhide-columns":
								i.actions.doAction("unHideColumns", spread);
								break;
							case "protect-sheet":
								i.actions.doAction("protectSheet", spread, !0);
								break;
							case "unprotect-sheet":
								i.actions.doAction("protectSheet", spread, !1);
								break;
							case "lock-cells":
								i.actions.doAction("LockCells", spread, !0);
								break;
							case "unlock-cells":
								i.actions.doAction("LockCells", spread, !1);
								break;
							case "auto-sum":
								i.actions.doAction("setAutoFormula", spread, "Sum");
								break;
							case "auto-average":
								i.actions.doAction("setAutoFormula", spread, "Average");
								break;
							case "auto-count":
								i.actions.doAction("setAutoFormula", spread, "Count");
								break;
							case "auto-max":
								i.actions.doAction("setAutoFormula", spread, "Max");
								break;
							case "auto-min":
								i.actions.doAction("setAutoFormula", spread, "Min");
								break;
							case "fill-down":
								i.actions.doAction("autoFillByDirection", spread, 3);
								break;
							case "fill-right":
								i.actions.doAction("autoFillByDirection", spread, 1);
								break;
							case "fill-up":
								i.actions.doAction("autoFillByDirection", spread, 2);
								break;
							case "fill-left":
								i.actions.doAction("autoFillByDirection", spread, 0);
								break;
							case "fill-series":
								ai || (ai = new i.FillDialog), ai.open();
								break;
							case "clear-all":
								i.actions.doAction("clearAll", spread);
								break;
							case "clear-format":
								i.actions.doAction("clearFormat", spread);
								break;
							case "clear-content":
								i.actions.doAction("clearContent", spread);
								break;
							case "clear-comments":
								i.actions.doAction("clearComments", spread);
								break;
							case "sort-AZ":
								i.actions.doAction("sortRange", spread, !0);
								break;
							case "sort-ZA":
								i.actions.doAction("sortRange", spread, !1);
								break;
							case "custom-sort":
								er || (er = new i.SortDialog), er.open();
								break;
							case "set-filter":
								i.actions.doAction("setRowFilter", spread);
								break;
							case "clear-filter":
								i.actions.doAction("clearRowFilter", spread);
								break;
							case "reapply-filter":
								i.actions.doAction("reApplyRowFilter", spread);
								break;
							case "insert-function":
								ir || (ir = new i.InsertFunctionDialog), ir.open();
								break;
							case "calculate-auto":
								i.actions.doAction("autoCalculate", spread, !0);
								break;
							case "calculate-manual":
								i.actions.doAction("autoCalculate", spread, !1);
								break;
							case "calculate-now":
								i.actions.doAction("calculateNow", spread);
								break;
							case "group":
								d = spread.getActiveSheet(), ot = d.getSelections();
								if (ot.length > 1) {
									i.MessageBox.show(i.res.NotExecInMultiRanges, i.res.title, 2);
									return
								}
								y = i.spreadActions.getSelectionType(spread), p = ot[0];
								if (y == 1) {
									b = new t.UndoRedo.RowGroupUndoAction(d, {
										index: p.row,
										count: p.rowCount
									}), spread.doCommand(b);
									break
								} else if (y == 2) {
									b = new t.UndoRedo.ColumnGroupUndoAction(d, {
										index: p.col,
										count: p.colCount
									}), spread.doCommand(b);
									break
								} else {
									pi === undefined && (pi = new i.GroupDialog), pi.open();
									break
								}
							case "ungroup":
								d = spread.getActiveSheet(), ot = d.getSelections();
								if (ot.length > 1) {
									i.MessageBox.show(i.res.NotExecInMultiRanges, i.res.title, 2);
									return
								}
								y = i.spreadActions.getSelectionType(spread), p = ot[0], y == 1 ? (b = new t.UndoRedo.RowUngroupUndoAction(d, {
									index: p.row,
									count: p.rowCount
								}), spread.doCommand(b)) : y == 2 ? (b = new t.UndoRedo.ColumnUngroupUndoAction(d, {
									index: p.col,
									count: p.colCount
								}), spread.doCommand(b)) : (yi === undefined && (yi = new i.UnGroupDialog), yi.open());
								break;
							case "template-design-mode":
								var sheet = spread.getActiveSheet(),
									designMode = $("#template-design-mode"),
									btn = designMode.find("span.ui-button-text"),
									isChecked = designMode.data("checked"),
									tree = "ztree-container";
								isChecked = !isChecked;
								if(isChecked){
									vf();
									btn.addClass("template-design-mode-checked");
									panel = $(".design-mode-panel");
									panel.wijsliderpanel();
									uu = panel.wijsliderpanel("getContent");
									fu = $("#ztree-container");
									fu.length > 0 || $("<div>").attr("id", tree).addClass("ztree").appendTo(uu);
									panel.wijsliderpanel("open");
									at = { name: "Source" };
									if(i.wrapper.spread.designerBindingPathSchema) 
										if(!lr ){
											at.children = i.util.parseJsonSchema(i.wrapper.spread.designerBindingPathSchema),
											vt("ztree-container", [at], !0),
											lr = !0
										}else{
											vt("ztree-container", [at]);
										}
									if(sheet.getDataSource())
										sheet.setDataSource(null);
									gu();
								}else{
									disableDesignMode()
								}
								designMode.data("checked", isChecked),
								sheet.repaint();
								break;
							case "clearBindingPath":
								ru();
								break;
							case "loadSchema":
								vu();
								break;
							case "saveSchema":
								au();
								break;
							case "show-detail":
								i.actions.doAction("expandGroup", spread);
								break;
							case "hide-detail":
								i.actions.doAction("collapseGroup", spread);
								break;
							case "group-direction":
								if(!dt) (dt = new i.GroupDirectionDialog);
								dt.open();
								break;
							case "showhide-rowheader":
								toggle_checked("showhide-rowheader"), i.actions.doAction("showHideRowHeader", spread);
								break;
							case "showhide-columnheader":
								toggle_checked("showhide-columnheader"), i.actions.doAction("showHideColumnHeader", spread);
								break;
							case "showhide-vgridline":
								toggle_checked("showhide-vgridline"), i.actions.doAction("showHideVGridLine", spread);
								break;
							case "showhide-hgridline":
								toggle_checked("showhide-hgridline"), i.actions.doAction("showHideHGridLine", spread);
								break;
							case "showhide-tabstrip":
								toggle_checked("showhide-tabstrip"), i.actions.doAction("showHideTabStrip", spread);
								break;
							case "showhide-newtab":
								toggle_checked("showhide-newtab"), i.actions.doAction("showHideNewTab", spread);
								break;
							case "zoom":
								kt || (kt = new i.ZoomDialog), kt.open();
								break;
							case "zoom-default":
								i.actions.doAction("zoomDefault", spread), setTimeout(function() {
									g()
								}, 0);
								break;
							case "zoom-selection":
								i.actions.doAction("zoomSelection", spread), setTimeout(function() {
									g()
								}, 0);
								break;
							case "freeze-panes":
								i.actions.doAction("freeze", spread, {
									row: spread.getActiveSheet().getActiveRowIndex(),
									col: spread.getActiveSheet().getActiveColumnIndex()
								});
								break;
							case "freeze-toprow":
								i.actions.doAction("freeze", spread, {
									row: 1,
									col: 0,
									trailingRow: 0,
									trailingCol: 0
								});
								break;
							case "freeze-firstcolumn":
								i.actions.doAction("freeze", spread, {
									row: 0,
									col: 1,
									trailingRow: 0,
									trailingCol: 0
								});
								break;
							case "freeze-bottomrow":
								i.actions.doAction("freeze", spread, {
									row: 0,
									col: 0,
									trailingRow: 1,
									trailingCol: 0
								});
								break;
							case "freeze-lastcolumn":
								i.actions.doAction("freeze", spread, {
									row: 0,
									col: 0,
									trailingRow: 0,
									trailingCol: 1
								});
								break;
							case "unfreeze-panes":
								i.actions.doAction("unfreeze", spread);
								break;
							case "fontgroup":
								h === undefined && (h = new i.FormatDialog), h.open("font");
								break;
							case "aligngroup":
								h === undefined && (h = new i.FormatDialog), h.open("alignment");
								break;
							case "numbergroup":
								h === undefined && (h = new i.FormatDialog), h.open("number");
								break;
							case "find":
								sr === undefined && (sr = new i.FindDialog), sr.open();
								break;
							case "goto":
								hr === undefined && (hr = new i.GoToDialog), hr.open();
								break;
							case "spark-line":
								u || (u = new i.InsertSparkLineDialog), u.open(0);
								break;
							case "skdb-query":
								var col=sheet._activeColIndex;
								var row=sheet._activeRowIndex;
								var cpids="DX.FZ01.NB01.RFDL,DX.FZ01.NB02.RFDL,DX.FZ02.NB01.RFDL,DX.FZ02.NB02.RFDL,DX.FZ03.NB01.RFDL,DX.FZ03.NB02.RFDL,DX.FZ04.NB01.RFDL,DX.FZ04.NB02.RFDL,DX.FZ05.NB01.RFDL,DX.FZ05.NB02.RFDL,DX.FZ06.NB01.RFDL,DX.FZ06.NB02.RFDL,DX.FZ07.NB01.RFDL,DX.FZ07.NB02.RFDL,DX.FZ08.NB01.RFDL,DX.FZ08.NB02.RFDL";
								cpids="11";
								var timefrom=1483272000000;
								var timeto=1485864001000;
								var timeinterval=86400000;
								console.log(row,col);
								sheet.setFormula(row, col, "=SKQUERY(\""+cpids+"\","+timefrom+","+timeto+","+timeinterval+")");
								//sheet.setFormula(row, col, "=SKQUERY(A1:B4)");
								//sheet.setFormula(row, col, "=SKQUERY(\"DX.FZ01.NB01.RFDL,DX.FZ01.NB02.RFDL\")");
								break;
							case "chart-line":
								var selections=sheet.getSelections();
								if(selections.length>0){
									sheet.addChart("line",null) ;
								}else{
									i.MessageBox.show("请选择数据区域","添加折线图",3)
								}
								break;
							case "chart-area":
								var selections=sheet.getSelections();
								if(selections.length>0){
									sheet.addChart("area",null) ;
								}else{
									i.MessageBox.show("请选择数据区域","添加折线图",3)
								}
								break;
							case "spark-column":
								u || (u = new i.InsertSparkLineDialog), u.open(1);
								break;
							case "spark-winloss":
								u || (u = new i.InsertSparkLineDialog), u.open(2);
								break;
							case "spark-pie":
								u || (u = new i.InsertSparkLineDialog), u.open(0, !0);
								break;
							case "spark-area":
								u || (u = new i.InsertSparkLineDialog), u.open(1, !0);
								break;
							case "spark-scatter":
								u || (u = new i.InsertSparkLineDialog), u.open(2, !0);
								break;
							case "spark-bullet":
								rt || (rt = new i.BulletSparklineDialog), rt.open();
								break;
							case "spark-spread":
								u || (u = new i.InsertSparkLineDialog), u.open(5, !0);
								break;
							case "spark-stacked":
								u || (u = new i.InsertSparkLineDialog), u.open(6, !0);
								break;
							case "spark-hbar":
								ut || (ut = new i.HbarSparklineDialog), ut.open();
								break;
							case "spark-vbar":
								tt || (tt = new i.VbarSparklineDialog), tt.open();
								break;
							case "spark-variance":
								it || (it = new i.VariSparklineDialog), it.open();
								break;
							case "spark-boxplot":
								u || (u = new i.InsertSparkLineDialog), u.open(10, !0);
								break;
							case "spark-cascade":
								u || (u = new i.InsertSparkLineDialog), u.open(11, !0);
								break;
							case "spark-pareto":
								u || (u = new i.InsertSparkLineDialog), u.open(12, !0);
								break;
							case "name-manager":
								vr || (vr = new i.NameManagerDialog), vr.open();
								break;
							case "spread-setting-general":
								k || (k = new i.SpreadSettingDialog), k.open("general");
								break;
							case "spread-setting-scrollbar":
								k || (k = new i.SpreadSettingDialog), k.open("scrollbar");
								break;
							case "spread-setting-tabstrip":
								k || (k = new i.SpreadSettingDialog), k.open("tabstrip");
								break;
							case "sheet-setting-general":
								v || (v = new i.SheetSettingDialog), v.open("general");
								break;
							case "sheet-setting-gridline":
								v || (v = new i.SheetSettingDialog), v.open("gridline");
								break;
							case "sheet-setting-calculation":
								v || (v = new i.SheetSettingDialog);
								console.log("ribbon.js sheet-setting-calculation ")
								v.open("calculation");
								break;
							case "sheet-setting-headers":
								v || (v = new i.SheetSettingDialog), v.open("headers");
								break;
							case "data-validation":
								cr || (cr = new i.DataValidationDialog), cr.open();
								break;
							case "circle-invalid":
								i.actions.doAction("circleInvalidData", spread);
								break;
							case "clear-circle":
								i.actions.doAction("unCircleInvalidData", spread);
								break;
							case "insert-table":
								pt || (pt = new i.CreateTableDialog), pt.open();
								break;
							case "insert-picture":
								i.actions.doAction("insertPicture", spread);
								break;
							case "sparkline-type-line":
								i.actions.doAction("setSparklineType", spread, 0);
								break;
							case "sparkline-type-column":
								i.actions.doAction("setSparklineType", spread, 1);
								break;
							case "sparkline-type-winloss":
								i.actions.doAction("setSparklineType", spread, 2);
								break;
							case "sparkline-high-point":
								toggle_checked("sparkline-high-point"), 
								i.actions.doAction("setSparklineHighPoint", spread, is_checked("sparkline-high-point"));
								break;
							case "sparkline-low-point":
								toggle_checked("sparkline-low-point"), 
								i.actions.doAction("setSparklineLowPoint", spread, is_checked("sparkline-low-point"));
								break;
							case "sparkline-first-point":
								toggle_checked("sparkline-first-point"), 
								i.actions.doAction("setSparklineFirstPoint", spread, is_checked("sparkline-first-point"));
								break;
							case "sparkline-last-point":
								toggle_checked("sparkline-last-point"), 
								i.actions.doAction("setSparklineLastPoint", spread, is_checked("sparkline-last-point"));
								break;
							case "sparkline-negative-point":
								toggle_checked("sparkline-negative-point"), 
								i.actions.doAction("setSparklineNegativePoint", spread, is_checked("sparkline-negative-point"));
								break;
							case "sparkline-marker-point":
								toggle_checked("sparkline-marker-point"), 
								i.actions.doAction("setSparklineMarkerPoint", spread, is_checked("sparkline-marker-point"));
								break;
							case "sparkline-group":
								i.actions.doAction("groupSparkline", spread);
								break;
							case "sparkline-ungroup":
								i.actions.doAction("unGroupSparkline", spread);
								break;
							case "sparkline-clear":
								i.actions.doAction("clearSparkline", spread);
								break;
							case "sparkline-clear-group":
								i.actions.doAction("clearSparklineGroup", spread);
								break;
							case "sparkline-color":
								ht || ($("#sparklinecolor-picker").wijcolorpicker({
									valueChanged: function(n, t) {
										t.name ? i.actions.doAction("setSparklineColor", i.wrapper.spread, t.name) : i.actions.doAction("setSparklineColor", i.wrapper.spread, t.color)
									},
									choosedColor: function(n, t) {
										ht.wijpopup("hide")
									},
									openColorDialog: function() {
										ht.wijpopup("hide")
									}
								}), ht = $("#sparklinecolor-popup").wijpopup({
									autoHide: !0,
									position: {
										of: $("#sparkline-color"),
										my: "left top",
										at: "left bottom"
									},
									showing: function(n, t) {
										$("#sparklinecolor-picker").wijcolorpicker("option", "themeColors", i.wrapper.getThemeColors())
									}
								})), ht.wijpopup("show");
								break;
							case "sparkline-marker-color":
								bt || (bt = new i.SparklineMarkerColorDialog), bt.open();
								break;
							case "sparkline-weight-dot25":
								i.actions.doAction("setSparklineWeight", spread, .25);
								break;
							case "sparkline-weight-dot5":
								i.actions.doAction("setSparklineWeight", spread, .5);
								break;
							case "sparkline-weight-dot75":
								i.actions.doAction("setSparklineWeight", spread, .75);
								break;
							case "sparkline-weight-1":
								i.actions.doAction("setSparklineWeight", spread, 1);
								break;
							case "sparkline-weight-1dot5":
								i.actions.doAction("setSparklineWeight", spread, 1.5);
								break;
							case "sparkline-weight-2dot25":
								i.actions.doAction("setSparklineWeight", spread, 2.25);
								break;
							case "sparkline-weight-3":
								i.actions.doAction("setSparklineWeight", spread, 3);
								break;
							case "sparkline-weight-4dot5":
								i.actions.doAction("setSparklineWeight", spread, 4.5);
								break;
							case "sparkline-weight-6":
								i.actions.doAction("setSparklineWeight", spread, 6);
								break;
							case "sparkline-weight-custom":
								gt || (gt = new i.SparklineWeightDialog), gt.open();
								break;
							case "resize-table":
								wt || (wt = new i.ResizeTableDialog), wt.open();
								break;
							case "table-header-row":
								toggle_checked("table-header-row"), i.actions.doAction("setTableHeaderRow", spread, is_checked("table-header-row"));
								break;
							case "table-total-row":
								toggle_checked("table-total-row"), i.actions.doAction("setTableTotalRow", spread, is_checked("table-total-row"));
								break;
							case "table-banded-rows":
								toggle_checked("table-banded-rows"), i.actions.doAction("setTableBandedRows", spread, is_checked("table-banded-rows"));
								break;
							case "table-first-column":
								toggle_checked("table-first-column"), i.actions.doAction("setTableFirstColumn", spread, is_checked("table-first-column"));
								break;
							case "table-last-column":
								toggle_checked("table-last-column"), i.actions.doAction("setTableLastColumn", spread, is_checked("table-last-column"));
								break;
							case "table-banded-columns":
								toggle_checked("table-banded-columns"), i.actions.doAction("setTableBandedColumns", spread, is_checked("table-banded-columns"));
								break;
							case "table-filter-button":
								toggle_checked("table-filter-button"), i.actions.doAction("setTableFilterButton", spread, is_checked("table-filter-button"));
								break;
							case "table-styles":
								nt || (or(), nt = $("#format-table-popup").wijpopup({
									autoHide: !0,
									showing: function(n, t) {
										$("#format-table-popup").removeClass("hidden")
									}
								}));
								for (w in i.FormatTableDialog.customTableStyle) w ? (ar = w.substring(0, w.indexOf("-")), $(".custom-format-table").css("display", "block"), ci = "table-format-" + ar, $("." + ci).css("display", "inline-block")) : $(".custom-format-table").css("display", "none");
								nt.wijpopup({
									position: {
										of: $("#table-styles-button"),
										my: "left top",
										at: "left bottom"
									}
								}), nt.wijpopup("show");
								break;
							case "format-table":
								nt || (or(), nt = $("#format-table-popup").wijpopup({
									autoHide: !0,
									position: {
										of: $("#format-table-button"),
										my: "left top",
										at: "left bottom"
									},
									showing: function(n, t) {}
								})), br = 1;
								for (w in i.FormatTableDialog.customTableStyle) w ? (ar = w.substring(0, w.indexOf("-")), $(".custom-format-table").css("display", "block"), ci = "table-format-" + ar, $("." + ci).css("display", "inline-block"), pu(w, br), br++) : $(".custom-format-table").css("display", "none");
								nt.wijpopup({
									position: {
										of: $("#format-table-button"),
										my: "left top",
										at: "left bottom"
									}
								}), nt.wijpopup("show");
								break;
							case "cell-styles":
								fi || (fi = $("#cell-styles-popup").wijpopup({
									autoHide: !0,
									position: {
										of: $("#cell-styles-button"),
										my: "left top",
										at: "left bottom"
									},
									showing: function(n, t) {
										$("#cell-styles-popup").removeClass("hidden")
									}
								})), bu(), fi.wijpopup("show");
								break;
							case "formulaSparkline-setting":
								var row = sheet.getActiveRowIndex(),
									col = sheet.getActiveColumnIndex(),
									dr = i.util.parseFormulaSparkline(row, col);
								if (!dr) break;
								l = i.wrapper.spread.getSparklineEx(dr.fn.name), 
								st = {
									row: row,
									col: col
								};
								if(l){
									if(l instanceof t.PieSparkline){
										hi || (hi = new i.PieSparklineDialog), hi.open(st)
									} else if( l instanceof t.AreaSparkline)  {
										si || (si = new i.AreaSparklineDialog), si.open(st)
									} else if( l instanceof t.ScatterSparkline ){
										ii || (ii = new i.ScatterSparklineDialog), ii.open(st) 
									} else if(l instanceof t.CompatibleSparkline ){
										ti || (ti = new i.CompatibleSparklineDialog), ti.open(st)
									} else if(l instanceof t.BulletSparkline){
										rt || (rt = new i.BulletSparklineDialog), rt.open()
									} else if(l instanceof t.SpreadSparkline){
										ui || (ui = new i.SpreadSparklineDialog), ui.open()
									} else if(l instanceof t.StackedSparkline){
										ri || (ri = new i.StackedSparklineDialog), ri.open()
									} else if(l instanceof t.HBarSparkline){
										ut || (ut = new i.HbarSparklineDialog), ut.open()
									} else if(l instanceof t.VBarSparkline){
										tt || (tt = new i.VbarSparklineDialog), tt.open()
									} else if(l instanceof t.VariSparkline){
										it || (it = new i.VariSparklineDialog), it.open()
									} else if(l instanceof t.BoxPlotSparkline){
										ei || (ei = new i.BoxPlotSparklineDialog), ei.open()
									} else if(l instanceof t.CascadeSparkline){
										ni || (ni = new i.CascadeSparklineDialog), ni.open()
									} else if(l instanceof t.ParetoSparkline){
										yt || (yt = new i.ParetoSparklineDialog), yt.open()
									}
								};
								break;
							case "auto-generate-label":
								toggle_checked("auto-generate-label"), a = !a;
								break
							}
							switch (obj.commandName) {
							case "paste-all":
							case "paste-formulas":
							case "paste-values":
							case "paste-formatting":
								setTimeout(function() {
									$("#paste-options").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-paste"), $("#paste-options").find(".ui-button-text").text(i.res.ribbon.home.paste).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "freeze-panes":
							case "freeze-toprow":
							case "freeze-firstcolumn":
							case "freeze-bottomrow":
							case "freeze-lastcolumn":
								setTimeout(function() {
									$("#freeze-panes").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-freeze"), $("#freeze-panes").find(".ui-button-text").html(i.res.ribbon.view.freezePane).append('<span class="ui-custom-triangle"></span>')
								}, 0);
								break;
							case "format-more":
								setTimeout(function() {
									$("#number-format").find(".ui-button-text").text(i.res.ribbon.home.general)
								}, 0);
								break;
							case "set-rowheight":
							case "set-columnwidth":
							case "autofit-rowheight":
							case "default-rowheight":
							case "hide-rows":
							case "unhide-rows":
							case "set-columnwidth":
							case "autofit-columnwidth":
							case "default-columnwidth":
							case "hide-columns":
							case "unhide-columns":
							case "protect-sheet":
							case "unprotect-sheet":
							case "lock-cells":
							case "unlock-cells":
								setTimeout(function() {
									$("#format-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-format"), $("#format-row-column").find(".ui-button-text").text(i.res.ribbon.home.format).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "find":
							case "goto":
								setTimeout(function() {
									$("#find-goto").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-find"), $("#find-goto").find(".ui-button-text").text(i.res.ribbon.home.find).append('<span class="ui-custom-triangle"></span>')
								}, 0);
								break;
							case "sort-AZ":
							case "sort-ZA":
							case "custom-sort":
							case "set-filter":
							case "clear-filter":
							case "reapply-filter":
								setTimeout(function() {
									$("#sort-filter").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-sortfilter"), $("#sort-filter").find(".ui-button-text").html(i.res.ribbon.home.sortFilter).append('<span class="ui-custom-triangle"></span>')
								}, 0);
								break;
							case "insert-cells":
							case "insert-rows":
							case "insert-columns":
							case "insert-sheet":
								setTimeout(function() {
									$("#insert-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-insert"), $("#insert-row-column").find(".ui-button-text").text(i.res.ribbon.home.insert).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "delete-cells":
							case "delete-rows":
							case "delete-columns":
							case "delete-sheet":
								setTimeout(function() {
									$("#delete-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-delete"), $("#delete-row-column").find(".ui-button-text").text(i.res.ribbon.home.Delete).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "sparkline-weight-dot25":
							case "sparkline-weight-dot5":
							case "sparkline-weight-dot75":
							case "sparkline-weight-1":
							case "sparkline-weight-1dot5":
							case "sparkline-weight-2dot25":
							case "sparkline-weight-3":
							case "sparkline-weight-4dot5":
							case "sparkline-weight-6":
							case "sparkline-weight-custom":
								setTimeout(function() {
									$("#sparkline-weight").find(".ui-button-text").text(i.res.ribbon.sparkLineDesign.sparklineWeight)
								}, 0);
								break;
							case "bottom-border":
							case "top-border":
							case "left-border":
							case "right-border":
							case "no-border":
							case "all-border":
							case "outside-border":
							case "thickbox-border":
							case "bottom-double-border":
							case "thick-bottom-border":
							case "top-bottom-border":
							case "top-thick-bottom-border":
							case "top-double-bottom-border":
							case "more-border":
								setTimeout(function() {
									$("#borders").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-bottomborder")
								}, 0);
								break
							}
							switch (obj.commandName) {
							case "protect-sheet":
								$(".ribbon-bar").find("#protect-sheet").addClass("hidden"), $(".ribbon-bar").find("#unprotect-sheet").removeClass("hidden");
								break;
							case "unprotect-sheet":
								$(".ribbon-bar").find("#protect-sheet").removeClass("hidden"), $(".ribbon-bar").find("#unprotect-sheet").addClass("hidden");
								break;
							case "lock-cells":
								$(".ribbon-bar").find("#lock-cells").addClass("hidden"), $(".ribbon-bar").find("#unlock-cells").removeClass("hidden");
								break;
							case "unlock-cells":
								$(".ribbon-bar").find("#lock-cells").removeClass("hidden"), $(".ribbon-bar").find("#unlock-cells").addClass("hidden");
								break
							}
						}
					});
					var dialog = function(n, t) {
							var i = n.find("ul");
							return n.wijpopup({
								autoHide: !0,
								position: {
									of: t,
									my: "left top",
									at: "right top"
								},
								collision: "fit fit",
								showing: function(n, t) {
									i.removeClass("hidden")
								}
							})
						},
						p = function(n, t, i) {
							var u, r;
							for (b && pr(b), u = 0; u < c.length; u++) clearTimeout(c[u]);
							c = []; 
							if(i === undefined) { 
								r = setTimeout(function() {
									n.wijpopup("show"), c.splice(c.indexOf(r), 1), b = n
								}, 0);
								c.push(r);
							} else {
								r = setTimeout(function() {
									n.wijpopup("show"), c.splice(c.indexOf(r), 1), b = n
								}, i);
								c.push(r);
							}
						},
						pr = function(n, t) {
							var i;
							t === undefined ? (i = setTimeout(function() {
								n.children("ul").addClass("hidden"), d.splice(d.indexOf(i), 1), b = undefined
							}, 0), d.push(i)) : (i = setTimeout(function() {
								n.children("ul").addClass("hidden"), d.splice(d.indexOf(i), 1), b = undefined
							}, t), d.push(i))
						},
						c = [],
						d = [],
						b;
					$("#condition-format-popup button").on("mouseenter", function(n) {
						var t = n.currentTarget,
							r = $(t).children("span.ui-button-text-big"),
							i, u;
						r.length === 0 && (r = $(t).children("span.ui-button-text-small"), r.length === 0 && (r = $(t).children("span.icon-button-container"))),
						//$(r).addClass("ui-state-hover"), 
						i = 200;
						switch (t.name) {
						case "highlight-cells-rules":
							st || (st = dialog($("#highlight-cells-rules-popup"), $(t))), 
							p(st, $(t), i);
							break;
						case "top-bottom-rules":
							ot || (ot = dialog($("#top-bottom-rules-popup"), $(t))), 
							p(ot, $(t), i);
							break;
						case "data-bars":
							ht || (ht = dialog($("#data-bars-popup"), $(t))), 
							p(ht, $(t), i);
							break;
						case "color-scales":
							lt || (lt = dialog($("#color-scales-popup"), $(t))), 
							p(lt, $(t), i);
							break;
						case "icon-sets":
							ct || (ct = dialog($("#icon-sets-popup"), $(t))), 
							p(ct, $(t), i);
							break;
						case "clear-rules":
							ft || (ft = dialog($("#clear-rules-popup"), $(t))),
							p(ft, $(t), i);
							break;
						case "new-rule":
						case "manage-rules":
							for (u = 0; u < c.length; u++) clearTimeout(c[u]);
							c = [], b && pr(b);
							break;
						default:
						}
					});
					$("#condition-format-popup button").on("mouseleave", function(n) {
						var i = n.currentTarget,
							t = $(i).children("span.ui-button-text-big");
						t.length === 0 && (t = $(i).children("span.ui-button-text-small"), t.length === 0 && (t = $(i).children("span.icon-button-container"))), $(t).removeClass("ui-state-hover")
					});
					var r = function() {
							for (var n = 0; n < d.length; n++) clearTimeout(d[n]);
							for (d = [], n = 0; n < c.length; n++) clearTimeout(c[n]);
							c = [], 
							b && (b.children("ul").addClass("hidden"), b = undefined), 
							$("#condition-format-popup").children("ul").addClass("hidden")
						},
						w = function(r, u) {
							var o = new n.spread.DataBarRule(5, "(Automatic)", 7, "(Automatic)", r),
								h = i.wrapper.spread.getActiveSheet(),
								c = h.getSelections(),
								f, e, s;
							for (o.ranges = c, o.gradient(u), f = h.getConditionalFormats(), e = f.count() - 1; e >= 0; e--) {
								s = f.getRule(e);
								if (s instanceof t.DataBarRule) if (JSON.stringify(s.ranges) === JSON.stringify(o.ranges)) {
									f.removeRule(s);
									break
								}
							}
							i.actions.doAction("addRule", i.wrapper.spread, o)
						},
						y = function(r, u, f) {
							var e, w = 2,
								y = "(Highest Value)",
								p = r,
								b = 1,
								a = "(Lowest Value)",
								l = u,
								c, v, s, h, o;
							if (f) {
								var g = 4,
									k = "50",
									d = u;
								l = f, 
								e = new n.spread.ThreeScaleRule(b, a, l, g, k, d, w, y, p);
							} else {
								e = new n.spread.TwoScaleRule(b, a, l, w, y, p);
							}
							for (c = i.wrapper.spread.getActiveSheet(), v = c.getSelections(), e.ranges = v, s = c.getConditionalFormats(), h = s.count() - 1; h >= 0; h--) {
								o = s.getRule(h);
								if (o instanceof t.ThreeScaleRule && e instanceof t.ThreeScaleRule || o instanceof t.TwoScaleRule && e instanceof t.TwoScaleRule) if (JSON.stringify(o.ranges) === JSON.stringify(e.ranges)) {
									s.removeRule(o);
									break
								}
							}
							i.actions.doAction("addRule", i.wrapper.spread, e)
						},
						iconSetRule = function(r) {
							var o = new n.spread.IconSetRule(r),
								s = i.wrapper.spread.getActiveSheet(),
								h = s.getSelections(),
								u, f, e;
							for (o.ranges = h, u = s.getConditionalFormats(), f = u.count() - 1; f >= 0; f--) {
								e = u.getRule(f);
								if (e instanceof t.IconSetRule) if (JSON.stringify(e.ranges) === JSON.stringify(o.ranges)) {
									u.removeRule(e);
									break
								}
							}
							i.actions.doAction("addRule", i.wrapper.spread, o)
						};
					$("#condition-format-popup button").on("click", function(n) {
						var t = n.currentTarget;
						switch (t.name) {
						case "highlight-cells-rules":
							st || (st = l($("#highlight-cells-rules-popup"), $(t))), p(st, $(t));
							break;
						case "top-bottom-rules":
							ot || (ot = l($("#top-bottom-rules-popup"), $(t))), p(ot, $(t));
							break;
						case "data-bars":
							ht || (ht = l($("#data-bars-popup"), $(t))), p(ht, $(t));
							break;
						case "color-scales":
							lt || (lt = l($("#color-scales-popup"), $(t))), p(lt, $(t));
							break;
						case "icon-sets":
							ct || (ct = l($("#icon-sets-popup"), $(t))), p(ct, $(t));
							break;
						case "clear-rules":
							ft || (ft = l($("#clear-rules-popup"), $(t))), p(ft, $(t));
							break;
						case "new-rule":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function(n, t) {
									e = null
								})
							}
							e.open(0, !0, 0), r();
							break;
						case "manage-rules":
							nu.open(), r();
							break;
						case "highlight-cells-rules-greater-than":
							at.open(0), r();
							break;
						case "highlight-cells-rules-less-than":
							at.open(1), r();
							break;
						case "highlight-cells-rules-between":
							at.open(2), r();
							break;
						case "highlight-cells-rules-equal-to":
							at.open(3), r();
							break;
						case "highlight-cells-rules-text-contains":
							textRuleFormatDialog.open(), r();
							break;
						case "highlight-cells-rules-a-date-occurring":
							kr.open(), r();
							break;
						case "highlight-cells-rules-duplicate-values":
							dr.open(), r();
							break;
						case "highlight-cells-rules-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function(n, t) {
									e = null
								})
							}
							e.open(1, !0, undefined, undefined, undefined, 4), r();
							break;
						case "top-bottom-rules-top-10-items":
							wr.open(4), r();
							break;
						case "top-bottom-rules-bottom-10-items":
							wr.open(5), r();
							break;
						case "top-bottom-rules-above-average":
							br.open(6), r();
							break;
						case "top-bottom-rules-below-average":
							br.open(7), r();
							break;
						case "top-bottom-rules-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function(n, t) {
									e = null
								})
							}
							e.open(2, !0), r();
							break;
						case "gradient-fill-blue-data-bar":
							w("blue", !0), r();
							break;
						case "gradient-fill-green-data-bar":
							w("green", !0), r();
							break;
						case "gradient-fill-red-data-bar":
							w("red", !0), r();
							break;
						case "gradient-fill-orange-data-bar":
							w("orange", !0), r();
							break;
						case "gradient-fill-lightblue-data-bar":
							w("lightblue", !0), r();
							break;
						case "gradient-fill-purple-data-bar":
							w("purple", !0), r();
							break;
						case "solid-fill-blue-data-bar":
							w("blue", !1), r();
							break;
						case "solid-fill-green-data-bar":
							w("green", !1), r();
							break;
						case "solid-fill-red-data-bar":
							w("red", !1), r();
							break;
						case "solid-fill-orange-data-bar":
							w("orange", !1), r();
							break;
						case "solid-fill-lightblue-data-bar":
							w("lightblue", !1), r();
							break;
						case "solid-fill-purple-data-bar":
							w("purple", !1), r();
							break;
						case "data-bars-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function(n, t) {
									e = null
								})
							}
							e.open(0, !0, 2), r();
							break;
						case "gyr-color-scale":
							y("green", "yellow", "red"), r();
							break;
						case "ryg-color-scale":
							y("red", "yellow", "green"), r();
							break;
						case "gwr-color-scale":
							y("green", "white", "red"), r();
							break;
						case "rwg-color-scale":
							y("red", "white", "green"), r();
							break;
						case "bwr-color-scale":
							y("blue", "white", "red"), r();
							break;
						case "rwb-color-scale":
							y("red", "white", "blue"), r();
							break;
						case "wr-color-scale":
							y("white", "red"), r();
							break;
						case "rw-color-scale":
							y("red", "white"), r();
							break;
						case "gw-color-scale":
							y("green", "white"), r();
							break;
						case "wg-color-scale":
							y("white", "green"), r();
							break;
						case "gy-color-scale":
							y("green", "yellow"), r();
							break;
						case "yg-color-scale":
							y("yellow", "green"), r();
							break;
						case "color-scales-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function(n, t) {
									e = null
								})
							}
							e.open(0, !0, 0), r();
							break;
						case "3-arrows-icon-set":
							iconSetRule(0), r();
							break;
						case "3-arrows-gray-icon-set":
							iconSetRule(1), r();
							break;
						case "3-triangles-icon-set":
							iconSetRule(2), r();
							break;
						case "3-traffic-lights-unrimmed-icon-set":
							iconSetRule(5), r();
							break;
						case "3-traffic-lights-rimmed-icon-set":
							iconSetRule(6), r();
							break;
						case "3-signs-icon-set":
							iconSetRule(7), r();
							break;
						case "3-symbols-circled-icon-set":
							iconSetRule(8), r();
							break;
						case "3-symbols-uncircled-icon-set":
							iconSetRule(9), r();
							break;
						case "3-flags-icon-set":
							iconSetRule(4), r();
							break;
						case "3-stars-icon-set":
							iconSetRule(3), r();
							break;
						case "4-arrows-gray-icon-set":
							iconSetRule(11), r();
							break;
						case "4-arrows-icon-set":
							iconSetRule(10), r();
							break;
						case "4-traffic-lights-icon-set":
							iconSetRule(14), r();
							break;
						case "red-to-black-icon-set":
							iconSetRule(12), r();
							break;
						case "4-ratings-icon-set":
							iconSetRule(13), r();
							break;
						case "5-arrows-gray-icon-set":
							iconSetRule(16), r();
							break;
						case "5-arrows-icon-set":
							iconSetRule(15), r();
							break;
						case "5-quarters-icon-set":
							iconSetRule(18), r();
							break;
						case "5-ratings-icon-set":
							iconSetRule(17), r();
							break;
						case "5-boxes-icon-set":
							iconSetRule(19), r();
							break;
						case "icon-sets-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function(n, t) {
									e = null
								})
							}
							e.open(0, !0, 3), r();
							break;
						case "clear-rules-from-cells":
							i.actions.doAction("clearRule", i.wrapper.spread, !1), i.actions.isFileModified = !0, r();
							break;
						case "clear-rules-from-sheet":
							i.actions.doAction("clearRule", i.wrapper.spread, !0), i.actions.isFileModified = !0, r();
							break;
						default:
						}
					});
					$(document).on("click", function(n) {
						if ($("#condition-format-popup").height() === 0 || !$("#condition-format-popup").is(":visible")) return;
						var t = n.target;
						$.contains($("#condition-format-popup")[0], t) === !1 && r()
					});
					var iu, fu, uu, bi, st, ot, ht, lt, ct, ft, wi, ki, nr, di, h, ai, li, vi, pi, yi, sr, er, k, v, attachEvent, vr, cr, ir, tr, rr, fr, ur, dt, kt, u, gt, bt, nt, pt, wt, fi, hi, si, ii, ti, rt, ui, ri, ut, tt, it, ei, ni, yt, e;
					var at = new i.CellValueRuleFormatDialog;
					var textRuleFormatDialog = new i.TextRuleFormatDialog;
					var kr = new i.DateOccurringFormatDialog;
					var dr = new i.DuplicateValuesFormatDialog;
					var wr = new i.Top10RuleFormatDialog;
					var br = new i.AverageRuleFormatDialog;
					var nu = new i.FormatRulesManagerDialog;
					init_class();
					hideTab_sparklineTab();
					hideTab_tableTab();
					hideTab_formulaSparklineTab();
					hideTab_formulaSkdbTab();
				}
				function toggle_checked(n) {
					$("#" + n).find(".ui-icon").toggleClass("sku-wijribbon-checked").toggleClass("sku-wijribbon-unchecked")
				}
				function is_checked(n) {
					return $("#" + n).find(".ui-icon").hasClass("sku-wijribbon-checked")
				}
				function set_checked(n, t) {
					var i = $("#" + n).find(".ui-icon").removeClass("sku-wijribbon-checked").removeClass("sku-wijribbon-unchecked");
					t ? i.addClass("sku-wijribbon-checked") : i.addClass("sku-wijribbon-unchecked")
				}
				function increase_fontsize() {
					var t = [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72],
						i = $("#font-size").find(".ui-button-text"),
						r = Number(i.text()),
						n;
					if (r >= t[t.length - 1]) return;
					for (n = 0; n < t.length; n++) {
						if (r < t[n]) return i.text(t[n]), t[n];
						if (r == t[n]) return i.text(t[n + 1]), t[n + 1]
					}
				}
				function decrease_fontsize() {
					var t = [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72],
						i = $("#font-size").find(".ui-button-text"),
						r = Number(i.text()),
						n;
					if (r <= t[0]) return;
					for (n = t.length - 1; n > 0; n--) {
						if (r > t[n]) return i.text(t[n]), t[n];
						if (r == t[n]) return i.text(t[n - 1]), t[n - 1]
					}
				}
				function init_class() {
					$("#font-family").addClass("sku-wijribbon-fontfamily"), 
					$("#font-size").addClass("sku-wijribbon-fontsize"), 
					$("#number-format").addClass("sku-wijribbon-number"), 
					$("#paste-options").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-paste"),
					$("#paste-options").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'), 
					$("#freeze-panes").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-freeze"), 
					$("#freeze-panes").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'), 
					$("#find-goto").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-find"), 
					$("#find-goto").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'), 
					$("#sort-filter").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-sortfilter"), 
					$("#sort-filter").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'), 
					$("#condition-format").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-conditionalformat"), 
					$("#insert-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-insert"), 
					$("#insert-row-column").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'), 
					$("#delete-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-delete"), 
					$("#delete-row-column").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'), 
					$("#format-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-format"), 
					$("#format-row-column").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'), 
					$("#calculate-option").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-calculateoption"), 
					$("#calculate-option").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'), 
					$("#borders").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon sku-wijribbon-bottomborder"),
					$("#borders").find(".ui-button-text").text("borders"), $(".sku-wijribbon-bigbutton").each(function(n, t) {
						var i = $(t);
						i.data("button-size") ? i.width(i.data("button-size")) : i.width(i.width() + 6)
					}), 
					$("#showhide-vgridline").parents(".sku-wijribbon-list").addClass("sku-wijribbon-marginright"), 
					$("#showhide-columnheader").parents(".sku-wijribbon-list").addClass("sku-wijribbon-marginright")
				}
				
				function showTab_sparklineTab() {
					$(".ribbon-bar").wijribbon("setTabPageVisible", "sparklineTab", !0), $(".ribbon-bar").wijtabs("select", "sparklineTab")
				}
				function showTab_formulaSparklineTab() {
					$(".ribbon-bar").wijribbon("setTabPageVisible", "formulaSparklineTab", !0), 
					$(".ribbon-bar").wijtabs("select", "formulaSparklineTab")
				}
				function hideTab_formulaSparklineTab() {
					$("a[href='#formulaSparklineTab']").is(":visible") && $(".ribbon-bar").wijribbon("setTabPageVisible", "formulaSparklineTab", !1)
				}
				function hideTab_sparklineTab() {
					$("a[href='#sparklineTab']").is(":visible") && $(".ribbon-bar").wijribbon("setTabPageVisible", "sparklineTab", !1)
				}
				function hideTab_tableTab() {
					$("a[href='#tableTab']").is(":visible") && $(".ribbon-bar").wijribbon("setTabPageVisible", "tableTab", !1)
				}
				function showTab_tableTab() {
					$(".ribbon-bar").wijribbon("setTabPageVisible", "tableTab", !0), $(".ribbon-bar").wijtabs("select", "tableTab")
				}
				function set_label(n, t) {
					$(n).button("option", "label", t)
				}
				function undoManage() {
					if(i.wrapper.spread.undoManager().canUndo() ){
						$(".quick-access-bar").find('[data-action="undo"]').prop("disabled", !1), 
						$(".quick-access-bar").find('[data-action="undo"]').fadeTo("faster", 1)
					} else{
						$(".quick-access-bar").find('[data-action="undo"]').prop("disabled", !0), 
						$(".quick-access-bar").find('[data-action="undo"]').fadeTo("faster", .2)
					}
					
					if(i.wrapper.spread.undoManager().canRedo()){
						$(".quick-access-bar").find('[data-action="redo"]').prop("disabled", !1), 
						$(".quick-access-bar").find('[data-action="redo"]').fadeTo("faster", 1)
					}else{
						$(".quick-access-bar").find('[data-action="redo"]').prop("disabled", !0), 
						$(".quick-access-bar").find('[data-action="redo"]').fadeTo("faster", .2)
					}
				}
				function updateCellStyle() {
					var f = i.wrapper.spread.getActiveSheet(),
						n = f.getActualStyle(f.getActiveRowIndex(), f.getActiveColumnIndex()),
						e, r, o, u, t;
					$(".ribbon-bar").wijribbon("setButtonsChecked", {
						"font-weight": !1,
						"font-italic": !1,
						"font-underline": !1
					});
					if (n && n.font) {
						t = i.util.parseFont(n.font), t.fontWeight !== "normal" && $(".ribbon-bar").wijribbon("setButtonChecked", "font-weight", !0), t.fontStyle !== "normal" && $(".ribbon-bar").wijribbon("setButtonChecked", "font-italic", !0), t.fontSize && set_label("#font-size", t.fontSize.substring(0, t.fontSize.length - 2));
						if (t.fontFamily) {
							e = t.fontFamily.split(","), r = e[0], r.match(/^["'].*["']$/) && (r = r.substring(1, r.length - 1)), o = new RegExp("^(.*,s*)?[\"']?" + r + "[\"']?s*(,.*)?$");
							for (u in i.res.ribbon.fontFamilies) if (o.test(i.res.ribbon.fontFamilies[u].name)) {
								r = i.res.ribbon.fontFamilies[u].text;
								break
							}
							set_label("#font-family", r)
						}
					} else t = i.util.parseFont(i.res.defaultFont), set_label("#font-size", t.fontSize.substring(0, t.fontSize.length - 2)), set_label("#font-family", t.fontFamily);
					n && n.textDecoration && n.textDecoration & 1 && $(".ribbon-bar").wijribbon("setButtonChecked", "font-underline", !0), $(".ribbon-bar").wijribbon("setButtonsChecked", {
						"left-align": !1,
						"center-align": !1,
						"right-align": !1
					});
					if (n && n.hAlign !== undefined) switch (n.hAlign) {
					case 0:
						$(".ribbon-bar").wijribbon("setButtonChecked", "left-align", !0);
						break;
					case 1:
						$(".ribbon-bar").wijribbon("setButtonChecked", "center-align", !0);
						break;
					case 2:
						$(".ribbon-bar").wijribbon("setButtonChecked", "right-align", !0);
						break
					}
					$(".ribbon-bar").wijribbon("setButtonsChecked", {
						"top-align": !1,
						"middle-align": !1,
						"bottom-align": !1
					});
					if (n && n.vAlign !== undefined) switch (n.vAlign) {
					case 0:
						$(".ribbon-bar").wijribbon("setButtonChecked", "top-align", !0);
						break;
					case 1:
						$(".ribbon-bar").wijribbon("setButtonChecked", "middle-align", !0);
						break;
					case 2:
						$(".ribbon-bar").wijribbon("setButtonChecked", "bottom-align", !0);
						break
					}
					n && n.wordWrap ? $(".ribbon-bar").wijribbon("setButtonChecked", "wrap-text", !0) : $(".ribbon-bar").wijribbon("setButtonChecked", "wrap-text", !1)
				}
				function updateFormat() {
					var r = i.wrapper.spread.getActiveSheet(),
						n = r.getActualStyle(r.getActiveRowIndex(), r.getActiveColumnIndex()),
						u, t;
					if (n && n.formatter && n.formatter !== "general") {
						for (u in i.res.commonFormats) {
							t = i.res.commonFormats[u];
							if (t.format === n.formatter) {
								set_label("#number-format", t.label);
								return
							}
						}
						set_label("#number-format", i.res.customFormat)
					} else set_label("#number-format", i.res.generalFormat)
				}
				function updateMerge() {
					for (var r = i.wrapper.spread.getActiveSheet(), u = r.getSelections(), t, n = 0; n < u.length; n++) {
						t = r.getSpans(u[n]);
						if (t.length > 0) {
							$(".ribbon-bar").wijribbon("setButtonChecked", "merge-center", !0);
							return
						}
					}
					$(".ribbon-bar").wijribbon("setButtonChecked", "merge-center", !1)
				}
				
				function showTab_formulaSkdbTab(formulaName) {
					$(".ribbon-bar").wijribbon("setTabPageVisible", "formulaSkdbTab", !0); 
					$(".ribbon-bar").wijtabs("select", "formulaSkdbTab");
					$(".sku-sksetting").hide();
					console.log(".sku-sksetting-"+formulaName)
					$(".sku-sksetting-"+formulaName).show();
				}
				function hideTab_formulaSkdbTab() {
					if($("a[href='#formulaSkdbTab']").is(":visible")) 
						$(".ribbon-bar").wijribbon("setTabPageVisible", "formulaSkdbTab", !1)
				}
				
				function updateSkdb() {
					var iSheet = i.wrapper.spread.getActiveSheet(),
						row = iSheet.getActiveRowIndex(),
						col = iSheet.getActiveColumnIndex(),
						formulaInfo=iSheet.getFormulaInformation(row, col),
						formulaName=(formulaInfo)?formulaInfo.name:null;
					if(formulaName=="SKQUERY"){	//
						showTab_formulaSkdbTab(formulaName) 
					}else{
						hideTab_formulaSkdbTab()
						//hideTab_skdbTab()
					}
					
				}
				
				function updateSparkline() {
					var iSheet = i.wrapper.spread.getActiveSheet(),
						e = iSheet.getActiveRowIndex(),
						idxColumn = iSheet.getActiveColumnIndex(),
						s, iSparkline, iSetting;
					if (iSheet.getSparkline(iSheet.getActiveRowIndex(), iSheet.getActiveColumnIndex()) instanceof t.Sparkline) {		//如果是sparkline
						showTab_sparklineTab(); 
						iSparkline = iSheet.getSparkline(iSheet.getActiveRowIndex(), iSheet.getActiveColumnIndex());
						$(".ribbon-bar").wijribbon("setButtonChecked", "sparkline-type-line", !1); 
						$(".ribbon-bar").wijribbon("setButtonChecked", "sparkline-type-column", !1); 
						$(".ribbon-bar").wijribbon("setButtonChecked", "sparkline-type-winloss", !1);
						switch (iSparkline.sparklineType()) {
						case 0:
							$(".ribbon-bar").wijribbon("setButtonChecked", "sparkline-type-line", !0);
							break;
						case 1:
							$(".ribbon-bar").wijribbon("setButtonChecked", "sparkline-type-column", !0);
							break;
						case 2:
							$(".ribbon-bar").wijribbon("setButtonChecked", "sparkline-type-winloss", !0);
							break
						}
						iSetting = iSparkline.setting(), 
						set_checked("sparkline-high-point", iSetting.showHigh()), 
						set_checked("sparkline-low-point", iSetting.showLow()), 
						set_checked("sparkline-first-point", iSetting.showFirst()), 
						set_checked("sparkline-last-point", iSetting.showLast()), 
						set_checked("sparkline-negative-point", iSetting.showNegative()), 
						set_checked("sparkline-marker-point", iSetting.showMarkers())
					} else{
						if(s = i.util.parseFormulaSparkline(e, idxColumn)) {
							showTab_formulaSparklineTab() 
						} else{						
							hideTab_formulaSparklineTab(), 
							hideTab_sparklineTab()
						}
					}
				}
				function updateTable() {
					var isheet = i.wrapper.spread.getActiveSheet(),
						n;
					if(isheet.findTable(isheet.getActiveRowIndex(), isheet.getActiveColumnIndex()) instanceof t.SheetTable) { 
						showTab_tableTab(), 
						n = isheet.findTable(isheet.getActiveRowIndex(), 
						isheet.getActiveColumnIndex()), 
						set_checked("table-header-row", n.showHeader()), 
						set_checked("table-total-row", n.showFooter()), 
						set_checked("table-banded-rows", n.bandRows()), 
						set_checked("table-first-column", n.highlightFirstColumn()), 
						set_checked("table-last-column", n.highlightLastColumn()), 
						set_checked("table-banded-columns", n.bandColumns()), 
						set_checked("table-filter-button", n.filterButtonVisible()), 
						$(".designer-table-name").val(n.name())
					}else{
						hideTab_tableTab();
					}
				}
				function updateShowHide() {
					var n = i.wrapper.spread.getActiveSheet();
					set_checked("showhide-columnheader", n.getColumnHeaderVisible()), 
					set_checked("showhide-rowheader", n.getRowHeaderVisible()), 
					set_checked("showhide-hgridline", n.gridline.showHorizontalGridline), 
					set_checked("showhide-vgridline", n.gridline.showVerticalGridline), 
					set_checked("showhide-tabstrip", i.wrapper.spread.tabStripVisible()), 
					set_checked("showhide-newtab", i.wrapper.spread.newTabVisible())
				}
				function updateProtectLock() {
					var n = i.wrapper.spread.getActiveSheet();
					n.isProtected ? ($(".ribbon-bar").find("#protect-sheet").addClass("hidden"), $(".ribbon-bar").find("#unprotect-sheet").removeClass("hidden")) : ($(".ribbon-bar").find("#protect-sheet").removeClass("hidden"), $(".ribbon-bar").find("#unprotect-sheet").addClass("hidden")), n.getCell(n.getActiveRowIndex(), n.getActiveColumnIndex()).locked() ? ($(".ribbon-bar").find("#lock-cells").addClass("hidden"), $(".ribbon-bar").find("#unlock-cells").removeClass("hidden")) : ($(".ribbon-bar").find("#lock-cells").removeClass("hidden"), $(".ribbon-bar").find("#unlock-cells").addClass("hidden"))
				}
				function updateZoomToStatusBar() {
					var n = i.wrapper.spread.getActiveSheet();
					$(".statusBar").find(".statusbar-zoom-value").text(Math.round(n._zoomFactor * 100) + "%")
				}
				function disableDesignMode() {
					var designMode = $("#template-design-mode"),
						btn = designMode.find("span.ui-button-text"),
						indicator = $("#data-binding-setting-indicator"),
						icon = $(".designer-data-binding-icon"),
						p = $(".design-mode-panel"),
						n;
					af(),
					btn.removeClass("template-design-mode-checked"),
					indicator.attr("hidden", "hidden"),
					icon.unbind("click.indicator"),
					wt && (n = i.wrapper.spread.getActiveSheet(), n.setDataSource(wt)),
					t.is(":visible") && t.wijsliderpanel("close"),
					designMode.data("checked", !1),
					li()
				}
				function bu() {
					$(".custom-cell-styles-preview").empty(), y(i.CellStyleDialog.existedCustomCellStyle, $(".custom-cell-styles-preview"), !0), cf()
				}
				function resetSpreadNamedStyle() {
					var n = i.wrapper.spread,
						u, t, f, r;
					$(".custom-cell-styles-preview").children().remove(), $(".good-bad-style-preview").children().remove(), $(".data-model-style-preview").children().remove(), $(".titles-headings-preview").children().remove(), $(".themed-preview").children().remove(), $(".number-format-preview").children().remove(), i.CellStyleDialog.existedCustomCellStyle = {}, i.CellStyleDialog.buildInCellStyle = {};
					var e = du(n),
						c = lf(n),
						s = dr(n),
						o = su(n),
						h = ou(n);
					for (hu(e, c, s, o, h), u = n.getNamedStyles(), t = 0; t < u.length; t++) f = u[t].name, f && (r = f.toLowerCase(), r.substr(0, 9) === "__builtin" || i.CellStyleDialog.buildInCellStyle.hasOwnProperty(r) || (i.CellStyleDialog.existedCustomCellStyle[r] = u[t]));
					lt(i.CellStyleDialog.existedCustomCellStyle) && ($(".cell-style-custom-li").addClass("hidden"), $(".custom-cell-styles-preview").parent().addClass("hidden")), y(i.res.cellStylesDialog.goodBadAndNeutralContent, $(".good-bad-style-preview"), !1, e), y(i.res.cellStylesDialog.dataAndModelContent, $(".data-model-style-preview"), !1, c), y(i.res.cellStylesDialog.titlesAndHeadingsContent, $(".titles-headings-preview"), !1, s), y(i.res.cellStylesDialog.themedCellStyleContent, $(".themed-preview"), !1, o), y(i.res.cellStylesDialog.numberFormatContent, $(".number-format-preview"), !1, h), hf()
				}
				function du(n) {
					for (var f = ["normal", "bad", "good", "neutral"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]), r = f[i];
						if (u) t[r] = u;
						else switch (r) {
						case "normal":
							t.normal = {
								name: "Normal"
							};
							break;
						case "bad":
							t.bad = {
								name: "Bad",
								backColor: "#FFC7CE",
								foreColor: "#9C0006"
							};
							break;
						case "good":
							t.good = {
								name: "Good",
								backColor: "#C6EFCE",
								foreColor: "#006100"
							};
							break;
						case "neutral":
							t.neutral = {
								name: "Neutral",
								backColor: "#FFEB9C",
								foreColor: "#9C6500"
							};
							break;
						default:
							break
						}
					}
					return t
				}
				function lf(n) {
					for (var f = ["calculation", "check cell", "explanatory text", "input", "linked cell", "note", "output", "warning text"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]), r = f[i];
						if (u) t[r] = u;
						else switch (r) {
						case "calculation":
							t.calculation = {
								name: "Calculation",
								backColor: "#F2F2F2",
								foreColor: "#FCA957",
								border: "thin solid black",
								font: "bold 13px Arial"
							};
							break;
						case "check cell":
							t["check cell"] = {
								name: "Check Cell",
								backColor: "#A5A5A5",
								foreColor: "#FFFFFF",
								border: "medium double black",
								font: "bold 13px Arial"
							};
							break;
						case "explanatory text":
							t["explanatory text"] = {
								name: "Explanatory Text",
								foreColor: "#7F7F7F",
								font: "italic bold 13px Arial"
							};
							break;
						case "input":
							t.input = {
								name: "Input",
								foreColor: "#3F3F76",
								backColor: "#FFCC99",
								border: "thin solid black",
								font: "bold 13px Arial"
							};
							break;
						case "linked cell":
							t["linked cell"] = {
								name: "Linked Cell",
								foreColor: "#FCA957",
								borderBottom: "medium double #FDD3A9",
								font: "bold 13px Arial"
							};
							break;
						case "note":
							t.note = {
								name: "Note",
								backColor: "#FFFFCC",
								border: "thin solid black",
								font: "13px Arial"
							};
							break;
						case "output":
							t.output = {
								name: "Output",
								backColor: "#F2F2F2",
								border: "thin solid black",
								font: "bold 13px Arial"
							};
							break;
						case "warning text":
							t["warning text"] = {
								name: "Warning Text",
								foreColor: "#FF3030",
								font: "13px Arial"
							};
							break;
						default:
							break
						}
					}
					return t
				}
				function dr(n) {
					for (var f = ["heading 1", "heading 2", "heading 3", "heading 4", "title", "total"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]), r = f[i];
						if (u) t[r] = u;
						else switch (r) {
						case "heading 1":
							t["heading 1"] = {
								name: "Heading 1",
								foreColor: "#1F497D",
								font: "bold 17px Arial",
								borderBottom: "medium solid #4F81BD"
							};
							break;
						case "heading 2":
							t["heading 2"] = {
								name: "Heading 2",
								foreColor: "#1F497D",
								font: "bold 15px Arial",
								borderBottom: "medium solid #A4BDDD"
							};
							break;
						case "heading 3":
							t["heading 3"] = {
								name: "Heading 3",
								foreColor: "#1F497D",
								font: "bold 13px Arial",
								borderBottom: "thin solid #93B1D7"
							};
							break;
						case "heading 4":
							t["heading 4"] = {
								name: "Heading 4",
								foreColor: "#1F497D",
								font: "bold 13px Arial"
							};
							break;
						case "title":
							t.title = {
								name: "Title",
								foreColor: "#1F497D",
								font: "bold 17px Century"
							};
							break;
						case "total":
							t.total = {
								name: "Total",
								font: "bold 13px Arial",
								borderTop: "thin solid #1F497D",
								borderBottom: "medium double #1F497D"
							};
							break;
						default:
							break
						}
					}
					return t
				}
				function su(n) {
					var s = {},
						l = i.res.cellStylesDialog.themedCellStyleContent,
						f = "black",
						r, h, c, u, t, e, o;
					for (r in l) h = r.toLowerCase(), c = n.getNamedStyle(r), c ? s[h] = c : (t = r.split("-"), t.length === 1 ? (e = t[0].substr(t[0].length - 1), u = "Accent " + e + " 0", f = "white") : t.length === 2 && (e = t[1].substr(t[1].length - 1), o = 100 - parseInt(t[0]), u = "Accent " + e + " " + o + "%", f = o > 50 ? "black" : "white"), u = i.ColorHelper.parse(u, i.wrapper.spread.getActiveSheet().currentTheme().colors()), s[h] = {
						name: r,
						backColor: u.color,
						foreColor: f
					});
					return s
				}
				function ou(n) {
					for (var f = ["comma", "comma [0]", "currency", "currency [0]", "percent"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]), r = f[i];
						if (u) t[r] = u;
						else switch (r) {
						case "comma":
							t.comma = {
								name: "Comma",
								formatter: "_(* #,##0.00_);_(* (#,##0.00);_(*'-'??_);_(@_)"
							};
							break;
						case "comma [0]":
							t["comma [0]"] = {
								name: "Comma [0]",
								formatter: "_(* #,##0_);_(* (#,##0);_(*'-'_);_(@_)"
							};
							break;
						case "currency":
							t.currency = {
								name: "Currency",
								formatter: "_('$'* #,##0.00_);_('$'* (#,##0.00);_('$'*'-'??_);_(@_)"
							};
							break;
						case "currency [0]":
							t["currency [0]"] = {
								name: "Currency [0]",
								formatter: "_('$'* #,##0_);_('$'* (#,##0);_('$'*'-'_);_(@_)"
							};
							break;
						case "percent":
							t.percent = {
								name: "Percent",
								formatter: "0%"
							};
							break;
						default:
							break
						}
					}
					return t
				}
				function hu() {
					for (var e = [], s, u, f, h, n, o, r = 0; r < arguments.length - 0; r++) e[r] = arguments[r + 0];
					for (s = e.length, u = 0; u < s; u++) {
						f = e[u];
						for (h in f) n = f[h], n instanceof t.Style || iu(n), o = n.name.toLowerCase(), i.CellStyleDialog.buildInCellStyle[o] = n
					}
				}
				function iu(n) {
					n.borderTop && (n.borderTop = c(n.borderTop)), n.borderBottom && (n.borderBottom = c(n.borderBottom)), n.borderLeft && (n.borderLeft = c(n.borderLeft)), n.borderRight && (n.borderRight = c(n.borderRight)), n.border && (n.borderTop = c(n.border), n.borderBottom = c(n.border), n.borderLeft = c(n.border), n.borderRight = c(n.border))
				}
				function c(n) {
					if (!n) return undefined;
					var i = n.split(" "),
						r = $.RE.rexcel.LineStyle.thin,
						u = "black";
					if (i.length === 3) return (i[0] === "thin" || i[0] === "medium" || i[0] === "thick") && (r = t.LineStyle[i[0]]), i[1] !== "solid" && (r = t.LineStyle[i[1]]), u = i[2], new $.RE.rexcel.LineBorder(u, r)
				}
				function sr(n, r) {
					var e = {
						borderTop: undefined,
						borderBottom: undefined,
						borderLeft: undefined,
						borderRight: undefined,
						border: undefined
					},
						u, f;
					$.extend(n, r);
					for (u in r)(u === "backColor" || u === "foreColor") && r[u] ? (f = i.ColorHelper.parse(r[u], i.wrapper.spread.getActiveSheet().currentTheme().colors()), n[u] = f.color) : u === "hAlign" && r[u] && (n.textAlign = $.Rxcel.HorizontalPosition[r[u]]);
					n.font && n.themeFont && (n.font = t.StyleHelper.composeFont(n.font, i.util.getThemeFont(n.themeFont))), n.borderBottom && (n.borderBottom = h(n.borderBottom)), n.borderLeft && (n.borderLeft = h(n.borderLeft)), n.borderRight && (n.borderRight = h(n.borderRight)), n.borderTop && (n.borderTop = h(n.borderTop)), n.textDecoration && (n.textDecoration = i.util.toCSSTextDecoration(n.textDecoration))
				}
				function h(n) {
					var r, o, e, s, f, u;
					if (typeof n == "string") return n;
					r = [], o = ["dotted", "solid", "double", "dashed"];
					if (n.style) {
						for (e = t.LineStyle[n.style], e = e.toLowerCase(), r[0] = uu(n.style) + "px", u = 0; u < o.length; u++) e.indexOf(o[u]) !== -1 && (r[1] = o[u]);
						r[1] || (r[1] = e.indexOf("dot") !== -1 ? "dotted" : e.indexOf("dash") !== -1 ? "dashed" : "solid")
					}
					for (n.color ? (s = i.ColorHelper.parse(n.color, i.wrapper.spread.getActiveSheet().currentTheme().colors()), r[2] = s.color) : (s = i.ColorHelper.parse("Text 1", i.wrapper.spread.getActiveSheet().currentTheme().colors()), r[2] = s.color), f = "", r[0] === "thin" && r[1] === "double" && (r[0] = undefined), u = 0; u < r.length; u++) r[u] && (f = f + r[u] + " ");
					return f = f.substring(0, f.lastIndexOf(" "))
				}
				function uu(n) {
					switch (n) {
					case 9:
					case 1:
					case 3:
					case 4:
					case 7:
					case 11:
						return 1;
					case 2:
					case 10:
					case 12:
					case 8:
					case 13:
						return 2;
					case 5:
					case 6:
						return 3
					}
					return 0
				}
				function y(n, t, r, u) {
					var s, f;
					if (r) {
						if (!lt(n)) {
							$(".cell-style-custom-li").removeClass("hidden"), $(".custom-cell-styles-preview").parent().removeClass("hidden");
							for (f in n) {
								var o = n[f].name,
									e = $("<span></span>").attr({
										title: o,
										"data-name": o
									}).addClass("cell-style-outer-span"),
									h = $("<div></div>").text(o).addClass("custom-cell-style-symbol").appendTo(e);
								e.appendTo(t), s = {}, sr(s, n[f]), ot(s, h), at(o, i.wrapper.spread)
							}
						}
					} else for (f in n) {
						var c = f.toLowerCase(),
							e = $("<span></span>").attr({
								title: f,
								"data-name": f
							}).addClass("cell-style-outer-span"),
							h = $("<div></div>").text(n[f]).addClass("cell-style-symbol").appendTo(e);
						e.appendTo(t), u && ot(u[c], h)
					}
				}
				function lt(n) {
					for (var t in n) return !1;
					return !0
				}
				function ot(n, r) {
					var u;
					n && (n.backColor && (u = i.ColorHelper.parse(n.backColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), r.css("background-color", u.color)), n.border && r.css("border", n.border), n.foreColor && (u = i.ColorHelper.parse(n.foreColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), r.css("color", u.color)), n.font && (n.themeFont && (n.font = t.StyleHelper.composeFont(n.font, i.util.getThemeFont(n.themeFont))), r.css("font", n.font)), n.borderLeft && r.css("border-left", h(n.borderLeft)), n.borderRight && r.css("border-right", h(n.borderRight)), n.borderBottom && r.css("border-bottom", h(n.borderBottom)), n.borderTop && r.css("border-top", h(n.borderTop)), n.textAlign && r.css("text-align", n.textAlign), n.textDecoration && (isNaN(n.textDecoration) ? r.css("text-decoration", n.textDecoration) : r.css("text-decoration", i.util.toCSSTextDecoration(n.textDecoration))))
				}
				function rr(n) {
					var r = n.srcElement || n.target,
						i = r.parentElement,
						t = i;
					$(t).addClass("ui-state-hover")
				}
				function er(n) {
					var r = n.srcElement || n.target,
						i = r.parentElement,
						t = i;
					$(t).removeClass("ui-state-hover")
				}
				function fr(n) {
					var e = n.srcElement || n.target,
						u = e.parentElement,
						r = u,
						f = i.wrapper.spread,
						t;
					t = r.title ? r.title : r.innerText, at(t, f), i.actions.doAction("setStyleByName", i.wrapper.spread, t), $("#cell-styles-popup").wijpopup("hide")
				}
				function at(n, t) {
					var r = n.toLowerCase();
					t.getNamedStyle(n) || (i.CellStyleDialog.buildInCellStyle.hasOwnProperty(r) ? i.actions.doAction("addNamedStyle", t, i.CellStyleDialog.buildInCellStyle[r]) : i.CellStyleDialog.existedCustomCellStyle.hasOwnProperty(r) && i.actions.doAction("addNamedStyle", t, i.CellStyleDialog.existedCustomCellStyle[r]))
				}
				function ur(t) {
					var u = t.srcElement || t.target,
						r;
					it = u.parentElement, r = i.wrapper.spread.getActiveSheet(), e = $(it).attr("data-name").toLowerCase(), $("#cellstyle-menu-container").css({
						position: "absolute",
						top: t.offsetY,
						left: t.offsetX
					}), $(".cellstyle-menu").removeClass("hidden"), $(".cellstyle-menu").position({
						my: "left top",
						of: t
					}), n.spread.util.cancelDefault(t)
				}
				function hf() {
					var n;
					$(".new-cell-style-text").unbind(), $(".cell-style-symbol").unbind(), $(".cellstyle-menu").menu({
						select: cr
					}), $(".cell-style-symbol").bind("mouseenter", rr), $(".cell-style-symbol").bind("mouseout", er), $(".cell-style-symbol").bind("click", fr), $(".cell-style-symbol").bind("contextmenu", ur), $(".new-cell-style-text").bind("mouseout", function() {
						$(".new-cell-style-text").removeClass("ui-state-hover")
					}), $(".new-cell-style-text").bind("mouseenter", function() {
						$(".new-cell-style-text").addClass("ui-state-hover")
					}), $(".new-cell-style-text").bind("click", function() {
						$("#cell-styles-popup").wijpopup("hide"), n === undefined && (n = new i.CellStyleDialog), n.open()
					}), $(document).bind("mouseup", function(n) {
						n.button !== 2 && ($(".cellstyle-menu").hasClass("hidden") || $(".cellstyle-menu").addClass("hidden"))
					})
				}
				function cf() {
					$(".custom-cell-style-symbol").unbind(), $(".custom-cell-style-symbol").bind("mouseenter", rr), $(".custom-cell-style-symbol").bind("mouseout", er), $(".custom-cell-style-symbol").bind("click", fr), $(".custom-cell-style-symbol").bind("contextmenu", ur)
				}
				function or() {
					var o = 1,
						f = 21,
						e = 28,
						r = 11,
						u = 7,
						n;
					rt("custom-preview", "custom", u), rt("light-preview", "light", f), rt("medium-preview", "medium", e), rt("dark-preview", "dark", r), $(".table-format-preview").mouseenter(function(n) {
						var u = n.srcElement || n.target,
							r = u.parentElement,
							f = r,
							i = f.className.split(" "),
							t = i[0];
						t.indexOf("container-span") !== -1 && (t = i[1]), $("." + t).addClass("ui-state-hover")
					}), $(".table-format-preview").mouseout(function(n) {
						var u = n.srcElement || n.target,
							r = u.parentElement,
							f = r,
							i = f.className.split(" "),
							t = i[0];
						t.indexOf("container-span") !== -1 && (t = i[1]), $("." + t).removeClass("ui-state-hover")
					}), $(".table-format-preview").mouseup(function(n) {
						for (var s = i.wrapper.spread, a = n.srcElement || n.target, l = a, c = l.className, u, o = c.split(" "), e, f, h, r = 0; r < o.length; r++) if (o[r].indexOf("table-format") === -1) {
							u = o[r];
							break
						}
						if (u.indexOf("custom") === -1) i.actions.doAction("formatAsTable", s, t.TableStyles[u].call(t.TableStyles)), updateTable();
						else {
							e = i.FormatTableDialog.customTableStyle;
							for (f in e) h = f.substring(0, f.indexOf("-")), h === u && (i.actions.doAction("formatAsTable", s, e[f]), updateTable())
						}
						$("#format-table-popup").wijpopup("hide")
					}), $(".new-table-style").click(function() {
						$("#format-table-popup").wijpopup("hide"), n === undefined ? n = new i.FormatTableDialog : n.refresh(), n.open()
					}).mouseenter(function() {
						$(this).css("background", "#DBDBDB")
					}).mouseleave(function() {
						$(this).css("background", "white")
					})
				}
				function pu(n, t) {
					var s = i.FormatTableDialog.customTableStyle,
						h = 7,
						e = "custom",
						r = "table-format-",
						u = r + e + t,
						f = n.substring(n.indexOf("-") + 1),
						o = n.substring(0, n.indexOf("-"));
					$("." + u).attr("title", f)
				}
				function rt(n, t, i) {
					for (var s = "table-format-", e = "table-format-preview", f, u, o, r = 1; r <= i; r++) u = s + t + r, f = t === "custom" ? $("<span></span>").addClass(u + " " + e + " " + t + r) : $("<span></span>").attr("title", t + r).addClass(u + " " + e + " " + t + r), o = $("<span></span>").append(f).addClass(u + "-container container-span"), $("<button></button>").append(o).addClass(u + "-button " + e + "-button").appendTo($("." + n))
				}
				function updateRibbonBarStyle() {
					undoManage();
					updateCellStyle();
					updateFormat();
					updateMerge();
					updateSparkline();
					updateTable();
					dt();
					updateProtectLock();
					resetSpreadNamedStyle();
					disableDesignMode()
				}
				function attachEvent() {
					var u, f, n, r;
					i.wrapper.spread.bind(t.Events.EnterCell, function(n, t) {
						u = !0, setTimeout(function() {
							if(u) {
								u = !1;
								updateCellStyle();
								updateFormat();
								updateSparkline();
								updateSkdb(), 
								updateTable(); 
								updateProtectLock()
							}
						}, 100)
					}),
					i.wrapper.spread.bind(t.Events.SelectionChanged, function(n, t) {
						f = !0, setTimeout(function() {
							f && (f = !1, updateMerge())
						}, 100)
					}),
					n = i.wrapper.spread.undoManager(),
					r = n.changed,
					n.changed = function() {
						undoManage(), r && r.apply(n, arguments)
					}, 
					i.wrapper.spread.bind(t.Events.ButtonClicked, function(n, r) {
						var f = i.wrapper.spread.getSheetFromName(r.sheetName),
							e = f.getCellType(r.row, r.col),
							u;
						e instanceof t.HyperLinkCellType && (u = f.getValue(r.row, r.col, 3).toString(), app.openUrl(u, function(n) {
							n || i.MessageBox.show("Open URL failed.", i.res.title, 3)
						}))
					}),
					i.wrapper.spread.bind(t.Events.ActiveSheetChanged, function(n, t) {
						updateShowHide(),
						updateZoomToStatusBar()
					}),
					i.wrapper.spread.bind(t.Events.EditorStatusChanged, function(n, t) {
						var r = $(".statusBar").find(".statusbar-edit-status");
						switch (t.newStatus) {
						case 2:
							r.text(i.res.statusBar.edit);
							break;
						case 1:
							r.text(i.res.statusBar.enter);
							break;
						case 0:
							r.text(i.res.statusBar.ready);
							break
						}
					}),
					i.wrapper.spread.bind(t.Events.UserZooming, function(n, t) {
						updateZoomToStatusBar()
					}),
					$(".designer-table-name").blur(function() {
						i.actions.doAction("setTableName", i.wrapper.spread, $(this).val())
					}),
					$(window).bind("compositionstart", function() {
						var t = window.gcGlobal,
							n;
						if (t._eventSuspended > 0) return;
						n = t.activeElement, n && n.startEdit && n.startEdit(!0)
					})
				}
				function gu() {
					var l = t.Events.SelectionChanged + ".bindingPath",
						c = "click.indicator",
						h = "click.ok",
						a = "click.cancel",
						p = t.Events.TopRowChanged + ".bindingPath",
						y = "click.autoGenetateColumns",
						v = "click.dataFieldType",
						u = i.wrapper.spread,
						r = $(".designer-data-binding-icon"),
						n = $(".ok-table-binding-button"),
						f = $(".cancel-table-binding-button"),
						s = i.wrapper.spread.getActiveSheet(),
						o = $(".auto-generate-columns"),
						e = $(".data-binding-celltype-button");
					li(), e.bind(v, function(n, t) {
						var o, u, s, f, r, e, c, h;
						$(".data-binding-celltype-option").wijpopup("hide"), o = "schema-type-button", s = $.fn.zTree.getZTreeObj("ztree-container"), s && (f = s.getSelectedNodes(), f && f.length >= 0 && (u = f[0]));
						if (!u) return;
						r = $(this).data("datafieldtype"), e = $("#" + u.tId + "_a"), r && e.length > 0 && (e.find("." + o).remove(), u.dataFieldType = r, c = r + "-icon", h = "<span class='button " + o + " " + c + "' title='" + i.res.ribbon.data[r] + "'></span>", e.prepend(h), (r === i.util.DataFieldType.table || r === i.util.DataFieldType.combox) && ut("ztree-container", u.children))
					}), u.bind(l, function(n, t) {
						nt()
					}), r.bind(c, function(n) {
						var a = i.wrapper.spread.getActiveSheet(),
							r, it, u, b, h, l, p, c, o, e, v, g, f, d, y, s, k;
						if (!a) return;
						r = a.findTable(a.getActiveRowIndex(), a.getActiveColumnIndex());
						if (!r) return;
						hi = r, it = n.target, u = $("#data-binding-setting-popup"), u.wijpopup({
							autoHide: !0,
							showing: function(n, t) {
								$(".data-binding-path-overlay").removeAttr("hidden"), u.removeAttr("hidden")
							},
							hiding: function(n, t) {
								$(".data-binding-path-overlay").attr("hidden", "hidden"), u.attr("hidden", "hidden")
							}
						}), u.wijpopup("show"), u.offset({
							top: $(this).offset().top + 8,
							left: $(this).offset().left + 8
						}), b = r.autoGenerateColumns(), $(".auto-generate-columns").prop("checked", b), h = $(".table-binding-path-input"), h.length > 0 && (l = r.bindingPath(), l || (l = null), h.val(l)), p = $(".table-column-data-field"), p.empty();
						var tt = $(document.createDocumentFragment()),
							w = 0,
							ut = r.bindingPath(),
							rt = $.fn.zTree.getZTreeObj("ztree-container"),
							nt = h.val().split("."),
							t = rt.getNodeByParam("name", nt[nt.length - 1]);
						for (t && t.children && t.dataFieldType === i.util.DataFieldType.table && (w = t.children.length), c = $("<select>").addClass("data-field-select"), o = 0; o <= w; o++) t && t.children && (e = t.children[o], e && e.name && $("<option>").val(e.name).text(e.name).appendTo(c)), o === w && $("<option>").val("(empty)").text("(empty)").appendTo(c);
						v = r._columns;
						if (v) {
							for (g = v.length, f = 0; f < g; f++) d = v[f].dataField(), y = $("<div>").addClass("data-field-container").appendTo(tt), $("<label>").addClass("data-field-block1").text("Column" + f + ": ").appendTo(y), s = c.clone(), b && s.attr("disabled", "disabled"), k = s.find("option[value=" + d + "]"), k.length !== 0 ? k.attr("selected", "selected") : s.find("option[value='(empty)']").attr("selected", "selected"), s.appendTo(y);
							tt.appendTo(p)
						}
					}), n.bind(h, function(n) {
						var l, v, r, e, a, f, s, u, o;
						$("#data-binding-setting-popup").wijpopup("hide"), l = $(".data-field-select"), v = l.length;
						if (v <= 0) return;
						r = hi;
						if (!r) return;
						e = i.wrapper.spread.getActiveSheet();
						if (!e) return;
						for (a = [], f = 0; f < v; f++) s = new t.TableColumnInfo(f), u = $(l[f]).val(), u && u !== "" && u !== "(empty)" || (u = null), s.dataField(u), s.name(u), a.push(s);
						r.bindColumns(a), o = $(".auto-generate-columns").prop("checked");
						if (o) {
							var w = r.endRow() - r.startRow() + 1,
								y = r.endColumn() - r.startColumn() + 1,
								b = $.fn.zTree.getZTreeObj("ztree-container");
							if (!b) return;
							var p = $(".table-binding-path-input"),
								c = tt(p.val()),
								h = c.length;
							h !== y && i.MessageBox.show(i.res.ribbon.data.warningTable, i.res.title, 2, 1, function(n, i) {
								var s, u, f;
								if (i === 1) {
									for (r.autoGenerateColumns(o), s = [], u = 0; u < h; u++) f = new t.TableColumnInfo(u), f.dataField(c[u]), f.name(c[u]), s.push(f);
									r.bindColumns(s), e.resizeTable(r, w, h), nt(), e.repaint();
									return
								}
							})
						}
						r.autoGenerateColumns(o), e.repaint()
					}), f.bind(a, function(n) {
						$("#data-binding-setting-popup").wijpopup("hide")
					}), s.bind(p, function(n, t) {
						nt()
					}), o.bind(y, function(n, t) {
						var i = $(".data-field-select"),
							r;
						if (i.length <= 0) return;
						r = $(this).prop("checked"), r ? i.attr("disabled", "disabled") : i.removeAttr("disabled")
					})
				}
				function li() {
					var l = t.Events.SelectionChanged + ".bindingPath",
						c = "click.indicator",
						h = "click.ok",
						a = "click.cancel",
						p = t.Events.TopRowChanged + ".bindingPath",
						y = "click.autoGenetateColumns",
						v = "click.dataFieldType",
						u = i.wrapper.spread,
						r = $(".designer-data-binding-icon"),
						n = $(".ok-table-binding-button"),
						f = $(".cancel-table-binding-button"),
						s = i.wrapper.spread.getActiveSheet(),
						o = $(".auto-generate-columns"),
						e = $(".data-binding-celltype-button");
					u.unbind(l), r.unbind(c), n.unbind(h), f.unbind(a), s.unbind(p), o.unbind(y), e.unbind(v)
				}
				function nt() {
					var u = i.wrapper.spread.getActiveSheet(),
						o, r, e, n;
					if (!u || !u._eventHandler) return;
					var f = $("#data-binding-setting-indicator"),
						l = u.getActiveRowIndex(),
						c = u.getActiveColumnIndex(),
						h = u.findTable(l, c);
					if (h) {
						o = h.bindingPath();
						if (o !== null && o !== undefined && o !== "") {
							var v = h.range(),
								s = b(v),
								a = b(new t.Range(l, c, 1, 1));
							s.length === 0 && f.attr("hidden", "hidden");
							if (a.length === 0) return;
							for (r = a[0], e = 0; e < s.length; e++) {
								n = s[e];
								if (n.x <= r.x && r.x + r.width <= n.x + n.width && n.y <= r.y && r.y + r.height <= n.y + n.height) {
									f.css({
										left: n.x + n.width - f.width(),
										top: n.y
									}).removeAttr("hidden");
									return
								}
							}
						}
					}
					f.attr("hidden", "hidden")
				}
				function ru() {
					var u = i.wrapper.spread.getActiveSheet(),
						o, n, t;
					if (!u) return;
					var s = u.getSelections(),
						h = u.getRowCount(),
						c = u.getColumnCount();
					for (o = 0; o < s.length; o++) {
						var r = s[o],
							f = r.row,
							e = r.col;
						if (r.col == -1 && r.row == -1) for (n = 0; n < h; n++) for (t = 0; t < c; t++) ft(n, t);
						else if (r.row == -1) for (n = 0; n < h; n++) for (t = e; t < e + r.colCount; t++) ft(n, t);
						else if (r.col == -1) for (n = f; n < f + r.rowCount; n++) for (t = 0; t < c; t++) ft(n, t);
						else for (n = f; n < f + r.rowCount; n++) for (t = e; t < e + r.colCount; t++) ft(n, t)
					}
				}
				function ft(n, t) {
					var u = i.wrapper.spread.getActiveSheet(),
						r;
					if (!u) return;
					r = u.findTable(n, t), r && r.bindingPath() && r.bindingPath(null), u.getBindingPath(n, t) && u.setBindingPath(n, t, null)
				}
				function vu() {
					var r = this,
						t = {
							title: i.res.ribbon.data.loadSchema,
							nameFilters: [i.res.ribbon.data.loadDataSourceFilter.json, i.res.ribbon.data.loadDataSourceFilter.txt]
						},
						n = function(n) {
							if (n.status === "cancelled") return;
							yu(n.fileName)
						};
					app.showOpenDialog(t, n)
				}
				function au() {
					var r = this,
						t = {
							title: i.res.ribbon.data.saveSchema,
							nameFilters: [i.res.ribbon.data.saveDataSourceFilter.json]
						},
						n = function(n) {
							if (n.status === "cancelled") return;
							var u = $.fn.zTree.getZTreeObj("ztree-container"),
								t = u.getNodesByParam("level", 0)[0],
								r = [];
							t.children && treeNodeToArray(t.children, r), app.save(n.fileName, JSON.stringify(i.util.saveJSONSchema(r)), function(n) {
								n.status === "failed" && i.MessageBox.show(n.message, i.res.title, 3)
							}, !1)
						};
					app.showSaveDialog(t, n)
				}
				function yu(n) {
					app.open(n, function(n) {
						var r, u, f;
						if (n.status === "failed") i.MessageBox.show(n.message, i.res.title, 3);
						else try {
							r = JSON.parse(n.data), u = [], r.$schema ? u = i.util.parseJsonSchema(r) : $.isArray(r) ? pt(r[0], u) : (pt(r, u), wt = new t.CellBindingSource(r)), f = {
								name: "Source"
							}, u.length > 0 && (f.children = u), vt("ztree-container", [f], !0), ut("ztree-container")
						} catch (e) {
							i.MessageBox.show(i.res.ribbon.data.loadDataError, i.res.title, 3)
						}
					})
				}
				function ut(n, t) {
					var i = $.fn.zTree.getZTreeObj(n);
					if (!i) return;
					i.expandAll(!0), ei(t && t.length > 0 ? t : i.getNodes())
				}
				function ei(n) {
					for (var u = "schema-type-button", r = n.length, t, i = 0; i < r; i++) t = n[i], ti(t), t && t.children && t.children.length > 0 && ei(t.children)
				}
				function ti(n) {
					var r, u, t, e, f;
					if (!n || n.level === 0) return;
					r = $("#" + n.tId + "_a");
					if (!r || r.length <= 0) return;
					u = "schema-type-button", r.find("." + u).length > 0 && r.children("." + u).remove();
					if (d(n) || k(n)) return;
					n.dataFieldType ? t = n.dataFieldType : n["enum"] ? t = i.util.DataFieldType.combox : n.type && i.util.DefaultTypeDic[n.type] && (t = i.util.DefaultTypeDic[n.type]), t || (t = i.util.DataFieldType.text), e = t + "-icon", f = "<span class='button " + u + " " + e + "' title='" + i.res.ribbon.data[t] + "'></span>", r.prepend(f), n.dataFieldType = t
				}
				function ii(n) {
					return typeof n === i.util.BasicDataType.Object ? n === null ? i.util.BasicDataType.Null : (n.constructor === [].constructor, i.util.BasicDataType.Array) : typeof n
				}
				function vf() {
					t.TextCellType.prototype.getText = function(n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : ri.apply(this, arguments)
					}, t.CheckBoxCellType.prototype.getText = function(n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : ui.apply(this, arguments)
					}, t.ButtonCellType.prototype.getText = function(n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : fi.apply(this, arguments)
					}, t.HyperLinkCellType.prototype.getText = function(n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : di.apply(this, arguments)
					}, t.ComboBoxCellType.prototype.getText = function(n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : ki.apply(this, arguments)
					}
				}
				function af() {
					t.TextCellType.prototype.getText = ri, t.CheckBoxCellType.prototype.getText = ui, t.ButtonCellType.prototype.getText = fi, t.HyperLinkCellType.prototype.getText = di, t.ComboBoxCellType.prototype.getText = ki
				}
				function vt(n, t, r) {
					if ($.fn.zTree.getZTreeObj(n) !== null) if (r) $.fn.zTree.destroy(n);
					else return;
					var u = {
						view: {
							showIcon: !1,
							addHoverDom: function(n, t) {
								ff(n, t)
							},
							removeHoverDom: removeHoverDom,
							selectedMulti: !1
						},
						edit: {
							enable: !0,
							editNameSelectAll: !0,
							showRemoveBtn: uf,
							showRenameBtn: rf,
							removeTitle: i.res.ribbon.data.remove,
							renameTitle: i.res.ribbon.data.rename
						},
						callback: {
							onDblClick: function(n, t, i) {
								ef(n, i)
							},
							beforeDrop: function(n, t, i, r) {
								return lu(n, t, i, r)
							},
							onDrop: function(n, t, i, r, u) {
								cu(n, t, i, r, u)
							},
							onMouseDown: function(n, t, i) {
								vr(n, i)
							},
							beforeRemove: function(n, t) {
								return sf(n, t)
							}
						}
					};
					$("#" + n).empty(), $.fn.zTree.init($("#" + n), u, t), ut(n)
				}
				function sf(n, t) {
					return t && t.children && t.children.length > 0 ? (i.MessageBox.show(i.res.ribbon.data.removeNodeWarning, i.res.title, 2, 1, function(n, i) {
						var r = $.fn.zTree.getZTreeObj("ztree-container");
						i === 1 && r.removeNode(t, !1)
					}), !1) : !0
				}
				function uf(n, t) {
					return t.level !== 0
				}
				function rf(n, t) {
					return t.level !== 0
				}
				function ff(n, t) {
					var s = $("#" + t.tId + "_span"),
						e, r, o, f, u;
					if (t.editNameFlag || $("#addBtn_" + t.tId).length > 0) return;
					e = "<span class='button add' id='addBtn_" + t.tId + "' title='" + i.res.ribbon.data.addNode + "'></span>", s.after(e), r = $("#addBtn_" + t.tId), r && r.bind("click", function() {
						var i = $.fn.zTree.getZTreeObj(n),
							u = tr(i, t),
							r = i.addNodes(t, [{
								name: tr(i, t)
							}]);
						return i.cancelEditName(), i.editName(r[0]), ti(r[0]), !1
					}), $("#arrayBtn_" + t.tId).length > 0 || t.level === 0 || (o = "<span class='button options' id='arrayBtn_" + t.tId + "' title='" + i.res.ribbon.data.selectOptions + "' onfocus='this.blur();'></span>", f = $("#" + t.tId + "_a"), f.append(o), u = $("#arrayBtn_" + t.tId), u && u.bind("click", function(i) {
						var f = $.fn.zTree.getZTreeObj(n),
							r, u;
						return f.selectNode(t), r = $(".data-binding-celltype-button"), r.button(), u = $(".data-binding-celltype-option").wijpopup({
							autoHide: !0,
							position: {
								of: $(".button.options"),
								my: "center top",
								at: "center bottom"
							}
						}), u.wijpopup("show"), !1
					})), (d(t) || k(t)) && ($("#addBtn_" + t.tId).remove(), $("#arrayBtn_" + t.tId).remove())
				}
				function tr(n, t) {
					var r = "field-",
						u = t.children ? t.children.length : 0,
						i;
					if (t.level === 0) r += u;
					else {
						i = [], i.push(u);
						while (!t || t.level !== 0) i.splice(0, 0, n.getNodeIndex(t)), t = t.getParentNode();
						i.length > 0 && (r += i.join(""))
					}
					return r
				}
				function removeHoverDom(n, t) {
					$("#addBtn_" + t.tId).unbind().remove(), $("#arrayBtn_" + t.tId).unbind().remove()
				}
				function ef(n, t) {
					var f = i.wrapper.spread.getActiveSheet(),
						u, r;
					if (!f) return;
					u = f.getSelections();
					if (u.length <= 0) return;
					if (!t) return;
					r = u[0], bi(t, r.row, r.col, function() {
						nr(t, r.row, r.col)
					})
				}
				function vr(n, t) {
					kr()
				}
				function kr() {
					var n = this;
					bt || ($(document).bind("mousemove.bindingPath", function(n) {
						wr(n)
					}).bind("mouseup.bindingPath", function(n) {
						pr(n)
					}), bt = !0)
				}
				function wr(n) {
					var a = $.fn.zTree.getZTreeObj("ztree-container"),
						s, r, e;
					if (!a) return;
					s = i.wrapper.spread.getActiveSheet(), r = yi(n);
					if (isNaN(r.row) || isNaN(r.col)) return;
					var f = [],
						u, h = s.findTable(r.row, r.col),
						l = a.getSelectedNodes()[0];
					if (h) {
						var o = h.range(),
							y = o.row,
							p = o.col,
							c = l.getParentNode();
						u = c && v(c) === h.bindingPath() && c.dataFieldType === i.util.DataFieldType.table ? new t.Range(y, r.col, o.rowCount, 1) : o, f = b(u)
					} else d(l) ? f = [] : k(l) && s.getCellType(r.row, r.col).constructor !== t.ComboBoxCellType ? f = [] : (e = s.getSelections(), e && e.length > 0 && (u = e[0], u.contains(r.row, r.col, 1, 1) ? f = b(u) : (u = new t.Range(r.row, r.col, 1, 1), f = b(u))));
					fu(f)
				}
				function pr(n) {
					var f, i, r;
					$(document).unbind("mousemove.bindingPath"), $(document).unbind("mouseup.bindingPath"), f = $(".data-binding-decoration"), f.remove(), bt = !1;
					var e = yi(n),
						u = e.row,
						t = e.col;
					if (isNaN(u) || isNaN(t)) return;
					i = $.fn.zTree.getZTreeObj("ztree-container");
					if (!i) return;
					r = i.getSelectedNodes()[0], bi(r, u, t, function() {
						nr(r, u, t)
					})
				}
				function nr(n, r, f) {
					var a = i.wrapper.spread.getActiveSheet(),
						o, l, w, p, c;
					if (!a) return;
					var h = n.getParentNode(),
						e = a.findTable(r, f),
						y = a.getCellType(r, f),
						s = a.getSelections()[0];
					if (n.dataFieldType && n.dataFieldType === i.util.DataFieldType.table) o = v(n), l = tt(o), e ? pi(e, o, l) : s.contains(r, f, 1, 1) ? kt(s, o, l) : (w = new t.Range(r, f, 1, 1), kt(w, o, l));
					else if (e && h && v(h) === e.bindingPath() && h.dataFieldType === i.util.DataFieldType.table) p = v(n).split("."), nu(f - e.range().col, p[p.length - 1], e);
					else if (y && y.constructor === t.ComboBoxCellType && h && h.dataFieldType === i.util.DataFieldType.combox) c = y.items(), c.indexOf(n.name) === -1 && (c.push(n.name), y.items(c));
					else {
						if (d(n)) {
							i.MessageBox.show(i.res.ribbon.data.unallowableTableBindingTip, i.res.title, 2, 0);
							return
						}
						if (k(n)) {
							i.MessageBox.show(i.res.ribbon.data.unallowComboxBindingTip, i.res.title, 2, 0);
							return
						}
						s.contains(r, f, 1, 1) ? (u.row = s.row, u.col = s.col) : (u.row = r, u.col = f), ai(n)
					}
				}
				function bi(n, r, u, f) {
					var h, v, e, s;
					if (!n || isNaN(r) || isNaN(u)) return;
					h = $.fn.zTree.getZTreeObj("ztree-container");
					if (!h) return;
					var y = i.wrapper.spread.getActiveSheet(),
						c = h.getNodesByFilter(vi, !1, n),
						o = 0;
					for (e = 0; e < c.length; e++) v = c[e].level - n.level, o = Math.max(o, v);
					var p = a ? u + o + 1 : u + o,
						w = r + c.length,
						l = !0;
					for (e = r; e <= w; e++) for (s = u; s <= p; s++) if (y.getCellType(e, s).constructor !== t.TextCellType) {
						l = !1;
						break
					}
					l ? f() : i.MessageBox.show(i.res.ribbon.data.overwriteCellTypeWarning, i.res.title, 2, 1, function(n, t) {
						t === 1 && f();
						return
					})
				}
				function vi(n) {
					if (n) if (!d(n) && !k(n)) return !0;
					return !1
				}
				function d(n) {
					var t = $.extend({}, n.getParentNode());
					if (!t || $.isEmptyObject(t)) return !1;
					while (t && t.dataFieldType !== i.util.DataFieldType.table && t.level !== 0) t = t.getParentNode();
					return t && t.level === 0 ? !1 : !0
				}
				function k(n) {
					var t = $.extend({}, n.getParentNode());
					if (!t || $.isEmptyObject(t)) return !1;
					while (t && t.dataFieldType !== i.util.DataFieldType.combox && t.level !== 0) t = t.getParentNode();
					return t && t.level === 0 ? !1 : !0
				}
				function ai(n) {
					var b = $.fn.zTree.getZTreeObj("ztree-container"),
						p, r, f, h, w, l, c, y, o, s, e;
					if (!b) return;
					p = b.getSelectedNodes()[0], r = 0, r = p.level === 0 ? n.level - p.level - 1 : n.level - p.level, f = i.wrapper.spread.getActiveSheet(), h = v(n);
					if (n.dataFieldType === i.util.DataFieldType.table) {
						var g = tt(v(n)),
							k = new t.Range(u.row, u.col + r, 1, 1),
							d = kt(k, h, g);
						d && (u.row += 2);
						return
					} else if (n.dataFieldType === i.util.DataFieldType.combox) {
						w = new t.ComboBoxCellType, l = n["enum"] ? n["enum"] : tt(v(n)), l && l.length > 0 && w.items(l), a ? (f.setValue(u.row, u.col + r, n.name), f.getCell(u.row, u.col + r + 1).bindingPath(h), f.setCellType(u.row, u.col + r + 1, w)) : (f.getCell(u.row, u.col + r).bindingPath(h), f.setCellType(u.row, u.col + r, w)), u.row++;
						return
					}
					c = n.children;
					if (c && c.length > 0) for (n.level !== 0 && (f.setValue(u.row, u.col + r, n.name), u.row++), y = 0; y < c.length; y++) ai(c[y]);
					else {
						o = 0, s = 0, a ? (o = u.row, s = u.col + r + 1, f.setValue(o, s - 1, n.name), f.getCell(o, s).bindingPath(h)) : (o = u.row, s = u.col + r, f.getCell(o, s).bindingPath(h)), u.row++;
						switch (n.dataFieldType) {
						case i.util.DataFieldType.button:
							e = new t.ButtonCellType, e.text("Button");
							break;
						case i.util.DataFieldType.checkbox:
							e = new t.CheckBoxCellType, e.caption("CheckBox");
							break;
						case i.util.DataFieldType.hyperlink:
							e = new t.HyperLinkCellType, e.text("Hyperlink");
							break;
						default:
							break
						}
						e && f.setCellType(o, s, e)
					}
				}
				function yi(n) {
					var t = i.wrapper.spread.getActiveSheet(),
						u, r;
					if (t && t._eventHandler) return u = t._eventHandler, r = u._getCanvasOffset(), t.hitTest(n.pageX - r.left, n.pageY - r.top)
				}
				function v(n) {
					var i = [],
						t = n;
					while (t.level !== 0) i.splice(0, 0, t.name), t = t.getParentNode();
					return i.join(".")
				}
				function lu(n, t, r, u) {
					if (r === null || u != "inner" && !r.parentTId) return !1;
					if (!vi(r)) return !1;
					var e = r.dataFieldType,
						f = i.util.DataFieldType;
					return (e === f.table || e === f.combox) && t[0].children && t[0].children.length > 0 ? !1 : !0
				}
				function cu(n, t, i, r, u) {
					ut(t)
				}
				function treeNodeToArray(n, t) {
					var u, i, r;
					if (!n) return;
					for (u = n.length, i = 0; i < u; i++) r = {}, r.name = n[i].name, n[i].type && (r.type = n[i].type), n[i].dataFieldType && (r.dataFieldType = n[i].dataFieldType), n[i]["enum"] && (r["enum"] = n[i]["enum"]), n[i].children && n[i].children.length > 0 && (r.children = [], yt(n[i].children, r.children)), t.push(r)
				}
				function pt(n, t) {
					$.each(n, function(n, i) {
						var r = {};
						r.name = n, ii(i) === "array" && (r.type = "array"), ii(i) === "object" && (r.children = [], pt(i, r.children)), t.push(r)
					})
				}
				function b(n) {
					var r = i.wrapper.spread.getActiveSheet(),
						s, l, c, f, u, e, o;
					if (!r) return;
					s = r._eventHandler;
					if (!s) return;
					for (l = s._getCanvasOffset(), c = [], f = 0; f <= 2; f++) for (u = 0; u <= 2; u++) {
						var y = r.getViewportLeftColumn(u),
							w = r.getViewportRightColumn(u),
							v = r.getViewportTopRow(f),
							p = r.getViewportBottomRow(f),
							h = new t.Range(v, y, p - v + 1, w - y + 1),
							a = n.getIntersect(h, Math.max(h.rowCount, n.rowCount), Math.max(h.colCount, n.colCount));
						a && (e = new t.Rect, o = r._getRangeRect(f, u, a), e.x = o.x + l.left, e.y = o.y + l.top, e.width = o.width - 2, e.height = o.height - 2, c.push(e))
					}
					return c
				}
				function nu(n, r, u) {
					var s = u._columns,
						o = i.wrapper.spread.getActiveSheet();
					if (!s || !r || !o) return;
					var e = s.slice(0),
						f = new t.TableColumnInfo(n),
						h = u.autoGenerateColumns();
					h ? i.MessageBox.show(i.res.ribbon.data.warningDataField, i.res.title, 2, 1, function(t, i) {
						if (i === 4) return;
						else u.autoGenerateColumns(!1), f.dataField(r), f.name(r), e[n] = f, u.bindColumns(e), o.repaint()
					}) : (f.dataField(r), f.name(r), e[n] = f, u.bindColumns(e), o.repaint())
				}
				function fu(n) {
					var f = $(".data-binding-decoration-container"),
						u, i, r, t;
					f.empty();
					if (!n || n.length <= 0) return;
					for (u = $(document.createDocumentFragment()), i = 0; i < n.length; i++) r = $("<div>").addClass("data-binding-decoration").appendTo(u), t = n[i], r.css({
						width: t.width,
						height: t.height,
						display: "inline-block"
					}), r.offset({
						left: t.x,
						top: t.y
					});
					u.appendTo(f)
				}
				function wi() {
					for (var s = i.wrapper.spread, e = s.sheets, o = e.length, r, n, f, u, t = 0; t < 1e5; t++) for (r = "gcTable" + t, n = 0; n < o; n++) {
						f = e[n], u = f.findTableByName(r);
						if (u) break;
						if (!u && n === o - 1) return r
					}
				}
				function tt(n) {
					var e = [],
						u, f, i, t, r;
					if (!n) return;
					u = $.fn.zTree.getZTreeObj("ztree-container");
					if (!u) return;
					i = n.split("."), i.length > 0 && (f = i[i.length - 1]), t = u.getNodeByParam("name", f);
					if (t && t.children) for (r = 0; r < t.children.length; r++) e.push(t.children[r].name);
					return e
				}
				function pi(n, r, u) {
					var s, f, e, o;
					if (!n) return;
					s = i.wrapper.spread.getActiveSheet();
					if (!s) return;
					n.bindingPath(r), n.autoGenerateColumns(!1);
					var a = u ? u.length : 0,
						l = n.endColumn() - n.startColumn() + 1,
						c = Math.max(a, l),
						h = [];
					n.bindColumns(h);
					if (c > 0) {
						for (f = 0; f < c; f++) e = null, o = new t.TableColumnInfo(f), u && u[f] && (e = u[f], o.name(e)), o.dataField(e), h.push(o);
						n.bindColumns(h)
					}
					nt(), s.repaint()
				}
				function kt(n, t, r) {
					var c;
					if (!n) return;
					var f = i.wrapper.spread.getActiveSheet(),
						l = r ? r.length : 0,
						s = Math.max(2, n.rowCount),
						h = Math.max(l, n.colCount),
						e = n.row === -1 ? 0 : n.row,
						u = n.col === -1 ? 0 : n.col,
						o = null;
					try {
						a ? (c = t.split(".").pop(), f.setValue(e, u, c), o = f.addTable(wi(), e, u + 1, s, h)) : o = f.addTable(wi(), e, u, s, h), pi(o, t, r), f.clearSelection(), f.setSelection(e, a ? u + 1 : u, s, h)
					} catch (v) {
						i.MessageBox.show(v.message, i.res.title, 3, 0);
						return
					}
					return o
				}
				var yf = i.spreadActions.SelectionRangeType,
					p, ir, e, it, cr;
				r.updateCellStyle = updateCellStyle; 
				r.updateFormat = updateFormat; 
				r.updateMerge = updateMerge; 
				r.updateSparkline = updateSparkline; 
				r.updateTable = updateTable; 
				r.updateShowHide = updateShowHide; 
				r.updateProtectLock = updateProtectLock; 
				r.updateZoomToStatusBar = updateZoomToStatusBar; 
				r.resetSpreadNamedStyle = resetSpreadNamedStyle; 
				cr = function(n, t) {
					var r = i.wrapper.spread,
						u = r.getActiveSheet();
					switch (t.item[0].id) {
					case "cellstyle-modify":
						p || (p = new i.FormatDialog), $("#cell-styles-popup").wijpopup("hide"), at(e, i.wrapper.spread), ir = r.getNamedStyle(e), p.open("numbers", undefined, ir, !0), p.setFormatDirectly(!1);
						$(p).on("okClicked", function(n, t) {
							var o, f, s;
							for (i.CellStyleDialog.existedCustomCellStyle.hasOwnProperty(e) ? $.extend(i.CellStyleDialog.existedCustomCellStyle[e], t) : i.CellStyleDialog.buildInCellStyle.hasOwnProperty(e) && $.extend(i.CellStyleDialog.buildInCellStyle[e], t), o = r.sheets, f = 0; f < o.length; f++) o[f].getNamedStyle(e) && $.extend(o[f].getNamedStyle(e), t);
							r.getNamedStyle(e) && $.extend(r.getNamedStyle(e), t), u.repaint(), s = {}, sr(s, t), ot(s, $(it).children()), i.actions.isFileModified = !0
						});
						break;
					case "cellstyle-delete":
						$(it).remove(), i.CellStyleDialog.existedCustomCellStyle.hasOwnProperty(e) ? (delete i.CellStyleDialog.existedCustomCellStyle[e], lt(i.CellStyleDialog.existedCustomCellStyle) && ($(".cell-style-custom-li").addClass("hidden"), $(".custom-cell-styles-preview").parent().addClass("hidden"))) : i.CellStyleDialog.buildInCellStyle.hasOwnProperty(e) && delete i.CellStyleDialog.buildInCellStyle[e], u.getNamedStyle(e) && u.removeNamedStyle(e), r.getNamedStyle(e) && r.removeNamedStyle(e), i.actions.isFileModified = !0;
						break;
					default:
						break
					}
				};
				r.updateRibbonBarStyle = updateRibbonBarStyle; 
				r.attachEvent = attachEvent;
				var lr = !1,
					wt, bt = !1,
					a = !1,
					hi, u = {
						row: 0,
						col: 0
					};
				var ri = t.TextCellType.prototype.getText,
					ui = t.CheckBoxCellType.prototype.getText,
					fi = t.ButtonCellType.prototype.getText,
					di = t.HyperLinkCellType.prototype.getText,
					ki = t.ComboBoxCellType.prototype.getText;
				r.treeNodeToArray = treeNodeToArray, i.loader.ready(function() {
					checkLicense(), init_ribbon(), attachEvent()
				})
			})(i.ribbon || (i.ribbon = {}));
			var r = i.ribbon
		})(t.designer || (t.designer = {}));
		var i = t.designer
	})(n.spread || (n.spread = {}));
	var t = n.spread
})(sku || (sku = {}))